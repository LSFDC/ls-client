; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioFallWeapon.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
PUBLIC	?m_ActionStopType@ioFallWeapon@@2W4ActionStopType@@A ; ioFallWeapon::m_ActionStopType
PUBLIC	?m_DieActionStopType@ioFallWeapon@@2W4ActionStopType@@A ; ioFallWeapon::m_DieActionStopType
_BSS	SEGMENT
?m_ActionStopType@ioFallWeapon@@2W4ActionStopType@@A DD 01H DUP (?) ; ioFallWeapon::m_ActionStopType
?m_DieActionStopType@ioFallWeapon@@2W4ActionStopType@@A DD 01H DUP (?) ; ioFallWeapon::m_DieActionStopType
_BSS	ENDS
;	COMDAT ?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB DD 01H ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
CONST	ENDS
PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	?return1000@@YAIXZ				; return1000
; Function compile flags: /Ogsp
;	COMDAT ?return1000@@YAIXZ
_TEXT	SEGMENT
?return1000@@YAIXZ PROC					; return1000, COMDAT

; 29   : 	__forceinline unsigned int return1000() { __asm mov eax, 1000 };

  00000	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00005	c3		 ret	 0
?return1000@@YAIXZ ENDP					; return1000
_TEXT	ENDS
PUBLIC	??_C@_0DC@ELIAJFP@ioFallWeapon?3?3?$HOioFallWeapon?5?9?5Un@ ; `string'
PUBLIC	??_7ioFallWeapon@@6B@				; ioFallWeapon::`vftable'
PUBLIC	??1ioFallWeapon@@UAE@XZ				; ioFallWeapon::~ioFallWeapon
PUBLIC	??_R4ioFallWeapon@@6B@				; ioFallWeapon::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioFallWeapon@@@8			; ioFallWeapon `RTTI Type Descriptor'
PUBLIC	??_R3ioFallWeapon@@8				; ioFallWeapon::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioFallWeapon@@8				; ioFallWeapon::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioFallWeapon@@8			; ioFallWeapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioWeapon@@8			; ioWeapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWeapon@@@8				; ioWeapon `RTTI Type Descriptor'
PUBLIC	??_R3ioWeapon@@8				; ioWeapon::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWeapon@@8				; ioWeapon::`RTTI Base Class Array'
PUBLIC	?InitResource@ioFallWeapon@@UAE_NXZ		; ioFallWeapon::InitResource
PUBLIC	?DestroyResource@ioFallWeapon@@UAEXPAVioPlayStage@@@Z ; ioFallWeapon::DestroyResource
PUBLIC	?LoadProperty@ioFallWeapon@@UAEXAAVioINILoader@@@Z ; ioFallWeapon::LoadProperty
PUBLIC	?SetStartPosition@ioFallWeapon@@UAEXABUD3DXVECTOR3@@PAVioPlayStage@@@Z ; ioFallWeapon::SetStartPosition
PUBLIC	?Process@ioFallWeapon@@UAEXMPAVioPlayStage@@@Z	; ioFallWeapon::Process
PUBLIC	?IsCollision@ioFallWeapon@@UAE_NPAVioPlayEntity@@_N@Z ; ioFallWeapon::IsCollision
PUBLIC	?GetLocalAttackBox@ioFallWeapon@@UBEABVioOrientBox@@XZ ; ioFallWeapon::GetLocalAttackBox
PUBLIC	?GetType@ioFallWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ ; ioFallWeapon::GetType
PUBLIC	?GetActionStopType@ioFallWeapon@@UBE?AW4ActionStopType@@XZ ; ioFallWeapon::GetActionStopType
PUBLIC	?GetDieActionStopType@ioFallWeapon@@UBE?AW4ActionStopType@@XZ ; ioFallWeapon::GetDieActionStopType
PUBLIC	?UpdateWorldAttackBox@ioFallWeapon@@MAEXM_N@Z	; ioFallWeapon::UpdateWorldAttackBox
EXTRN	??1ioWeapon@@UAE@XZ:PROC			; ioWeapon::~ioWeapon
EXTRN	__imp_??1ioOrientBox@@QAE@XZ:PROC
EXTRN	__imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ:PROC
EXTRN	__imp_?LOG@@3VCLog@@A:BYTE
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?IsAlreadyCollisioned@ioWeapon@@UAE_NPAVioPlayEntity@@@Z:PROC ; ioWeapon::IsAlreadyCollisioned
EXTRN	?AddCollisionEntity@ioWeapon@@UAEXPAVioPlayEntity@@@Z:PROC ; ioWeapon::AddCollisionEntity
EXTRN	?SetOwnerDamageRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerDamageRate
EXTRN	?SetOwnerChargeDamageRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeDamageRate
EXTRN	?SetOwnerChargeForceRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeForceRate
EXTRN	?SetOwnerChargeRangeRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeRangeRate
EXTRN	?SetOwnerChargeSpeedRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeSpeedRate
EXTRN	?SetOwnerChargeBlowRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeBlowRate
EXTRN	?SetOwnerChargeFloatRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeFloatRate
EXTRN	?SetOwnerChargeScaleRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeScaleRate
EXTRN	?SetOwnerChargeExplosionRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeExplosionRate
EXTRN	?SetOwnerChargeWoundedTimeRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeWoundedTimeRate
EXTRN	?SetOwnerChargeLiveTimeRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeLiveTimeRate
EXTRN	?SetOwnerChargeBuffLiveTimeRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeBuffLiveTimeRate
EXTRN	?SetWeaponIndex@ioWeapon@@UAEXK@Z:PROC		; ioWeapon::SetWeaponIndex
EXTRN	?SetGrapplingTargetName@ioWeapon@@UAEXABVioHashString@@@Z:PROC ; ioWeapon::SetGrapplingTargetName
EXTRN	?SetCreateItem@ioWeapon@@UAEXABVioHashString@@@Z:PROC ; ioWeapon::SetCreateItem
EXTRN	?SetTeam@ioWeapon@@UAEXPAVioPlayStage@@W4TeamType@@@Z:PROC ; ioWeapon::SetTeam
EXTRN	?CallReserveAreaWeapon@ioWeapon@@UAEXXZ:PROC	; ioWeapon::CallReserveAreaWeapon
EXTRN	?SetWeaponDead@ioWeapon@@UAEXXZ:PROC		; ioWeapon::SetWeaponDead
EXTRN	?PlayExplosionSound@ioWeapon@@UAEXXZ:PROC	; ioWeapon::PlayExplosionSound
EXTRN	?PlayWoundedSound@ioWeapon@@UAEXPAVioPlayEntity@@@Z:PROC ; ioWeapon::PlayWoundedSound
EXTRN	?PlayDefensedSound@ioWeapon@@UAEXPAVioPlayEntity@@@Z:PROC ; ioWeapon::PlayDefensedSound
EXTRN	?PlayLoopSound@ioWeapon@@UAEXXZ:PROC		; ioWeapon::PlayLoopSound
EXTRN	?StopLoopSound@ioWeapon@@UAEXXZ:PROC		; ioWeapon::StopLoopSound
EXTRN	?GetTargetAirBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ:PROC ; ioWeapon::GetTargetAirBuffList
EXTRN	?GetTargetBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ:PROC ; ioWeapon::GetTargetBuffList
EXTRN	?GetTargetDownBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ:PROC ; ioWeapon::GetTargetDownBuffList
EXTRN	?GetPosition@ioWeapon@@UBEABUD3DXVECTOR3@@XZ:PROC ; ioWeapon::GetPosition
EXTRN	?GetBlowType@ioWeapon@@UBE?AW4BlowTargetType@@XZ:PROC ; ioWeapon::GetBlowType
EXTRN	?GetPushPower@ioWeapon@@UBEMM@Z:PROC		; ioWeapon::GetPushPower
EXTRN	?GetBlowPower@ioWeapon@@UBEMM@Z:PROC		; ioWeapon::GetBlowPower
EXTRN	?GetAirPushPower@ioWeapon@@UBEMM@Z:PROC		; ioWeapon::GetAirPushPower
EXTRN	?GetAirBlowPower@ioWeapon@@UBEMM@Z:PROC		; ioWeapon::GetAirBlowPower
EXTRN	?GetDefensePushPower@ioWeapon@@UBEMM@Z:PROC	; ioWeapon::GetDefensePushPower
EXTRN	?GetCollisionEnableTime@ioWeapon@@UBEKXZ:PROC	; ioWeapon::GetCollisionEnableTime
EXTRN	?SetSylphid@ioWeapon@@UAEHXZ:PROC		; ioWeapon::SetSylphid
EXTRN	?ApplyExtraReserveWeaponByWeaponInfo@ioWeapon@@UAEXPAV1@@Z:PROC ; ioWeapon::ApplyExtraReserveWeaponByWeaponInfo
EXTRN	?SetResistanceAttr@ioWeapon@@UAEXH@Z:PROC	; ioWeapon::SetResistanceAttr
EXTRN	?SetStartCollisionBox@ioWeapon@@UAEXXZ:PROC	; ioWeapon::SetStartCollisionBox
EXTRN	?SetLiveTime@ioWeapon@@UAEXK@Z:PROC		; ioWeapon::SetLiveTime
EXTRN	?SetMoveDir@ioWeapon@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioWeapon::SetMoveDir
EXTRN	?SetMoveSpeed@ioWeapon@@UAEXM@Z:PROC		; ioWeapon::SetMoveSpeed
EXTRN	?SetFloatPower@ioWeapon@@UAEXM@Z:PROC		; ioWeapon::SetFloatPower
EXTRN	?TestMapCollision@ioWeapon@@UAE_NPAVioOpcodeShape@@PAVioPlayStage@@PBUD3DXMATRIX@@@Z:PROC ; ioWeapon::TestMapCollision
EXTRN	?CheckPreCollision@ioWeapon@@UAEXPAVioPlayEntity@@PAVioPlayStage@@@Z:PROC ; ioWeapon::CheckPreCollision
EXTRN	?CheckStructAndDummy@ioWeapon@@UAEXPAVioPlayEntity@@PAVioPlayStage@@@Z:PROC ; ioWeapon::CheckStructAndDummy
EXTRN	?GetDamage@ioWeapon@@UAEMPAVioPlayEntity@@@Z:PROC ; ioWeapon::GetDamage
EXTRN	?GetBaseDamage@ioWeapon@@UAEMPAVioPlayEntity@@@Z:PROC ; ioWeapon::GetBaseDamage
EXTRN	?GetPushAngle@ioWeapon@@UBEMXZ:PROC		; ioWeapon::GetPushAngle
EXTRN	?IsResistanceMagic@ioWeapon@@UAEHPAVioBaseChar@@@Z:PROC ; ioWeapon::IsResistanceMagic
EXTRN	?IsResistanceBomb@ioWeapon@@UAEHPAVioBaseChar@@@Z:PROC ; ioWeapon::IsResistanceBomb
EXTRN	?IsCanMineExplosion@ioWeapon@@UAE_NXZ:PROC	; ioWeapon::IsCanMineExplosion
EXTRN	?CheckGrapplingState@ioWeapon@@UAE?AW4GrapplingType@@XZ:PROC ; ioWeapon::CheckGrapplingState
EXTRN	?CheckCurAttribute@ioWeapon@@UAEXPBVioPlayEntity@@@Z:PROC ; ioWeapon::CheckCurAttribute
EXTRN	?CheckItemNotDrop@ioWeapon@@UAE_NPAVioBaseChar@@@Z:PROC ; ioWeapon::CheckItemNotDrop
EXTRN	?GetWorldAttackBoxList@ioWeapon@@UAEXAAV?$vector@VioOrientBox@@V?$allocator@VioOrientBox@@@std@@@std@@@Z:PROC ; ioWeapon::GetWorldAttackBoxList
EXTRN	?GetAttackDir@ioWeapon@@UBE?AUD3DXVECTOR3@@PBVioPlayEntity@@@Z:PROC ; ioWeapon::GetAttackDir
EXTRN	?GetLiveTime@ioWeapon@@UAEKXZ:PROC		; ioWeapon::GetLiveTime
EXTRN	?GetMoveDir@ioWeapon@@UAE?AUD3DXVECTOR3@@XZ:PROC ; ioWeapon::GetMoveDir
EXTRN	?CheckWeaponCollision@ioWeapon@@UAEXXZ:PROC	; ioWeapon::CheckWeaponCollision
EXTRN	?GetRefreshDuration@ioWeapon@@UAEKXZ:PROC	; ioWeapon::GetRefreshDuration
EXTRN	?GetIgnoreDuration@ioWeapon@@UAEKXZ:PROC	; ioWeapon::GetIgnoreDuration
EXTRN	?GetIgnoreTimeTypeDuration@ioWeapon@@UAEKXZ:PROC ; ioWeapon::GetIgnoreTimeTypeDuration
EXTRN	?GetIgnoreTimeType@ioWeapon@@UAEKXZ:PROC	; ioWeapon::GetIgnoreTimeType
EXTRN	?ApplyWeaponSync@ioWeapon@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z:PROC ; ioWeapon::ApplyWeaponSync
EXTRN	?IsSkillDependency@ioWeapon@@UAE_NABVioHashString@@@Z:PROC ; ioWeapon::IsSkillDependency
EXTRN	?SetSkillDependencyAction@ioWeapon@@UAEXXZ:PROC	; ioWeapon::SetSkillDependencyAction
EXTRN	?GetAttribute@ioWeapon@@MBEPBUWeaponAttribute@@XZ:PROC ; ioWeapon::GetAttribute
EXTRN	?CalcFinalDamage@ioWeapon@@MAEMXZ:PROC		; ioWeapon::CalcFinalDamage
EXTRN	?CalcFinalBoundDamage@ioWeapon@@MAEMXZ:PROC	; ioWeapon::CalcFinalBoundDamage
EXTRN	?CheckPiercing@ioWeapon@@MAE_N_N@Z:PROC		; ioWeapon::CheckPiercing
EXTRN	?ClearCollisionList@ioWeapon@@MAEXXZ:PROC	; ioWeapon::ClearCollisionList
EXTRN	?CheckCreateWeaponList@ioWeapon@@MAEXXZ:PROC	; ioWeapon::CheckCreateWeaponList
EXTRN	?CreateCollisionAreaWeapon@ioWeapon@@MAEXXZ:PROC ; ioWeapon::CreateCollisionAreaWeapon
EXTRN	?SetMapCollision@ioWeapon@@UAEXXZ:PROC		; ioWeapon::SetMapCollision
EXTRN	?IsIgnoreMapCollision@ioWeapon@@UBE_NXZ:PROC	; ioWeapon::IsIgnoreMapCollision
EXTRN	?IsIgnoreTestMapCollision@ioWeapon@@UBE_NXZ:PROC ; ioWeapon::IsIgnoreTestMapCollision
EXTRN	?IsIgnoreMapCollisionEffect@ioWeapon@@UBE_NXZ:PROC ; ioWeapon::IsIgnoreMapCollisionEffect
EXTRN	?AddEffectEvent@ioWeapon@@MAEXPAVioEffect@@@Z:PROC ; ioWeapon::AddEffectEvent
EXTRN	??_EioFallWeapon@@UAEPAXI@Z:PROC		; ioFallWeapon::`vector deleting destructor'
;	COMDAT ??_R2ioWeapon@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iofallweapon.cpp
rdata$r	SEGMENT
??_R2ioWeapon@@8 DD FLAT:??_R1A@?0A@EA@ioWeapon@@8	; ioWeapon::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWeapon@@8
rdata$r	SEGMENT
??_R3ioWeapon@@8 DD 00H					; ioWeapon::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWeapon@@@8
_DATA	SEGMENT
??_R0?AVioWeapon@@@8 DD FLAT:??_7type_info@@6B@		; ioWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWeapon@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWeapon@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWeapon@@8 DD FLAT:??_R0?AVioWeapon@@@8	; ioWeapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioFallWeapon@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioFallWeapon@@8 DD FLAT:??_R0?AVioFallWeapon@@@8 ; ioFallWeapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioFallWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R2ioFallWeapon@@8
rdata$r	SEGMENT
??_R2ioFallWeapon@@8 DD FLAT:??_R1A@?0A@EA@ioFallWeapon@@8 ; ioFallWeapon::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R3ioFallWeapon@@8
rdata$r	SEGMENT
??_R3ioFallWeapon@@8 DD 00H				; ioFallWeapon::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioFallWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioFallWeapon@@@8
_DATA	SEGMENT
??_R0?AVioFallWeapon@@@8 DD FLAT:??_7type_info@@6B@	; ioFallWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioFallWeapon@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioFallWeapon@@6B@
rdata$r	SEGMENT
??_R4ioFallWeapon@@6B@ DD 00H				; ioFallWeapon::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioFallWeapon@@@8
	DD	FLAT:??_R3ioFallWeapon@@8
rdata$r	ENDS
;	COMDAT ??_C@_0DC@ELIAJFP@ioFallWeapon?3?3?$HOioFallWeapon?5?9?5Un@
CONST	SEGMENT
??_C@_0DC@ELIAJFP@ioFallWeapon?3?3?$HOioFallWeapon?5?9?5Un@ DB 'ioFallWea'
	DB	'pon::~ioFallWeapon - UnReleased Resource', 00H ; `string'
CONST	ENDS
;	COMDAT ??_7ioFallWeapon@@6B@
CONST	SEGMENT
??_7ioFallWeapon@@6B@ DD FLAT:??_R4ioFallWeapon@@6B@	; ioFallWeapon::`vftable'
	DD	FLAT:?IsAlreadyCollisioned@ioWeapon@@UAE_NPAVioPlayEntity@@@Z
	DD	FLAT:?AddCollisionEntity@ioWeapon@@UAEXPAVioPlayEntity@@@Z
	DD	FLAT:?SetOwnerDamageRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeDamageRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeForceRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeRangeRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeSpeedRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeBlowRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeFloatRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeScaleRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeExplosionRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeWoundedTimeRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeLiveTimeRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeBuffLiveTimeRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetWeaponIndex@ioWeapon@@UAEXK@Z
	DD	FLAT:?SetGrapplingTargetName@ioWeapon@@UAEXABVioHashString@@@Z
	DD	FLAT:?SetCreateItem@ioWeapon@@UAEXABVioHashString@@@Z
	DD	FLAT:?SetTeam@ioWeapon@@UAEXPAVioPlayStage@@W4TeamType@@@Z
	DD	FLAT:?CallReserveAreaWeapon@ioWeapon@@UAEXXZ
	DD	FLAT:?SetWeaponDead@ioWeapon@@UAEXXZ
	DD	FLAT:?PlayExplosionSound@ioWeapon@@UAEXXZ
	DD	FLAT:?PlayWoundedSound@ioWeapon@@UAEXPAVioPlayEntity@@@Z
	DD	FLAT:?PlayDefensedSound@ioWeapon@@UAEXPAVioPlayEntity@@@Z
	DD	FLAT:?PlayLoopSound@ioWeapon@@UAEXXZ
	DD	FLAT:?StopLoopSound@ioWeapon@@UAEXXZ
	DD	FLAT:?GetTargetAirBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ
	DD	FLAT:?GetTargetBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ
	DD	FLAT:?GetTargetDownBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ
	DD	FLAT:?GetPosition@ioWeapon@@UBEABUD3DXVECTOR3@@XZ
	DD	FLAT:?GetBlowType@ioWeapon@@UBE?AW4BlowTargetType@@XZ
	DD	FLAT:?GetPushPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetBlowPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetAirPushPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetAirBlowPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetDefensePushPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetCollisionEnableTime@ioWeapon@@UBEKXZ
	DD	FLAT:?SetSylphid@ioWeapon@@UAEHXZ
	DD	FLAT:?ApplyExtraReserveWeaponByWeaponInfo@ioWeapon@@UAEXPAV1@@Z
	DD	FLAT:?InitResource@ioFallWeapon@@UAE_NXZ
	DD	FLAT:?DestroyResource@ioFallWeapon@@UAEXPAVioPlayStage@@@Z
	DD	FLAT:?LoadProperty@ioFallWeapon@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?SetResistanceAttr@ioWeapon@@UAEXH@Z
	DD	FLAT:?SetStartCollisionBox@ioWeapon@@UAEXXZ
	DD	FLAT:?SetLiveTime@ioWeapon@@UAEXK@Z
	DD	FLAT:?SetMoveDir@ioWeapon@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?SetMoveSpeed@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetFloatPower@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetStartPosition@ioFallWeapon@@UAEXABUD3DXVECTOR3@@PAVioPlayStage@@@Z
	DD	FLAT:?Process@ioFallWeapon@@UAEXMPAVioPlayStage@@@Z
	DD	FLAT:?IsCollision@ioFallWeapon@@UAE_NPAVioPlayEntity@@_N@Z
	DD	FLAT:?TestMapCollision@ioWeapon@@UAE_NPAVioOpcodeShape@@PAVioPlayStage@@PBUD3DXMATRIX@@@Z
	DD	FLAT:?CheckPreCollision@ioWeapon@@UAEXPAVioPlayEntity@@PAVioPlayStage@@@Z
	DD	FLAT:?CheckStructAndDummy@ioWeapon@@UAEXPAVioPlayEntity@@PAVioPlayStage@@@Z
	DD	FLAT:?GetDamage@ioWeapon@@UAEMPAVioPlayEntity@@@Z
	DD	FLAT:?GetBaseDamage@ioWeapon@@UAEMPAVioPlayEntity@@@Z
	DD	FLAT:?GetPushAngle@ioWeapon@@UBEMXZ
	DD	FLAT:?IsResistanceMagic@ioWeapon@@UAEHPAVioBaseChar@@@Z
	DD	FLAT:?IsResistanceBomb@ioWeapon@@UAEHPAVioBaseChar@@@Z
	DD	FLAT:?IsCanMineExplosion@ioWeapon@@UAE_NXZ
	DD	FLAT:?CheckGrapplingState@ioWeapon@@UAE?AW4GrapplingType@@XZ
	DD	FLAT:?CheckCurAttribute@ioWeapon@@UAEXPBVioPlayEntity@@@Z
	DD	FLAT:?CheckItemNotDrop@ioWeapon@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?GetWorldAttackBoxList@ioWeapon@@UAEXAAV?$vector@VioOrientBox@@V?$allocator@VioOrientBox@@@std@@@std@@@Z
	DD	FLAT:?GetAttackDir@ioWeapon@@UBE?AUD3DXVECTOR3@@PBVioPlayEntity@@@Z
	DD	FLAT:?GetLocalAttackBox@ioFallWeapon@@UBEABVioOrientBox@@XZ
	DD	FLAT:?GetLiveTime@ioWeapon@@UAEKXZ
	DD	FLAT:?GetMoveDir@ioWeapon@@UAE?AUD3DXVECTOR3@@XZ
	DD	FLAT:?CheckWeaponCollision@ioWeapon@@UAEXXZ
	DD	FLAT:?GetType@ioFallWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ
	DD	FLAT:?GetActionStopType@ioFallWeapon@@UBE?AW4ActionStopType@@XZ
	DD	FLAT:?GetDieActionStopType@ioFallWeapon@@UBE?AW4ActionStopType@@XZ
	DD	FLAT:?GetRefreshDuration@ioWeapon@@UAEKXZ
	DD	FLAT:?GetIgnoreDuration@ioWeapon@@UAEKXZ
	DD	FLAT:?GetIgnoreTimeTypeDuration@ioWeapon@@UAEKXZ
	DD	FLAT:?GetIgnoreTimeType@ioWeapon@@UAEKXZ
	DD	FLAT:?ApplyWeaponSync@ioWeapon@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z
	DD	FLAT:?IsSkillDependency@ioWeapon@@UAE_NABVioHashString@@@Z
	DD	FLAT:?SetSkillDependencyAction@ioWeapon@@UAEXXZ
	DD	FLAT:?UpdateWorldAttackBox@ioFallWeapon@@MAEXM_N@Z
	DD	FLAT:?GetAttribute@ioWeapon@@MBEPBUWeaponAttribute@@XZ
	DD	FLAT:?CalcFinalDamage@ioWeapon@@MAEMXZ
	DD	FLAT:?CalcFinalBoundDamage@ioWeapon@@MAEMXZ
	DD	FLAT:?CheckPiercing@ioWeapon@@MAE_N_N@Z
	DD	FLAT:?ClearCollisionList@ioWeapon@@MAEXXZ
	DD	FLAT:?CheckCreateWeaponList@ioWeapon@@MAEXXZ
	DD	FLAT:?CreateCollisionAreaWeapon@ioWeapon@@MAEXXZ
	DD	FLAT:?SetMapCollision@ioWeapon@@UAEXXZ
	DD	FLAT:?IsIgnoreMapCollision@ioWeapon@@UBE_NXZ
	DD	FLAT:?IsIgnoreTestMapCollision@ioWeapon@@UBE_NXZ
	DD	FLAT:?IsIgnoreMapCollisionEffect@ioWeapon@@UBE_NXZ
	DD	FLAT:?AddEffectEvent@ioWeapon@@MAEXPAVioEffect@@@Z
	DD	FLAT:??_EioFallWeapon@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioFallWeapon@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioFallWeapon@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioFallWeapon@@UAE@XZ$1
__ehfuncinfo$??1ioFallWeapon@@UAE@XZ DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??1ioFallWeapon@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ioFallWeapon@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioFallWeapon@@UAE@XZ PROC				; ioFallWeapon::~ioFallWeapon, COMDAT
; _this$ = ecx

; 24   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioFallWeapon@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioFallWeapon@@6B@

; 25   : 	if( m_pFallWeapon )

  00017	83 be 98 08 00
	00 00		 cmp	 DWORD PTR [esi+2200], 0
  0001e	c7 45 fc 01 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 1
  00025	74 16		 je	 SHORT $LN1@ioFallWeap

; 26   : 	{
; 27   : 		LOG.PrintTimeAndLog( 0, "ioFallWeapon::~ioFallWeapon - UnReleased Resource" );

  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0DC@ELIAJFP@ioFallWeapon?3?3?$HOioFallWeapon?5?9?5Un@
  0002c	6a 00		 push	 0
  0002e	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@ioFallWeap:

; 28   : 	}
; 29   : }

  0003d	8d 8e 9c 08 00
	00		 lea	 ecx, DWORD PTR [esi+2204]
  00043	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioOrientBox@@QAE@XZ
  0004d	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00051	8b ce		 mov	 ecx, esi
  00053	e8 00 00 00 00	 call	 ??1ioWeapon@@UAE@XZ	; ioWeapon::~ioWeapon
  00058	e8 00 00 00 00	 call	 __EH_epilog3
  0005d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioFallWeapon@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioWeapon@@UAE@XZ	; ioWeapon::~ioWeapon
__unwindfunclet$??1ioFallWeapon@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 9c 08 00
	00		 add	 ecx, 2204		; 0000089cH
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioOrientBox@@QAE@XZ
__ehhandler$??1ioFallWeapon@@UAE@XZ:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioFallWeapon@@UAE@XZ
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioFallWeapon@@UAE@XZ ENDP				; ioFallWeapon::~ioFallWeapon
PUBLIC	?IsFalling@ioFallWeapon@@QBE_NXZ		; ioFallWeapon::IsFalling
; Function compile flags: /Ogsp
;	COMDAT ?IsFalling@ioFallWeapon@@QBE_NXZ
_TEXT	SEGMENT
?IsFalling@ioFallWeapon@@QBE_NXZ PROC			; ioFallWeapon::IsFalling, COMDAT
; _this$ = ecx

; 137  : 	if( m_FallWeaponState == FS_FALL )

  00000	83 b9 94 08 00
	00 00		 cmp	 DWORD PTR [ecx+2196], 0
  00007	0f 94 c0	 sete	 al

; 138  : 		return true;
; 139  : 
; 140  : 	return false;
; 141  : }

  0000a	c3		 ret	 0
?IsFalling@ioFallWeapon@@QBE_NXZ ENDP			; ioFallWeapon::IsFalling
_TEXT	ENDS
EXTRN	__imp_?DestroyEffect@ioEffectFactory@@QAEXPAVioEffect@@@Z:PROC
EXTRN	__imp_?GetSingleton@ioEffectFactory@@SAAAV1@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?DestroyResource@ioFallWeapon@@UAEXPAVioPlayStage@@@Z
_TEXT	SEGMENT
_pStage$ = 8						; size = 4
?DestroyResource@ioFallWeapon@@UAEXPAVioPlayStage@@@Z PROC ; ioFallWeapon::DestroyResource, COMDAT
; _this$ = ecx

; 144  : {

  00000	56		 push	 esi

; 145  : 	if( m_pFallWeapon )

  00001	8d b1 98 08 00
	00		 lea	 esi, DWORD PTR [ecx+2200]
  00007	8b 06		 mov	 eax, DWORD PTR [esi]
  00009	85 c0		 test	 eax, eax
  0000b	74 12		 je	 SHORT $LN1@DestroyRes

; 146  : 	{
; 147  : 		g_EffectFactory.DestroyEffect( m_pFallWeapon );

  0000d	50		 push	 eax
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioEffectFactory@@SAAAV1@XZ
  00014	8b c8		 mov	 ecx, eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?DestroyEffect@ioEffectFactory@@QAEXPAVioEffect@@@Z

; 148  : 		m_pFallWeapon = NULL;

  0001c	83 26 00	 and	 DWORD PTR [esi], 0
$LN1@DestroyRes:
  0001f	5e		 pop	 esi

; 149  : 	}
; 150  : }

  00020	c2 04 00	 ret	 4
?DestroyResource@ioFallWeapon@@UAEXPAVioPlayStage@@@Z ENDP ; ioFallWeapon::DestroyResource
_TEXT	ENDS
EXTRN	?GetLocalAttackBox@ioWeapon@@UBEABVioOrientBox@@XZ:PROC ; ioWeapon::GetLocalAttackBox
EXTRN	__imp_?GetCollisionBox@ioEffect@@QBEABVioOrientBox@@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?GetLocalAttackBox@ioFallWeapon@@UBEABVioOrientBox@@XZ
_TEXT	SEGMENT
?GetLocalAttackBox@ioFallWeapon@@UBEABVioOrientBox@@XZ PROC ; ioFallWeapon::GetLocalAttackBox, COMDAT
; _this$ = ecx

; 154  : 	if( m_pFallWeapon )

  00000	8b 81 98 08 00
	00		 mov	 eax, DWORD PTR [ecx+2200]
  00006	85 c0		 test	 eax, eax
  00008	74 08		 je	 SHORT $LN1@GetLocalAt

; 155  : 		return m_pFallWeapon->GetCollisionBox();

  0000a	8b c8		 mov	 ecx, eax
  0000c	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_?GetCollisionBox@ioEffect@@QBEABVioOrientBox@@XZ
$LN1@GetLocalAt:

; 156  : 
; 157  : 	return ioWeapon::GetLocalAttackBox();

  00012	e9 00 00 00 00	 jmp	 ?GetLocalAttackBox@ioWeapon@@UBEABVioOrientBox@@XZ ; ioWeapon::GetLocalAttackBox
?GetLocalAttackBox@ioFallWeapon@@UBEABVioOrientBox@@XZ ENDP ; ioFallWeapon::GetLocalAttackBox
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetType@ioFallWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ
_TEXT	SEGMENT
?GetType@ioFallWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ PROC ; ioFallWeapon::GetType, COMDAT
; _this$ = ecx

; 162  : 	return WT_FALL_WEAPON;

  00000	6a 3c		 push	 60			; 0000003cH
  00002	58		 pop	 eax

; 163  : }

  00003	c3		 ret	 0
?GetType@ioFallWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ ENDP ; ioFallWeapon::GetType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetActionStopType@ioFallWeapon@@UBE?AW4ActionStopType@@XZ
_TEXT	SEGMENT
?GetActionStopType@ioFallWeapon@@UBE?AW4ActionStopType@@XZ PROC ; ioFallWeapon::GetActionStopType, COMDAT
; _this$ = ecx

; 167  : 	return m_ActionStopType;

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_ActionStopType@ioFallWeapon@@2W4ActionStopType@@A ; ioFallWeapon::m_ActionStopType

; 168  : }

  00005	c3		 ret	 0
?GetActionStopType@ioFallWeapon@@UBE?AW4ActionStopType@@XZ ENDP ; ioFallWeapon::GetActionStopType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetDieActionStopType@ioFallWeapon@@UBE?AW4ActionStopType@@XZ
_TEXT	SEGMENT
?GetDieActionStopType@ioFallWeapon@@UBE?AW4ActionStopType@@XZ PROC ; ioFallWeapon::GetDieActionStopType, COMDAT
; _this$ = ecx

; 172  : 	return m_DieActionStopType;

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_DieActionStopType@ioFallWeapon@@2W4ActionStopType@@A ; ioFallWeapon::m_DieActionStopType

; 173  : }

  00005	c3		 ret	 0
?GetDieActionStopType@ioFallWeapon@@UBE?AW4ActionStopType@@XZ ENDP ; ioFallWeapon::GetDieActionStopType
_TEXT	ENDS
PUBLIC	?GetMoveSpeed@ioFallWeapon@@QAEMXZ		; ioFallWeapon::GetMoveSpeed
EXTRN	__fltused:DWORD
; Function compile flags: /Ogsp
;	COMDAT ?GetMoveSpeed@ioFallWeapon@@QAEMXZ
_TEXT	SEGMENT
?GetMoveSpeed@ioFallWeapon@@QAEMXZ PROC			; ioFallWeapon::GetMoveSpeed, COMDAT
; _this$ = ecx

; 177  : 	return GetAttribute()->m_fMoveSpeed;

  00000	8b 01		 mov	 eax, DWORD PTR [ecx]
  00002	ff 90 3c 01 00
	00		 call	 DWORD PTR [eax+316]
  00008	d9 80 98 01 00
	00		 fld	 DWORD PTR [eax+408]

; 178  : }

  0000e	c3		 ret	 0
?GetMoveSpeed@ioFallWeapon@@QAEMXZ ENDP			; ioFallWeapon::GetMoveSpeed
_TEXT	ENDS
PUBLIC	?SetFalling@ioFallWeapon@@IAEXXZ		; ioFallWeapon::SetFalling
; Function compile flags: /Ogsp
;	COMDAT ?SetFalling@ioFallWeapon@@IAEXXZ
_TEXT	SEGMENT
?SetFalling@ioFallWeapon@@IAEXXZ PROC			; ioFallWeapon::SetFalling, COMDAT
; _this$ = ecx

; 222  : 	m_FallWeaponState = FS_FALL;

  00000	83 a1 94 08 00
	00 00		 and	 DWORD PTR [ecx+2196], 0

; 223  : }

  00007	c3		 ret	 0
?SetFalling@ioFallWeapon@@IAEXXZ ENDP			; ioFallWeapon::SetFalling
_TEXT	ENDS
PUBLIC	?SetStoping@ioFallWeapon@@IAEXM@Z		; ioFallWeapon::SetStoping
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?SetStoping@ioFallWeapon@@IAEXM@Z
_TEXT	SEGMENT
_fHeight$ = 8						; size = 4
?SetStoping@ioFallWeapon@@IAEXM@Z PROC			; ioFallWeapon::SetStoping, COMDAT
; _this$ = ecx

; 226  : {

  00000	56		 push	 esi

; 227  : 	m_FallWeaponState = FS_STOP;
; 228  : 
; 229  : 	if( m_dwFirstStopTime == 0 )

  00001	8d b1 f0 08 00
	00		 lea	 esi, DWORD PTR [ecx+2288]
  00007	83 3e 00	 cmp	 DWORD PTR [esi], 0
  0000a	c7 81 94 08 00
	00 01 00 00 00	 mov	 DWORD PTR [ecx+2196], 1
  00014	75 10		 jne	 SHORT $LN1@SetStoping

; 230  : 		m_dwFirstStopTime = FRAMEGETTIME();

  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0001c	8b c8		 mov	 ecx, eax
  0001e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00024	89 06		 mov	 DWORD PTR [esi], eax
$LN1@SetStoping:
  00026	5e		 pop	 esi

; 231  : }

  00027	c2 04 00	 ret	 4
?SetStoping@ioFallWeapon@@IAEXM@Z ENDP			; ioFallWeapon::SetStoping
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@XZ				; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
;	COMDAT ??0D3DXVECTOR3@@QAE@XZ
_TEXT	SEGMENT
??0D3DXVECTOR3@@QAE@XZ PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 165  :     D3DXVECTOR3() {};

  00000	8b c1		 mov	 eax, ecx
  00002	c3		 ret	 0
??0D3DXVECTOR3@@QAE@XZ ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??0D3DXVECTOR3@@QAE@MMM@Z			; D3DXVECTOR3::D3DXVECTOR3
; Function compile flags: /Ogsp
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.inl
;	COMDAT ??0D3DXVECTOR3@@QAE@MMM@Z
_TEXT	SEGMENT
_fx$ = 8						; size = 4
_fy$ = 12						; size = 4
_fz$ = 16						; size = 4
??0D3DXVECTOR3@@QAE@MMM@Z PROC				; D3DXVECTOR3::D3DXVECTOR3, COMDAT
; _this$ = ecx

; 303  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 304  :     x = fx;

  00003	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fx$[ebp]
  00008	8b c1		 mov	 eax, ecx
  0000a	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0

; 305  :     y = fy;

  0000e	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _fy$[ebp]
  00013	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0

; 306  :     z = fz;

  00018	f3 0f 10 45 10	 movss	 xmm0, DWORD PTR _fz$[ebp]
  0001d	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 307  : }

  00022	5d		 pop	 ebp
  00023	c2 0c 00	 ret	 12			; 0000000cH
??0D3DXVECTOR3@@QAE@MMM@Z ENDP				; D3DXVECTOR3::D3DXVECTOR3
_TEXT	ENDS
PUBLIC	??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z			; D3DXVECTOR3::operator+
; Function compile flags: /Ogsp
;	COMDAT ??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_v$ = 12						; size = 4
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z PROC			; D3DXVECTOR3::operator+, COMDAT
; _this$ = ecx

; 380  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 381  :     return D3DXVECTOR3(x + v.x, y + v.y, z + v.z);

  00003	8b 55 0c	 mov	 edx, DWORD PTR _v$[ebp]
  00006	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  0000a	f3 0f 10 09	 movss	 xmm1, DWORD PTR [ecx]
  0000e	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  00011	0f 5a c0	 cvtps2pd xmm0, xmm0
  00014	0f 5a c9	 cvtps2pd xmm1, xmm1
  00017	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0001b	f3 0f 10 49 04	 movss	 xmm1, DWORD PTR [ecx+4]
  00020	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00024	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00028	f3 0f 10 42 04	 movss	 xmm0, DWORD PTR [edx+4]
  0002d	0f 5a c0	 cvtps2pd xmm0, xmm0
  00030	0f 5a c9	 cvtps2pd xmm1, xmm1
  00033	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00037	f3 0f 10 49 08	 movss	 xmm1, DWORD PTR [ecx+8]
  0003c	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00040	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00045	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  0004a	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004d	0f 5a c9	 cvtps2pd xmm1, xmm1
  00050	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00054	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00058	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 382  : }

  0005d	5d		 pop	 ebp
  0005e	c2 08 00	 ret	 8
??HD3DXVECTOR3@@QBE?AU0@ABU0@@Z ENDP			; D3DXVECTOR3::operator+
_TEXT	ENDS
PUBLIC	??DD3DXVECTOR3@@QBE?AU0@M@Z			; D3DXVECTOR3::operator*
; Function compile flags: /Ogsp
;	COMDAT ??DD3DXVECTOR3@@QBE?AU0@M@Z
_TEXT	SEGMENT
___$ReturnUdt$ = 8					; size = 4
_f$ = 12						; size = 4
??DD3DXVECTOR3@@QBE?AU0@M@Z PROC			; D3DXVECTOR3::operator*, COMDAT
; _this$ = ecx

; 392  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 393  :     return D3DXVECTOR3(x * f, y * f, z * f);

  00003	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  00008	f3 0f 10 01	 movss	 xmm0, DWORD PTR [ecx]
  0000c	8b 45 08	 mov	 eax, DWORD PTR ___$ReturnUdt$[ebp]
  0000f	0f 5a c0	 cvtps2pd xmm0, xmm0
  00012	0f 5a c9	 cvtps2pd xmm1, xmm1
  00015	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00019	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  0001e	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00022	f3 0f 11 00	 movss	 DWORD PTR [eax], xmm0
  00026	f3 0f 10 41 04	 movss	 xmm0, DWORD PTR [ecx+4]
  0002b	0f 5a c0	 cvtps2pd xmm0, xmm0
  0002e	0f 5a c9	 cvtps2pd xmm1, xmm1
  00031	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00035	f3 0f 10 4d 0c	 movss	 xmm1, DWORD PTR _f$[ebp]
  0003a	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0003e	f3 0f 11 40 04	 movss	 DWORD PTR [eax+4], xmm0
  00043	f3 0f 10 41 08	 movss	 xmm0, DWORD PTR [ecx+8]
  00048	0f 5a c0	 cvtps2pd xmm0, xmm0
  0004b	0f 5a c9	 cvtps2pd xmm1, xmm1
  0004e	f2 0f 59 c1	 mulsd	 xmm0, xmm1
  00052	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  00056	f3 0f 11 40 08	 movss	 DWORD PTR [eax+8], xmm0

; 394  : }

  0005b	5d		 pop	 ebp
  0005c	c2 08 00	 ret	 8
??DD3DXVECTOR3@@QBE?AU0@M@Z ENDP			; D3DXVECTOR3::operator*
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	?IsLive@ioWeapon@@QBE_NXZ			; ioWeapon::IsLive
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioweapon.h
;	COMDAT ?IsLive@ioWeapon@@QBE_NXZ
_TEXT	SEGMENT
?IsLive@ioWeapon@@QBE_NXZ PROC				; ioWeapon::IsLive, COMDAT
; _this$ = ecx

; 533  : 	inline bool IsLive() const { return m_bLive; }

  00000	8a 81 82 05 00
	00		 mov	 al, BYTE PTR [ecx+1410]
  00006	c3		 ret	 0
?IsLive@ioWeapon@@QBE_NXZ ENDP				; ioWeapon::IsLive
_TEXT	ENDS
PUBLIC	?GetParentSceneNode@ioWeapon@@QBEPAVioSceneNode@@XZ ; ioWeapon::GetParentSceneNode
; Function compile flags: /Ogsp
;	COMDAT ?GetParentSceneNode@ioWeapon@@QBEPAVioSceneNode@@XZ
_TEXT	SEGMENT
?GetParentSceneNode@ioWeapon@@QBEPAVioSceneNode@@XZ PROC ; ioWeapon::GetParentSceneNode, COMDAT
; _this$ = ecx

; 797  : 	ioSceneNode* GetParentSceneNode() const { return m_pSceneNode; }

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetParentSceneNode@ioWeapon@@QBEPAVioSceneNode@@XZ ENDP ; ioWeapon::GetParentSceneNode
_TEXT	ENDS
PUBLIC	??0ioFallWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z ; ioFallWeapon::ioFallWeapon
EXTRN	__imp_??0ioOrientBox@@QAE@XZ:PROC
EXTRN	??0ioWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z:PROC ; ioWeapon::ioWeapon
;	COMDAT xdata$x
; File c:\program files (x86)\microsoft directx sdk (june 2010)\include\d3dx9math.h
xdata$x	SEGMENT
__unwindtable$??0ioFallWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioFallWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z$0
__ehfuncinfo$??0ioFallWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??0ioFallWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iofallweapon.cpp
xdata$x	ENDS
;	COMDAT ??0ioFallWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pOwner$ = 8						; size = 4
_pAttr$ = 12						; size = 4
??0ioFallWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z PROC ; ioFallWeapon::ioFallWeapon, COMDAT
; _this$ = ecx

; 15   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioFallWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 75 0c	 push	 DWORD PTR _pAttr$[ebp]
  00014	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  00017	e8 00 00 00 00	 call	 ??0ioWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z ; ioWeapon::ioWeapon
  0001c	33 db		 xor	 ebx, ebx
  0001e	8d 8e 9c 08 00
	00		 lea	 ecx, DWORD PTR [esi+2204]
  00024	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioFallWeapon@@6B@
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioOrientBox@@QAE@XZ

; 16   : 	m_pFallWeapon = NULL;

  00033	89 9e 98 08 00
	00		 mov	 DWORD PTR [esi+2200], ebx

; 17   : 	m_FallWeaponState = FS_FALL;

  00039	89 9e 94 08 00
	00		 mov	 DWORD PTR [esi+2196], ebx

; 18   : 
; 19   : 	m_bResistance = false;

  0003f	88 9e 3c 06 00
	00		 mov	 BYTE PTR [esi+1596], bl

; 20   : 	m_dwFirstStopTime = 0;

  00045	89 9e f0 08 00
	00		 mov	 DWORD PTR [esi+2288], ebx

; 21   : }

  0004b	8b c6		 mov	 eax, esi
  0004d	e8 00 00 00 00	 call	 __EH_epilog3
  00052	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioFallWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioWeapon@@UAE@XZ	; ioWeapon::~ioWeapon
__ehhandler$??0ioFallWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioFallWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioFallWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z ENDP ; ioFallWeapon::ioFallWeapon
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioFallWeapon@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioFallWeapon@@UAEPAXI@Z PROC			; ioFallWeapon::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioFallWeapon@@UAE@XZ	; ioFallWeapon::~ioFallWeapon
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioFallWeapon@@UAEPAXI@Z ENDP			; ioFallWeapon::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	?CreateEffect@ioFallWeapon@@IAE_NABVioHashString@@@Z ; ioFallWeapon::CreateEffect
EXTRN	__imp_?CreateEffect@ioEffectFactory@@QAEPAVioEffect@@ABVioHashString@@@Z:PROC
;	COMDAT __real@4f800000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iofallweapon.cpp
CONST	ENDS
;	COMDAT ?CreateEffect@ioFallWeapon@@IAE_NABVioHashString@@@Z
_TEXT	SEGMENT
tv208 = 8						; size = 4
tv206 = 8						; size = 4
tv204 = 8						; size = 4
_szFileName$ = 8					; size = 4
?CreateEffect@ioFallWeapon@@IAE_NABVioHashString@@@Z PROC ; ioFallWeapon::CreateEffect, COMDAT
; _this$ = ecx

; 51   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 52   : 	m_pFallWeapon = g_EffectFactory.CreateEffect( szFileName );

  00004	ff 75 08	 push	 DWORD PTR _szFileName$[ebp]
  00007	8b f1		 mov	 esi, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioEffectFactory@@SAAAV1@XZ
  0000f	8b c8		 mov	 ecx, eax
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateEffect@ioEffectFactory@@QAEPAVioEffect@@ABVioHashString@@@Z
  00017	89 86 98 08 00
	00		 mov	 DWORD PTR [esi+2200], eax

; 53   : 	if( !m_pFallWeapon )

  0001d	85 c0		 test	 eax, eax
  0001f	75 04		 jne	 SHORT $LN1@CreateEffe

; 54   : 		return false;

  00021	32 c0		 xor	 al, al
  00023	eb 7e		 jmp	 SHORT $LN2@CreateEffe
$LN1@CreateEffe:

; 55   : 
; 56   : 	GetParentSceneNode()->AttachObject( m_pFallWeapon );

  00025	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00028	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002a	53		 push	 ebx
  0002b	57		 push	 edi
  0002c	83 c0 14	 add	 eax, 20			; 00000014H
  0002f	50		 push	 eax
  00030	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]

; 57   : 	GetParentSceneNode()->SetScale( FLOAT1, FLOAT1, FLOAT1 );

  00036	8b 4e 04	 mov	 ecx, DWORD PTR [esi+4]
  00039	b8 01 00 00 00	 mov	 eax, 1
  0003e	8b d0		 mov	 edx, eax
  00040	b8 01 00 00 00	 mov	 eax, 1
  00045	8b f8		 mov	 edi, eax
  00047	b8 01 00 00 00	 mov	 eax, 1
  0004c	8b 19		 mov	 ebx, DWORD PTR [ecx]
  0004e	89 55 08	 mov	 DWORD PTR tv208[ebp], edx
  00051	db 45 08	 fild	 DWORD PTR tv208[ebp]
  00054	85 d2		 test	 edx, edx
  00056	79 06		 jns	 SHORT $LN16@CreateEffe
  00058	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN16@CreateEffe:
  0005e	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00061	89 7d 08	 mov	 DWORD PTR tv206[ebp], edi
  00064	d9 5c 24 08	 fstp	 DWORD PTR [esp+8]
  00068	db 45 08	 fild	 DWORD PTR tv206[ebp]
  0006b	85 ff		 test	 edi, edi
  0006d	79 06		 jns	 SHORT $LN17@CreateEffe
  0006f	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN17@CreateEffe:
  00075	89 45 08	 mov	 DWORD PTR tv204[ebp], eax
  00078	d9 5c 24 04	 fstp	 DWORD PTR [esp+4]
  0007c	db 45 08	 fild	 DWORD PTR tv204[ebp]
  0007f	85 c0		 test	 eax, eax
  00081	79 06		 jns	 SHORT $LN18@CreateEffe
  00083	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN18@CreateEffe:
  00089	d9 1c 24	 fstp	 DWORD PTR [esp]
  0008c	ff 53 1c	 call	 DWORD PTR [ebx+28]

; 58   : 
; 59   : 	AddEffectEvent( m_pFallWeapon );

  0008f	ff b6 98 08 00
	00		 push	 DWORD PTR [esi+2200]
  00095	8b 06		 mov	 eax, DWORD PTR [esi]
  00097	8b ce		 mov	 ecx, esi
  00099	ff 90 68 01 00
	00		 call	 DWORD PTR [eax+360]
  0009f	5f		 pop	 edi

; 60   : 	return true;

  000a0	b0 01		 mov	 al, 1
  000a2	5b		 pop	 ebx
$LN2@CreateEffe:
  000a3	5e		 pop	 esi

; 61   : }

  000a4	5d		 pop	 ebp
  000a5	c2 04 00	 ret	 4
?CreateEffect@ioFallWeapon@@IAE_NABVioHashString@@@Z ENDP ; ioFallWeapon::CreateEffect
_TEXT	ENDS
PUBLIC	_vPos$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	?SetPosition@ioWeapon@@QAEXABUD3DXVECTOR3@@@Z:PROC ; ioWeapon::SetPosition
EXTRN	___security_cookie:DWORD
; Function compile flags: /Ogsp
;	COMDAT ?SetStartPosition@ioFallWeapon@@UAEXABUD3DXVECTOR3@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
_vPos$GSCopy$ = -20					; size = 4
_vNewPos$530562 = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_vPos$ = 8						; size = 4
_pStage$ = 12						; size = 4
?SetStartPosition@ioFallWeapon@@UAEXABUD3DXVECTOR3@@PAVioPlayStage@@@Z PROC ; ioFallWeapon::SetStartPosition, COMDAT
; _this$ = ecx

; 64   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b 75 08	 mov	 esi, DWORD PTR _vPos$[ebp]
  00015	57		 push	 edi
  00016	8b d9		 mov	 ebx, ecx

; 65   : 	m_vStartPos = vPos;

  00018	8d 83 e0 08 00
	00		 lea	 eax, DWORD PTR [ebx+2272]

; 66   : 	SetPosition( m_vStartPos );
; 67   : 
; 68   : 	if( m_pFallWeapon )
; 69   : 	{
; 70   : 		D3DXVECTOR3 vNewPos( vPos.x, vPos.y+m_fStartHeight, vPos.z );

  0001e	89 75 ec	 mov	 DWORD PTR _vPos$GSCopy$[ebp], esi
  00021	8b f8		 mov	 edi, eax
  00023	a5		 movsd
  00024	a5		 movsd
  00025	50		 push	 eax
  00026	a5		 movsd
  00027	e8 00 00 00 00	 call	 ?SetPosition@ioWeapon@@QAEXABUD3DXVECTOR3@@@Z ; ioWeapon::SetPosition
  0002c	83 bb 98 08 00
	00 00		 cmp	 DWORD PTR [ebx+2200], 0
  00033	74 41		 je	 SHORT $LN1@SetStartPo
  00035	8b 45 ec	 mov	 eax, DWORD PTR _vPos$GSCopy$[ebp]
  00038	f3 0f 10 00	 movss	 xmm0, DWORD PTR [eax]
  0003c	f3 0f 10 48 04	 movss	 xmm1, DWORD PTR [eax+4]
  00041	f3 0f 11 45 f0	 movss	 DWORD PTR _vNewPos$530562[ebp], xmm0
  00046	f3 0f 10 83 ec
	08 00 00	 movss	 xmm0, DWORD PTR [ebx+2284]
  0004e	0f 5a c0	 cvtps2pd xmm0, xmm0
  00051	0f 5a c9	 cvtps2pd xmm1, xmm1
  00054	f2 0f 58 c1	 addsd	 xmm0, xmm1
  00058	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  0005c	f3 0f 11 45 f4	 movss	 DWORD PTR _vNewPos$530562[ebp+4], xmm0
  00061	f3 0f 10 40 08	 movss	 xmm0, DWORD PTR [eax+8]

; 71   : 		SetPosition( vNewPos );

  00066	8d 45 f0	 lea	 eax, DWORD PTR _vNewPos$530562[ebp]
  00069	50		 push	 eax
  0006a	8b cb		 mov	 ecx, ebx
  0006c	f3 0f 11 45 f8	 movss	 DWORD PTR _vNewPos$530562[ebp+8], xmm0
  00071	e8 00 00 00 00	 call	 ?SetPosition@ioWeapon@@QAEXABUD3DXVECTOR3@@@Z ; ioWeapon::SetPosition
$LN1@SetStartPo:

; 72   : 	}
; 73   : }

  00076	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00079	5f		 pop	 edi
  0007a	5e		 pop	 esi
  0007b	33 cd		 xor	 ecx, ebp
  0007d	5b		 pop	 ebx
  0007e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00083	c9		 leave
  00084	c2 08 00	 ret	 8
?SetStartPosition@ioFallWeapon@@UAEXABUD3DXVECTOR3@@PAVioPlayStage@@@Z ENDP ; ioFallWeapon::SetStartPosition
_TEXT	ENDS
PUBLIC	__real@0000000000000000
PUBLIC	_pStage$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?OnFalling@ioFallWeapon@@IAEXMPAVioPlayStage@@@Z ; ioFallWeapon::OnFalling
EXTRN	?GetMapHeightForBlockGuid@ioPlayStage@@QAEMABUD3DXVECTOR3@@ABVioOrientBox@@@Z:PROC ; ioPlayStage::GetMapHeightForBlockGuid
;	COMDAT __real@0000000000000000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@0000000000000000 DQ 00000000000000000r	; 0
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iofallweapon.cpp
CONST	ENDS
;	COMDAT ?OnFalling@ioFallWeapon@@IAEXMPAVioPlayStage@@@Z
_TEXT	SEGMENT
_vNewPos$ = -52						; size = 12
$T530583 = -52						; size = 12
tv437 = -40						; size = 4
tv410 = -40						; size = 4
_fMoveDist$ = -36					; size = 4
tv407 = -32						; size = 4
_pStage$GSCopy$ = -32					; size = 4
_fMapHeight$ = -32					; size = 4
_vPrePos$ = -28						; size = 12
_vMoveAmt$ = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_fTimePerSec$ = 8					; size = 4
_pStage$ = 12						; size = 4
?OnFalling@ioFallWeapon@@IAEXMPAVioPlayStage@@@Z PROC	; ioFallWeapon::OnFalling, COMDAT
; _this$ = ecx

; 89   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 34	 sub	 esp, 52			; 00000034H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _pStage$[ebp]
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	8b d9		 mov	 ebx, ecx

; 101  : 
; 102  : 	UpdateWorldAttackBox( fTimePerSec, false );

  00017	89 45 e0	 mov	 DWORD PTR _pStage$GSCopy$[ebp], eax
  0001a	8b 03		 mov	 eax, DWORD PTR [ebx]
  0001c	57		 push	 edi
  0001d	ff 50 70	 call	 DWORD PTR [eax+112]
  00020	8b f0		 mov	 esi, eax
  00022	8d 7d e4	 lea	 edi, DWORD PTR _vPrePos$[ebp]
  00025	a5		 movsd
  00026	a5		 movsd
  00027	8b cb		 mov	 ecx, ebx
  00029	a5		 movsd
  0002a	e8 00 00 00 00	 call	 ?GetMoveSpeed@ioFallWeapon@@QAEMXZ ; ioFallWeapon::GetMoveSpeed
  0002f	d8 4d 08	 fmul	 DWORD PTR _fTimePerSec$[ebp]
  00032	d9 5d dc	 fstp	 DWORD PTR _fMoveDist$[ebp]

; 90   : 	D3DXVECTOR3 vPrePos = GetPosition();
; 91   : 	float fMoveDist = GetMoveSpeed() * fTimePerSec;
; 92   : 	D3DXVECTOR3 vMoveAmt = D3DXVECTOR3( 0.0f, -FLOAT1, 0.0f ) * fMoveDist;

  00035	b8 01 00 00 00	 mov	 eax, 1

; 101  : 
; 102  : 	UpdateWorldAttackBox( fTimePerSec, false );

  0003a	89 45 d8	 mov	 DWORD PTR tv437[ebp], eax
  0003d	db 45 d8	 fild	 DWORD PTR tv437[ebp]
  00040	85 c0		 test	 eax, eax
  00042	79 06		 jns	 SHORT $LN22@OnFalling

; 90   : 	D3DXVECTOR3 vPrePos = GetPosition();
; 91   : 	float fMoveDist = GetMoveSpeed() * fTimePerSec;
; 92   : 	D3DXVECTOR3 vMoveAmt = D3DXVECTOR3( 0.0f, -FLOAT1, 0.0f ) * fMoveDist;

  00044	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN22@OnFalling:
  0004a	f3 0f 10 45 dc	 movss	 xmm0, DWORD PTR _fMoveDist$[ebp]
  0004f	d9 e0		 fchs
  00051	f3 0f 10 55 dc	 movss	 xmm2, DWORD PTR _fMoveDist$[ebp]
  00056	d9 5d d0	 fstp	 DWORD PTR $T530583[ebp+4]
  00059	f3 0f 10 4d d0	 movss	 xmm1, DWORD PTR $T530583[ebp+4]

; 93   : 
; 94   : 	D3DXVECTOR3 vNewPos = vPrePos + vMoveAmt;
; 95   : 	float fMapHeight = pStage->GetMapHeightForBlockGuid( vPrePos, GetLocalAttackBox() );

  0005e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00060	0f 5a c0	 cvtps2pd xmm0, xmm0
  00063	f2 0f 59 05 00
	00 00 00	 mulsd	 xmm0, QWORD PTR __real@0000000000000000
  0006b	f2 0f 5a c0	 cvtsd2ss xmm0, xmm0
  0006f	0f 5a c9	 cvtps2pd xmm1, xmm1
  00072	f3 0f 11 45 f0	 movss	 DWORD PTR _vMoveAmt$[ebp], xmm0
  00077	f3 0f 11 45 f8	 movss	 DWORD PTR _vMoveAmt$[ebp+8], xmm0
  0007c	f3 0f 10 45 e8	 movss	 xmm0, DWORD PTR _vPrePos$[ebp+4]
  00081	0f 5a d2	 cvtps2pd xmm2, xmm2
  00084	f2 0f 59 ca	 mulsd	 xmm1, xmm2
  00088	66 0f 5a c9	 cvtpd2ps xmm1, xmm1
  0008c	f3 0f 11 4d f4	 movss	 DWORD PTR _vMoveAmt$[ebp+4], xmm1
  00091	0f 5a c0	 cvtps2pd xmm0, xmm0
  00094	f3 0f 5a c9	 cvtss2sd xmm1, xmm1
  00098	f2 0f 58 c1	 addsd	 xmm0, xmm1
  0009c	66 0f 5a c0	 cvtpd2ps xmm0, xmm0
  000a0	8b cb		 mov	 ecx, ebx
  000a2	f3 0f 11 45 d0	 movss	 DWORD PTR _vNewPos$[ebp+4], xmm0
  000a7	ff 90 00 01 00
	00		 call	 DWORD PTR [eax+256]
  000ad	8b 4d e0	 mov	 ecx, DWORD PTR _pStage$GSCopy$[ebp]
  000b0	50		 push	 eax
  000b1	8d 45 e4	 lea	 eax, DWORD PTR _vPrePos$[ebp]
  000b4	50		 push	 eax
  000b5	e8 00 00 00 00	 call	 ?GetMapHeightForBlockGuid@ioPlayStage@@QAEMABUD3DXVECTOR3@@ABVioOrientBox@@@Z ; ioPlayStage::GetMapHeightForBlockGuid
  000ba	d9 5d e0	 fstp	 DWORD PTR _fMapHeight$[ebp]

; 96   : 
; 97   : 	if( vNewPos.y < fMapHeight )

  000bd	f3 0f 10 4d d0	 movss	 xmm1, DWORD PTR _vNewPos$[ebp+4]
  000c2	f3 0f 10 45 e0	 movss	 xmm0, DWORD PTR _fMapHeight$[ebp]
  000c7	0f 5a c9	 cvtps2pd xmm1, xmm1
  000ca	0f 5a d0	 cvtps2pd xmm2, xmm0
  000cd	66 0f 2f d1	 comisd	 xmm2, xmm1
  000d1	76 0f		 jbe	 SHORT $LN3@OnFalling

; 98   : 		SetStoping( fMapHeight );

  000d3	51		 push	 ecx
  000d4	8b cb		 mov	 ecx, ebx
  000d6	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  000db	e8 00 00 00 00	 call	 ?SetStoping@ioFallWeapon@@IAEXM@Z ; ioFallWeapon::SetStoping

; 99   : 	else

  000e0	eb 0e		 jmp	 SHORT $LN2@OnFalling
$LN3@OnFalling:

; 100  : 		GetParentSceneNode()->Translate( vMoveAmt );

  000e2	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  000e5	8b 01		 mov	 eax, DWORD PTR [ecx]
  000e7	6a 01		 push	 1
  000e9	8d 55 f0	 lea	 edx, DWORD PTR _vMoveAmt$[ebp]
  000ec	52		 push	 edx
  000ed	ff 50 3c	 call	 DWORD PTR [eax+60]
$LN2@OnFalling:

; 101  : 
; 102  : 	UpdateWorldAttackBox( fTimePerSec, false );

  000f0	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  000f5	8b 03		 mov	 eax, DWORD PTR [ebx]
  000f7	6a 00		 push	 0
  000f9	51		 push	 ecx
  000fa	8b cb		 mov	 ecx, ebx
  000fc	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00101	ff 90 38 01 00
	00		 call	 DWORD PTR [eax+312]
  00107	5f		 pop	 edi

; 103  : 
; 104  : 	if( m_pFallWeapon )

  00108	8d 8b 98 08 00
	00		 lea	 ecx, DWORD PTR [ebx+2200]
  0010e	83 39 00	 cmp	 DWORD PTR [ecx], 0
  00111	5e		 pop	 esi
  00112	5b		 pop	 ebx
  00113	74 2c		 je	 SHORT $LN1@OnFalling

; 105  : 	{
; 106  : 		m_pFallWeapon->Update( fTimePerSec * FLOAT1000 );

  00115	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  0011a	8b 09		 mov	 ecx, DWORD PTR [ecx]
  0011c	83 c1 14	 add	 ecx, 20			; 00000014H
  0011f	8b 11		 mov	 edx, DWORD PTR [ecx]
  00121	89 45 d8	 mov	 DWORD PTR tv410[ebp], eax
  00124	db 45 d8	 fild	 DWORD PTR tv410[ebp]
  00127	85 c0		 test	 eax, eax
  00129	79 06		 jns	 SHORT $LN23@OnFalling
  0012b	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN23@OnFalling:
  00131	d8 4d 08	 fmul	 DWORD PTR _fTimePerSec$[ebp]
  00134	51		 push	 ecx
  00135	d9 5d e0	 fstp	 DWORD PTR tv407[ebp]
  00138	d9 45 e0	 fld	 DWORD PTR tv407[ebp]
  0013b	d9 1c 24	 fstp	 DWORD PTR [esp]
  0013e	ff 52 40	 call	 DWORD PTR [edx+64]
$LN1@OnFalling:

; 107  : 	}
; 108  : }

  00141	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00144	33 cd		 xor	 ecx, ebp
  00146	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0014b	c9		 leave
  0014c	c2 08 00	 ret	 8
?OnFalling@ioFallWeapon@@IAEXMPAVioPlayStage@@@Z ENDP	; ioFallWeapon::OnFalling
_TEXT	ENDS
PUBLIC	_pStage$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?OnStoping@ioFallWeapon@@IAEXMPAVioPlayStage@@@Z ; ioFallWeapon::OnStoping
; Function compile flags: /Ogsp
;	COMDAT ?OnStoping@ioFallWeapon@@IAEXMPAVioPlayStage@@@Z
_TEXT	SEGMENT
tv208 = -20						; size = 4
tv205 = -20						; size = 4
_pStage$GSCopy$ = -20					; size = 4
_fMapHeight$ = -20					; size = 4
_vPrePos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_fTimePerSec$ = 8					; size = 4
_pStage$ = 12						; size = 4
?OnStoping@ioFallWeapon@@IAEXMPAVioPlayStage@@@Z PROC	; ioFallWeapon::OnStoping, COMDAT
; _this$ = ecx

; 111  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 0c	 mov	 eax, DWORD PTR _pStage$[ebp]
  00013	53		 push	 ebx
  00014	8b d9		 mov	 ebx, ecx

; 127  : 	}
; 128  : 
; 129  : 	if( m_pFallWeapon )

  00016	89 45 ec	 mov	 DWORD PTR _pStage$GSCopy$[ebp], eax
  00019	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  0001f	8b c8		 mov	 ecx, eax
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00027	8b 8b f0 08 00
	00		 mov	 ecx, DWORD PTR [ebx+2288]
  0002d	03 8b d8 04 00
	00		 add	 ecx, DWORD PTR [ebx+1240]
  00033	3b c8		 cmp	 ecx, eax
  00035	8b 03		 mov	 eax, DWORD PTR [ebx]
  00037	8b cb		 mov	 ecx, ebx
  00039	73 08		 jae	 SHORT $LN3@OnStoping

; 112  : 	DWORD dwCurTime = FRAMEGETTIME();
; 113  : 
; 114  : 	if( m_dwFirstStopTime+m_dwLiveTime < dwCurTime )
; 115  : 	{
; 116  : 		SetWeaponDead();

  0003b	ff 50 4c	 call	 DWORD PTR [eax+76]

; 117  : 		return;

  0003e	e9 8c 00 00 00	 jmp	 $LN1@OnStoping
$LN3@OnStoping:
  00043	56		 push	 esi
  00044	57		 push	 edi

; 118  : 	}
; 119  : 
; 120  : 	D3DXVECTOR3 vPrePos = GetPosition();

  00045	ff 50 70	 call	 DWORD PTR [eax+112]
  00048	8b f0		 mov	 esi, eax

; 121  : 	float fMapHeight = pStage->GetMapHeightForBlockGuid( vPrePos, GetLocalAttackBox() );

  0004a	8b 03		 mov	 eax, DWORD PTR [ebx]
  0004c	8d 7d f0	 lea	 edi, DWORD PTR _vPrePos$[ebp]
  0004f	a5		 movsd
  00050	a5		 movsd
  00051	8b cb		 mov	 ecx, ebx
  00053	a5		 movsd
  00054	ff 90 00 01 00
	00		 call	 DWORD PTR [eax+256]
  0005a	8b 4d ec	 mov	 ecx, DWORD PTR _pStage$GSCopy$[ebp]
  0005d	50		 push	 eax
  0005e	8d 45 f0	 lea	 eax, DWORD PTR _vPrePos$[ebp]
  00061	50		 push	 eax
  00062	e8 00 00 00 00	 call	 ?GetMapHeightForBlockGuid@ioPlayStage@@QAEMABUD3DXVECTOR3@@ABVioOrientBox@@@Z ; ioPlayStage::GetMapHeightForBlockGuid
  00067	d9 5d ec	 fstp	 DWORD PTR _fMapHeight$[ebp]

; 122  : 
; 123  : 	if( vPrePos.y > fMapHeight )

  0006a	6a 00		 push	 0
  0006c	d9 45 ec	 fld	 DWORD PTR _fMapHeight$[ebp]
  0006f	5e		 pop	 esi
  00070	d9 45 f4	 fld	 DWORD PTR _vPrePos$[ebp+4]
  00073	df f1		 fcomip	 ST(1)
  00075	dd d8		 fstp	 ST(0)
  00077	76 1c		 jbe	 SHORT $LN2@OnStoping

; 124  : 	{
; 125  : 		SetFalling();
; 126  : 		UpdateWorldAttackBox( fTimePerSec, false );

  00079	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  0007e	8b 03		 mov	 eax, DWORD PTR [ebx]
  00080	56		 push	 esi
  00081	51		 push	 ecx
  00082	8b cb		 mov	 ecx, ebx
  00084	89 b3 94 08 00
	00		 mov	 DWORD PTR [ebx+2196], esi
  0008a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008f	ff 90 38 01 00
	00		 call	 DWORD PTR [eax+312]
$LN2@OnStoping:

; 127  : 	}
; 128  : 
; 129  : 	if( m_pFallWeapon )

  00095	39 b3 98 08 00
	00		 cmp	 DWORD PTR [ebx+2200], esi
  0009b	5f		 pop	 edi
  0009c	5e		 pop	 esi
  0009d	74 30		 je	 SHORT $LN1@OnStoping

; 130  : 	{
; 131  : 		m_pFallWeapon->Update( fTimePerSec * FLOAT1000 );

  0009f	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  000a4	8b 8b 98 08 00
	00		 mov	 ecx, DWORD PTR [ebx+2200]
  000aa	83 c1 14	 add	 ecx, 20			; 00000014H
  000ad	8b 11		 mov	 edx, DWORD PTR [ecx]
  000af	89 45 ec	 mov	 DWORD PTR tv208[ebp], eax
  000b2	db 45 ec	 fild	 DWORD PTR tv208[ebp]
  000b5	85 c0		 test	 eax, eax
  000b7	79 06		 jns	 SHORT $LN10@OnStoping
  000b9	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN10@OnStoping:
  000bf	d8 4d 08	 fmul	 DWORD PTR _fTimePerSec$[ebp]
  000c2	51		 push	 ecx
  000c3	d9 5d ec	 fstp	 DWORD PTR tv205[ebp]
  000c6	d9 45 ec	 fld	 DWORD PTR tv205[ebp]
  000c9	d9 1c 24	 fstp	 DWORD PTR [esp]
  000cc	ff 52 40	 call	 DWORD PTR [edx+64]
$LN1@OnStoping:

; 132  : 	}
; 133  : }

  000cf	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d2	33 cd		 xor	 ecx, ebp
  000d4	5b		 pop	 ebx
  000d5	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000da	c9		 leave
  000db	c2 08 00	 ret	 8
?OnStoping@ioFallWeapon@@IAEXMPAVioPlayStage@@@Z ENDP	; ioFallWeapon::OnStoping
_TEXT	ENDS
EXTRN	__imp_?Transform@ioOrientBox@@QAEXABUD3DXVECTOR3@@0ABUD3DXQUATERNION@@@Z:PROC
EXTRN	__imp_?UNIT_ALL@ioMath@@2UD3DXVECTOR3@@A:BYTE
EXTRN	?GetOrientation@ioWeapon@@QBEABUD3DXQUATERNION@@XZ:PROC ; ioWeapon::GetOrientation
EXTRN	__imp_?IsNull@ioOrientBox@@QBE_NXZ:PROC
EXTRN	__imp_?SetExtents@ioOrientBox@@QAEXHM@Z:PROC
EXTRN	__imp_?GetExtents@ioOrientBox@@QBEMH@Z:PROC
EXTRN	__imp_?SetNull@ioOrientBox@@QAEXXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?UpdateWorldAttackBox@ioFallWeapon@@MAEXM_N@Z
_TEXT	SEGMENT
tv304 = -8						; size = 4
tv310 = -4						; size = 4
tv294 = -4						; size = 4
_fTimePerSec$ = 8					; size = 4
tv298 = 12						; size = 4
_fMapCollisionRate$ = 12				; size = 4
_bSetNull$ = 12						; size = 1
?UpdateWorldAttackBox@ioFallWeapon@@MAEXM_N@Z PROC	; ioFallWeapon::UpdateWorldAttackBox, COMDAT
; _this$ = ecx

; 181  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx
  00006	8b d9		 mov	 ebx, ecx

; 182  : 	if( !IsLive() && bSetNull )

  00008	80 bb 82 05 00
	00 00		 cmp	 BYTE PTR [ebx+1410], 0
  0000f	56		 push	 esi
  00010	75 21		 jne	 SHORT $LN2@UpdateWorl
  00012	80 7d 0c 00	 cmp	 BYTE PTR _bSetNull$[ebp], 0
  00016	74 1b		 je	 SHORT $LN2@UpdateWorl

; 183  : 	{
; 184  : 		m_WorldAttackBox.SetNull();

  00018	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?SetNull@ioOrientBox@@QAEXXZ
  0001e	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  00024	ff d6		 call	 esi

; 185  : 		m_WorldAttackBoxForMap.SetNull();

  00026	8d 8b 2c 05 00
	00		 lea	 ecx, DWORD PTR [ebx+1324]
  0002c	ff d6		 call	 esi

; 186  : 		return;

  0002e	e9 f8 00 00 00	 jmp	 $LN1@UpdateWorl
$LN2@UpdateWorl:

; 187  : 	}
; 188  : 
; 189  : 	m_WorldAttackBox = GetLocalAttackBox();

  00033	8b 03		 mov	 eax, DWORD PTR [ebx]
  00035	57		 push	 edi
  00036	ff 90 00 01 00
	00		 call	 DWORD PTR [eax+256]
  0003c	6a 11		 push	 17			; 00000011H
  0003e	59		 pop	 ecx
  0003f	8b f0		 mov	 esi, eax
  00041	8d bb e8 04 00
	00		 lea	 edi, DWORD PTR [ebx+1256]
  00047	f3 a5		 rep movsd

; 190  : 	m_WorldAttackBoxForMap = m_WorldAttackBox;

  00049	6a 11		 push	 17			; 00000011H
  0004b	8b f0		 mov	 esi, eax

; 191  : 
; 192  : 	float fMapCollisionRate = GetAttribute()->m_fMapCollisionBoxRate;

  0004d	8b 03		 mov	 eax, DWORD PTR [ebx]
  0004f	59		 pop	 ecx
  00050	8d bb 2c 05 00
	00		 lea	 edi, DWORD PTR [ebx+1324]
  00056	f3 a5		 rep movsd
  00058	8b cb		 mov	 ecx, ebx
  0005a	ff 90 3c 01 00
	00		 call	 DWORD PTR [eax+316]

; 193  : 	m_WorldAttackBoxForMap.SetExtents( 0, m_WorldAttackBox.GetExtents(0)*fMapCollisionRate );

  00060	6a 00		 push	 0
  00062	d9 80 a8 01 00
	00		 fld	 DWORD PTR [eax+424]
  00068	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  0006e	d9 5d 0c	 fstp	 DWORD PTR _fMapCollisionRate$[ebp]
  00071	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetExtents@ioOrientBox@@QBEMH@Z
  00077	d8 4d 0c	 fmul	 DWORD PTR _fMapCollisionRate$[ebp]
  0007a	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?SetExtents@ioOrientBox@@QAEXHM@Z
  00080	51		 push	 ecx
  00081	8d 8b 2c 05 00
	00		 lea	 ecx, DWORD PTR [ebx+1324]
  00087	d9 5d fc	 fstp	 DWORD PTR tv310[ebp]
  0008a	d9 45 fc	 fld	 DWORD PTR tv310[ebp]
  0008d	89 4d fc	 mov	 DWORD PTR tv294[ebp], ecx
  00090	d9 1c 24	 fstp	 DWORD PTR [esp]
  00093	6a 00		 push	 0
  00095	ff d6		 call	 esi

; 194  : 	m_WorldAttackBoxForMap.SetExtents( 1, m_WorldAttackBox.GetExtents(1)*fMapCollisionRate );

  00097	6a 01		 push	 1
  00099	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  0009f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetExtents@ioOrientBox@@QBEMH@Z
  000a5	d8 4d 0c	 fmul	 DWORD PTR _fMapCollisionRate$[ebp]
  000a8	51		 push	 ecx
  000a9	8b 4d fc	 mov	 ecx, DWORD PTR tv294[ebp]
  000ac	d9 5d f8	 fstp	 DWORD PTR tv304[ebp]
  000af	d9 45 f8	 fld	 DWORD PTR tv304[ebp]
  000b2	d9 1c 24	 fstp	 DWORD PTR [esp]
  000b5	6a 01		 push	 1
  000b7	ff d6		 call	 esi

; 195  : 	m_WorldAttackBoxForMap.SetExtents( 2, m_WorldAttackBox.GetExtents(2)*fMapCollisionRate );

  000b9	6a 02		 push	 2
  000bb	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  000c1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetExtents@ioOrientBox@@QBEMH@Z
  000c7	d8 4d 0c	 fmul	 DWORD PTR _fMapCollisionRate$[ebp]
  000ca	51		 push	 ecx
  000cb	8b 4d fc	 mov	 ecx, DWORD PTR tv294[ebp]
  000ce	d9 5d 0c	 fstp	 DWORD PTR tv298[ebp]
  000d1	d9 45 0c	 fld	 DWORD PTR tv298[ebp]
  000d4	d9 1c 24	 fstp	 DWORD PTR [esp]
  000d7	6a 02		 push	 2
  000d9	ff d6		 call	 esi

; 196  : 
; 197  : 	if( !m_WorldAttackBox.IsNull() )

  000db	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  000e1	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsNull@ioOrientBox@@QBE_NXZ
  000e7	84 c0		 test	 al, al
  000e9	75 3f		 jne	 SHORT $LN7@UpdateWorl

; 198  : 	{
; 199  : 		m_WorldAttackBox.Transform( GetPosition(), ioMath::UNIT_ALL, GetOrientation() );

  000eb	8b cb		 mov	 ecx, ebx
  000ed	e8 00 00 00 00	 call	 ?GetOrientation@ioWeapon@@QBEABUD3DXQUATERNION@@XZ ; ioWeapon::GetOrientation
  000f2	50		 push	 eax
  000f3	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?UNIT_ALL@ioMath@@2UD3DXVECTOR3@@A
  000f9	8b 03		 mov	 eax, DWORD PTR [ebx]
  000fb	8b cb		 mov	 ecx, ebx
  000fd	ff 50 70	 call	 DWORD PTR [eax+112]
  00100	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?Transform@ioOrientBox@@QAEXABUD3DXVECTOR3@@0ABUD3DXQUATERNION@@@Z
  00106	50		 push	 eax
  00107	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  0010d	ff d6		 call	 esi

; 200  : 		m_WorldAttackBoxForMap.Transform( GetPosition(), ioMath::UNIT_ALL, GetOrientation() );

  0010f	8b cb		 mov	 ecx, ebx
  00111	e8 00 00 00 00	 call	 ?GetOrientation@ioWeapon@@QBEABUD3DXQUATERNION@@XZ ; ioWeapon::GetOrientation
  00116	50		 push	 eax
  00117	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?UNIT_ALL@ioMath@@2UD3DXVECTOR3@@A
  0011d	8b 03		 mov	 eax, DWORD PTR [ebx]
  0011f	8b cb		 mov	 ecx, ebx
  00121	ff 50 70	 call	 DWORD PTR [eax+112]
  00124	8b 4d fc	 mov	 ecx, DWORD PTR tv294[ebp]
  00127	50		 push	 eax
  00128	ff d6		 call	 esi
$LN7@UpdateWorl:
  0012a	5f		 pop	 edi
$LN1@UpdateWorl:
  0012b	5e		 pop	 esi
  0012c	5b		 pop	 ebx

; 201  : 	}
; 202  : }

  0012d	c9		 leave
  0012e	c2 08 00	 ret	 8
?UpdateWorldAttackBox@ioFallWeapon@@MAEXM_N@Z ENDP	; ioFallWeapon::UpdateWorldAttackBox
_TEXT	ENDS
PUBLIC	_bMapCollision$GSCopy$
PUBLIC	__$ArrayPad$
EXTRN	?GetWorldAttackBox@ioWeapon@@QBEABVioOrientBox@@_N@Z:PROC ; ioWeapon::GetWorldAttackBox
; Function compile flags: /Ogsp
;	COMDAT ?IsCollision@ioFallWeapon@@UAE_NPAVioPlayEntity@@_N@Z
_TEXT	SEGMENT
_bMapCollision$GSCopy$ = -24				; size = 1
_bCollision$ = -20					; size = 1
_vColPoint$ = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_pEntity$ = 8						; size = 4
_bMapCollision$ = 12					; size = 1
?IsCollision@ioFallWeapon@@UAE_NPAVioPlayEntity@@_N@Z PROC ; ioFallWeapon::IsCollision, COMDAT
; _this$ = ecx

; 205  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax

; 206  : 	if( !IsFalling() )

  00010	8a 45 0c	 mov	 al, BYTE PTR _bMapCollision$[ebp]
  00013	53		 push	 ebx
  00014	8b d9		 mov	 ebx, ecx
  00016	83 bb 94 08 00
	00 00		 cmp	 DWORD PTR [ebx+2196], 0
  0001d	56		 push	 esi
  0001e	8b 75 08	 mov	 esi, DWORD PTR _pEntity$[ebp]
  00021	88 45 e8	 mov	 BYTE PTR _bMapCollision$GSCopy$[ebp], al
  00024	74 04		 je	 SHORT $LN2@IsCollisio

; 207  : 		return false;

  00026	32 c0		 xor	 al, al
  00028	eb 47		 jmp	 SHORT $LN3@IsCollisio
$LN2@IsCollisio:

; 208  : 
; 209  : 	bool bCollision = false;
; 210  : 
; 211  : 	D3DXVECTOR3 vColPoint( 0.0f, 0.0f, 0.0f );

  0002a	0f 57 c0	 xorps	 xmm0, xmm0
  0002d	57		 push	 edi

; 212  : 	if( pEntity->IsWoundedCollision( GetWorldAttackBox(bMapCollision), &vColPoint ) )

  0002e	8b 3e		 mov	 edi, DWORD PTR [esi]
  00030	8d 45 f0	 lea	 eax, DWORD PTR _vColPoint$[ebp]
  00033	50		 push	 eax
  00034	ff 75 e8	 push	 DWORD PTR _bMapCollision$GSCopy$[ebp]
  00037	c6 45 ec 00	 mov	 BYTE PTR _bCollision$[ebp], 0
  0003b	f3 0f 11 45 f0	 movss	 DWORD PTR _vColPoint$[ebp], xmm0
  00040	f3 0f 11 45 f4	 movss	 DWORD PTR _vColPoint$[ebp+4], xmm0
  00045	f3 0f 11 45 f8	 movss	 DWORD PTR _vColPoint$[ebp+8], xmm0
  0004a	e8 00 00 00 00	 call	 ?GetWorldAttackBox@ioWeapon@@QBEABVioOrientBox@@_N@Z ; ioWeapon::GetWorldAttackBox
  0004f	50		 push	 eax
  00050	8b ce		 mov	 ecx, esi
  00052	ff 97 90 00 00
	00		 call	 DWORD PTR [edi+144]
  00058	5f		 pop	 edi
  00059	84 c0		 test	 al, al
  0005b	74 04		 je	 SHORT $LN1@IsCollisio

; 213  : 		bCollision = true;

  0005d	c6 45 ec 01	 mov	 BYTE PTR _bCollision$[ebp], 1
$LN1@IsCollisio:

; 214  : 
; 215  : 	CheckPiercing( bCollision );

  00061	ff 75 ec	 push	 DWORD PTR _bCollision$[ebp]
  00064	8b 03		 mov	 eax, DWORD PTR [ebx]
  00066	8b cb		 mov	 ecx, ebx
  00068	ff 90 48 01 00
	00		 call	 DWORD PTR [eax+328]

; 216  : 
; 217  : 	return bCollision;

  0006e	8a 45 ec	 mov	 al, BYTE PTR _bCollision$[ebp]
$LN3@IsCollisio:

; 218  : }

  00071	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00074	5e		 pop	 esi
  00075	33 cd		 xor	 ecx, ebp
  00077	5b		 pop	 ebx
  00078	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0007d	c9		 leave
  0007e	c2 08 00	 ret	 8
?IsCollision@ioFallWeapon@@UAE_NPAVioPlayEntity@@_N@Z ENDP ; ioFallWeapon::IsCollision
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadFloat_e@$0N@@ioINILoader@@QAEMAAY0N@$$CBDM@Z ; ioINILoader::LoadFloat_e<13>
EXTRN	__imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$LoadFloat_e@$0N@@ioINILoader@@QAEMAAY0N@$$CBDM@Z
_TEXT	SEGMENT
__k$ = -24						; size = 13
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_f$ = 12						; size = 4
??$LoadFloat_e@$0N@@ioINILoader@@QAEMAAY0N@$$CBDM@Z PROC ; ioINILoader::LoadFloat_e<13>, COMDAT
; _this$ = ecx

; 135  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 136  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 4d 01 00
	00		 je	 $LN96@LoadFloat_
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 36 01 00
	00		 je	 $LN95@LoadFloat_
  00031	b1 ec		 mov	 cl, -20			; ffffffecH
  00033	32 d1		 xor	 dl, cl
  00035	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00038	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003b	84 d2		 test	 dl, dl
  0003d	0f 84 1e 01 00
	00		 je	 $LN94@LoadFloat_
  00043	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00046	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 07 01 00
	00		 je	 $LN93@LoadFloat_
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 f0 00 00
	00		 je	 $LN92@LoadFloat_
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 da 00 00
	00		 je	 $LN91@LoadFloat_
  00076	32 d1		 xor	 dl, cl
  00078	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 c4 00 00
	00		 je	 $LN90@LoadFloat_
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 ad 00 00
	00		 je	 $LN89@LoadFloat_
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 96 00 00
	00		 je	 $LN88@LoadFloat_
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 80 00 00
	00		 je	 $LN87@LoadFloat_
  000b9	32 d1		 xor	 dl, cl
  000bb	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000be	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c1	84 d2		 test	 dl, dl
  000c3	74 6e		 je	 SHORT $LN86@LoadFloat_
  000c5	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000c8	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000cb	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000ce	84 d2		 test	 dl, dl
  000d0	74 5b		 je	 SHORT $LN85@LoadFloat_
  000d2	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d5	80 78 0c 00	 cmp	 BYTE PTR [eax+12], 0
  000d9	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000dc	0f 84 8f 00 00
	00		 je	 $LN1@LoadFloat_
  000e2	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000e5	84 d2		 test	 dl, dl
  000e7	74 3f		 je	 SHORT $LN83@LoadFloat_
  000e9	32 d1		 xor	 dl, cl
  000eb	88 55 f5	 mov	 BYTE PTR __k$[ebp+13], dl
  000ee	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000f1	84 d2		 test	 dl, dl
  000f3	74 2d		 je	 SHORT $LN82@LoadFloat_
  000f5	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000f8	88 55 f6	 mov	 BYTE PTR __k$[ebp+14], dl
  000fb	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  000fe	84 d2		 test	 dl, dl
  00100	74 1a		 je	 SHORT $LN81@LoadFloat_
  00102	8a 40 10	 mov	 al, BYTE PTR [eax+16]
  00105	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00108	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  0010b	84 c0		 test	 al, al
  0010d	74 07		 je	 SHORT $LN80@LoadFloat_
  0010f	34 ed		 xor	 al, -19			; ffffffedH
  00111	88 45 f8	 mov	 BYTE PTR __k$[ebp+16], al
  00114	eb 5b		 jmp	 SHORT $LN1@LoadFloat_
$LN80@LoadFloat_:
  00116	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  0011a	eb 55		 jmp	 SHORT $LN1@LoadFloat_
$LN81@LoadFloat_:
  0011c	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00120	eb 4f		 jmp	 SHORT $LN1@LoadFloat_
$LN82@LoadFloat_:
  00122	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+14], -21 ; ffffffebH
  00126	eb 49		 jmp	 SHORT $LN1@LoadFloat_
$LN83@LoadFloat_:
  00128	88 4d f5	 mov	 BYTE PTR __k$[ebp+13], cl
  0012b	eb 44		 jmp	 SHORT $LN1@LoadFloat_
$LN85@LoadFloat_:
  0012d	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00131	eb 3e		 jmp	 SHORT $LN1@LoadFloat_
$LN86@LoadFloat_:
  00133	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  00137	eb 38		 jmp	 SHORT $LN1@LoadFloat_
$LN87@LoadFloat_:
  00139	88 4d f1	 mov	 BYTE PTR __k$[ebp+9], cl
  0013c	eb 33		 jmp	 SHORT $LN1@LoadFloat_
$LN88@LoadFloat_:
  0013e	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00142	eb 2d		 jmp	 SHORT $LN1@LoadFloat_
$LN89@LoadFloat_:
  00144	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00148	eb 27		 jmp	 SHORT $LN1@LoadFloat_
$LN90@LoadFloat_:
  0014a	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  0014e	eb 21		 jmp	 SHORT $LN1@LoadFloat_
$LN91@LoadFloat_:
  00150	88 4d ed	 mov	 BYTE PTR __k$[ebp+5], cl
  00153	eb 1c		 jmp	 SHORT $LN1@LoadFloat_
$LN92@LoadFloat_:
  00155	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00159	eb 16		 jmp	 SHORT $LN1@LoadFloat_
$LN93@LoadFloat_:
  0015b	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  0015f	eb 10		 jmp	 SHORT $LN1@LoadFloat_
$LN94@LoadFloat_:
  00161	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00165	eb 0a		 jmp	 SHORT $LN1@LoadFloat_
$LN95@LoadFloat_:
  00167	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  0016b	eb 04		 jmp	 SHORT $LN1@LoadFloat_
$LN96@LoadFloat_:
  0016d	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadFloat_:
  00171	6a 03		 push	 3
  00173	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  00176	c6 45 f4 00	 mov	 BYTE PTR __k$[ebp+12], 0
  0017a	5a		 pop	 edx
$LL104@LoadFloat_:
  0017b	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00181	83 c0 04	 add	 eax, 4
  00184	4a		 dec	 edx
  00185	75 f4		 jne	 SHORT $LL104@LoadFloat_

; 137  : 		return LoadFloat(_k, f);

  00187	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _f$[ebp]
  0018c	51		 push	 ecx
  0018d	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  00190	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00195	50		 push	 eax
  00196	8b ce		 mov	 ecx, esi
  00198	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z

; 138  : 	}

  0019e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001a1	33 cd		 xor	 ecx, ebp
  001a3	5e		 pop	 esi
  001a4	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001a9	c9		 leave
  001aa	c2 08 00	 ret	 8
??$LoadFloat_e@$0N@@ioINILoader@@QAEMAAY0N@$$CBDM@Z ENDP ; ioINILoader::LoadFloat_e<13>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$09@ioINILoader@@QAEHAAY09$$CBDH@Z	; ioINILoader::LoadInt_e<10>
EXTRN	__imp_?LoadInt@ioINILoader@@QAEHPBDH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$09@ioINILoader@@QAEHAAY09$$CBDH@Z
_TEXT	SEGMENT
__k$ = -20						; size = 10
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$09@ioINILoader@@QAEHAAY09$$CBDH@Z PROC	; ioINILoader::LoadInt_e<10>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 14	 sub	 esp, 20			; 00000014H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	84 d2		 test	 dl, dl
  00017	0f 84 0d 01 00
	00		 je	 $LN96@LoadInt_e
  0001d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00020	88 55 ec	 mov	 BYTE PTR __k$[ebp], dl
  00023	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00026	84 d2		 test	 dl, dl
  00028	0f 84 f6 00 00
	00		 je	 $LN95@LoadInt_e
  0002e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00031	88 55 ed	 mov	 BYTE PTR __k$[ebp+1], dl
  00034	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00037	84 d2		 test	 dl, dl
  00039	0f 84 df 00 00
	00		 je	 $LN94@LoadInt_e
  0003f	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00042	88 55 ee	 mov	 BYTE PTR __k$[ebp+2], dl
  00045	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00048	84 d2		 test	 dl, dl
  0004a	0f 84 c8 00 00
	00		 je	 $LN93@LoadInt_e
  00050	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00053	88 55 ef	 mov	 BYTE PTR __k$[ebp+3], dl
  00056	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00059	84 d2		 test	 dl, dl
  0005b	0f 84 b1 00 00
	00		 je	 $LN92@LoadInt_e
  00061	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00064	88 55 f0	 mov	 BYTE PTR __k$[ebp+4], dl
  00067	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006a	84 d2		 test	 dl, dl
  0006c	0f 84 9a 00 00
	00		 je	 $LN91@LoadInt_e
  00072	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00075	88 55 f1	 mov	 BYTE PTR __k$[ebp+5], dl
  00078	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007b	84 d2		 test	 dl, dl
  0007d	0f 84 83 00 00
	00		 je	 $LN90@LoadInt_e
  00083	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00086	88 55 f2	 mov	 BYTE PTR __k$[ebp+6], dl
  00089	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008c	84 d2		 test	 dl, dl
  0008e	74 70		 je	 SHORT $LN89@LoadInt_e
  00090	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00093	88 55 f3	 mov	 BYTE PTR __k$[ebp+7], dl
  00096	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  00099	84 d2		 test	 dl, dl
  0009b	74 5d		 je	 SHORT $LN88@LoadInt_e
  0009d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000a0	80 78 09 00	 cmp	 BYTE PTR [eax+9], 0
  000a4	88 55 f4	 mov	 BYTE PTR __k$[ebp+8], dl
  000a7	0f 84 81 00 00
	00		 je	 $LN1@LoadInt_e
  000ad	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000b0	84 d2		 test	 dl, dl
  000b2	74 40		 je	 SHORT $LN86@LoadInt_e
  000b4	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000b7	88 55 f6	 mov	 BYTE PTR __k$[ebp+10], dl
  000ba	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000bd	84 d2		 test	 dl, dl
  000bf	74 2d		 je	 SHORT $LN85@LoadInt_e
  000c1	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000c4	88 55 f7	 mov	 BYTE PTR __k$[ebp+11], dl
  000c7	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000ca	84 d2		 test	 dl, dl
  000cc	74 1a		 je	 SHORT $LN84@LoadInt_e
  000ce	8a 40 0d	 mov	 al, BYTE PTR [eax+13]
  000d1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000d4	88 55 f8	 mov	 BYTE PTR __k$[ebp+12], dl
  000d7	84 c0		 test	 al, al
  000d9	74 07		 je	 SHORT $LN83@LoadInt_e
  000db	34 ec		 xor	 al, -20			; ffffffecH
  000dd	88 45 f9	 mov	 BYTE PTR __k$[ebp+13], al
  000e0	eb 4c		 jmp	 SHORT $LN1@LoadInt_e
$LN83@LoadInt_e:
  000e2	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  000e6	eb 46		 jmp	 SHORT $LN1@LoadInt_e
$LN84@LoadInt_e:
  000e8	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  000ec	eb 40		 jmp	 SHORT $LN1@LoadInt_e
$LN85@LoadInt_e:
  000ee	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  000f2	eb 3a		 jmp	 SHORT $LN1@LoadInt_e
$LN86@LoadInt_e:
  000f4	c6 45 f6 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  000f8	eb 34		 jmp	 SHORT $LN1@LoadInt_e
$LN88@LoadInt_e:
  000fa	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  000fe	eb 2e		 jmp	 SHORT $LN1@LoadInt_e
$LN89@LoadInt_e:
  00100	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00104	eb 28		 jmp	 SHORT $LN1@LoadInt_e
$LN90@LoadInt_e:
  00106	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  0010a	eb 22		 jmp	 SHORT $LN1@LoadInt_e
$LN91@LoadInt_e:
  0010c	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00110	eb 1c		 jmp	 SHORT $LN1@LoadInt_e
$LN92@LoadInt_e:
  00112	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00116	eb 16		 jmp	 SHORT $LN1@LoadInt_e
$LN93@LoadInt_e:
  00118	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  0011c	eb 10		 jmp	 SHORT $LN1@LoadInt_e
$LN94@LoadInt_e:
  0011e	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00122	eb 0a		 jmp	 SHORT $LN1@LoadInt_e
$LN95@LoadInt_e:
  00124	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00128	eb 04		 jmp	 SHORT $LN1@LoadInt_e
$LN96@LoadInt_e:
  0012a	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e:
  0012e	6a 02		 push	 2
  00130	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  00133	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+9], 0
  00137	5a		 pop	 edx
$LL104@LoadInt_e:
  00138	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0013e	83 c0 04	 add	 eax, 4
  00141	4a		 dec	 edx
  00142	75 f4		 jne	 SHORT $LL104@LoadInt_e

; 120  : 		return LoadInt(_k, i);

  00144	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  00147	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  0014b	8d 45 ec	 lea	 eax, DWORD PTR __k$[ebp]
  0014e	50		 push	 eax
  0014f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  00155	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00158	33 cd		 xor	 ecx, ebp
  0015a	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0015f	c9		 leave
  00160	c2 08 00	 ret	 8
??$LoadInt_e@$09@ioINILoader@@QAEHAAY09$$CBDH@Z ENDP	; ioINILoader::LoadInt_e<10>
_TEXT	ENDS
EXTRN	?InitResource@ioWeapon@@UAE_NXZ:PROC		; ioWeapon::InitResource
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iofallweapon.cpp
;	COMDAT ?InitResource@ioFallWeapon@@UAE_NXZ
_TEXT	SEGMENT
?InitResource@ioFallWeapon@@UAE_NXZ PROC		; ioFallWeapon::InitResource, COMDAT
; _this$ = ecx

; 32   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 33   : 	if( ioWeapon::InitResource() )

  00003	e8 00 00 00 00	 call	 ?InitResource@ioWeapon@@UAE_NXZ ; ioWeapon::InitResource
  00008	84 c0		 test	 al, al
  0000a	74 25		 je	 SHORT $LN1@InitResour

; 34   : 	{
; 35   : 		DestroyResource();

  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	6a 00		 push	 0
  00010	8b ce		 mov	 ecx, esi
  00012	ff 90 9c 00 00
	00		 call	 DWORD PTR [eax+156]

; 36   : 		return CreateEffect( GetAttribute()->m_WeaponEffect );

  00018	8b 06		 mov	 eax, DWORD PTR [esi]
  0001a	8b ce		 mov	 ecx, esi
  0001c	ff 90 3c 01 00
	00		 call	 DWORD PTR [eax+316]
  00022	05 34 01 00 00	 add	 eax, 308		; 00000134H
  00027	50		 push	 eax
  00028	8b ce		 mov	 ecx, esi
  0002a	e8 00 00 00 00	 call	 ?CreateEffect@ioFallWeapon@@IAE_NABVioHashString@@@Z ; ioFallWeapon::CreateEffect
  0002f	5e		 pop	 esi

; 40   : }

  00030	c3		 ret	 0
$LN1@InitResour:

; 37   : 	}
; 38   : 
; 39   : 	return false;

  00031	32 c0		 xor	 al, al
  00033	5e		 pop	 esi

; 40   : }

  00034	c3		 ret	 0
?InitResource@ioFallWeapon@@UAE_NXZ ENDP		; ioFallWeapon::InitResource
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?LoadProperty@ioWeapon@@UAEXAAVioINILoader@@@Z:PROC ; ioWeapon::LoadProperty
; Function compile flags: /Ogsp
;	COMDAT ?LoadProperty@ioFallWeapon@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
__k$531745 = -24					; size = 10
__k$531620 = -24					; size = 13
__$ArrayPad$ = -4					; size = 4
_rkLoader$ = 8						; size = 4
?LoadProperty@ioFallWeapon@@UAEXAAVioINILoader@@@Z PROC	; ioFallWeapon::LoadProperty, COMDAT
; _this$ = ecx

; 43   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	57		 push	 edi
  00013	8b 7d 08	 mov	 edi, DWORD PTR _rkLoader$[ebp]

; 44   : 	ioWeapon::LoadProperty( rkLoader );

  00016	57		 push	 edi
  00017	8b f1		 mov	 esi, ecx
  00019	e8 00 00 00 00	 call	 ?LoadProperty@ioWeapon@@UAEXAAVioINILoader@@@Z ; ioWeapon::LoadProperty

; 45   : 
; 46   : 	m_fStartHeight = rkLoader.LoadFloat_e( "start_height", 0.0f );

  0001e	6a 03		 push	 3
  00020	c7 45 e8 9e 98
	8a 98		 mov	 DWORD PTR __k$531620[ebp], -1735747426 ; 988a989eH
  00027	c7 45 ec 99 b3
	83 8f		 mov	 DWORD PTR __k$531620[ebp+4], -1887194215 ; 8f83b399H
  0002e	c7 45 f0 84 8b
	83 9e		 mov	 DWORD PTR __k$531620[ebp+8], -1635546236 ; 9e838b84H
  00035	8d 45 e8	 lea	 eax, DWORD PTR __k$531620[ebp]
  00038	c6 45 f4 00	 mov	 BYTE PTR __k$531620[ebp+12], 0
  0003c	59		 pop	 ecx
  0003d	bb ed ec eb ea	 mov	 ebx, -353637139		; eaebecedH
$LL106@LoadProper:
  00042	31 18		 xor	 DWORD PTR [eax], ebx
  00044	83 c0 04	 add	 eax, 4
  00047	49		 dec	 ecx
  00048	75 f8		 jne	 SHORT $LL106@LoadProper
  0004a	0f 57 c0	 xorps	 xmm0, xmm0
  0004d	51		 push	 ecx
  0004e	8d 45 e8	 lea	 eax, DWORD PTR __k$531620[ebp]
  00051	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00056	50		 push	 eax
  00057	8b cf		 mov	 ecx, edi
  00059	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  0005f	d9 9e ec 08 00
	00		 fstp	 DWORD PTR [esi+2284]
  00065	6a 02		 push	 2

; 47   : 	m_dwLiveTime = rkLoader.LoadInt_e( "live_time", 0 );

  00067	c7 45 e8 81 85
	9d 8f		 mov	 DWORD PTR __k$531745[ebp], -1885502079 ; 8f9d8581H
  0006e	c7 45 ec b2 98
	82 87		 mov	 DWORD PTR __k$531745[ebp+4], -2021484366 ; 878298b2H
  00075	8d 45 e8	 lea	 eax, DWORD PTR __k$531745[ebp]
  00078	66 c7 45 f0 88
	00		 mov	 WORD PTR __k$531745[ebp+8], 136 ; 00000088H
  0007e	59		 pop	 ecx
$LL212@LoadProper:
  0007f	31 18		 xor	 DWORD PTR [eax], ebx
  00081	83 c0 04	 add	 eax, 4
  00084	49		 dec	 ecx
  00085	75 f8		 jne	 SHORT $LL212@LoadProper
  00087	80 75 f0 ed	 xor	 BYTE PTR __k$531745[ebp+8], -19 ; ffffffedH
  0008b	51		 push	 ecx
  0008c	8d 45 e8	 lea	 eax, DWORD PTR __k$531745[ebp]
  0008f	50		 push	 eax
  00090	8b cf		 mov	 ecx, edi
  00092	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 48   : }

  00098	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0009b	5f		 pop	 edi
  0009c	89 86 d8 04 00
	00		 mov	 DWORD PTR [esi+1240], eax
  000a2	5e		 pop	 esi
  000a3	33 cd		 xor	 ecx, ebp
  000a5	5b		 pop	 ebx
  000a6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000ab	c9		 leave
  000ac	c2 04 00	 ret	 4
?LoadProperty@ioFallWeapon@@UAEXAAVioINILoader@@@Z ENDP	; ioFallWeapon::LoadProperty
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?Process@ioFallWeapon@@UAEXMPAVioPlayStage@@@Z
_TEXT	SEGMENT
_fTimePerSec$ = 8					; size = 4
_pStage$ = 12						; size = 4
?Process@ioFallWeapon@@UAEXMPAVioPlayStage@@@Z PROC	; ioFallWeapon::Process, COMDAT
; _this$ = ecx

; 76   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp

; 77   : 	switch( m_FallWeaponState )

  00003	8b 81 94 08 00
	00		 mov	 eax, DWORD PTR [ecx+2196]
  00009	83 e8 00	 sub	 eax, 0
  0000c	74 18		 je	 SHORT $LN2@Process
  0000e	48		 dec	 eax
  0000f	75 28		 jne	 SHORT $LN3@Process

; 81   : 		break;
; 82   : 	case FS_STOP:
; 83   : 		OnStoping( fTimePerSec, pStage );

  00011	ff 75 0c	 push	 DWORD PTR _pStage$[ebp]
  00014	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  00019	51		 push	 ecx
  0001a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0001f	e8 00 00 00 00	 call	 ?OnStoping@ioFallWeapon@@IAEXMPAVioPlayStage@@@Z ; ioFallWeapon::OnStoping

; 84   : 		break;

  00024	eb 13		 jmp	 SHORT $LN3@Process
$LN2@Process:

; 78   : 	{
; 79   : 	case FS_FALL:
; 80   : 		OnFalling( fTimePerSec, pStage );

  00026	ff 75 0c	 push	 DWORD PTR _pStage$[ebp]
  00029	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  0002e	51		 push	 ecx
  0002f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00034	e8 00 00 00 00	 call	 ?OnFalling@ioFallWeapon@@IAEXMPAVioPlayStage@@@Z ; ioFallWeapon::OnFalling
$LN3@Process:

; 85   : 	}
; 86   : }

  00039	5d		 pop	 ebp
  0003a	c2 08 00	 ret	 8
?Process@ioFallWeapon@@UAEXMPAVioPlayStage@@@Z ENDP	; ioFallWeapon::Process
_TEXT	ENDS
END
