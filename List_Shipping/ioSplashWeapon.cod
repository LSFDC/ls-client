; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioSplashWeapon.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
PUBLIC	?m_ActionStopType@ioSplashWeapon@@2W4ActionStopType@@A ; ioSplashWeapon::m_ActionStopType
PUBLIC	?m_DieActionStopType@ioSplashWeapon@@2W4ActionStopType@@A ; ioSplashWeapon::m_DieActionStopType
_BSS	SEGMENT
?m_ActionStopType@ioSplashWeapon@@2W4ActionStopType@@A DD 01H DUP (?) ; ioSplashWeapon::m_ActionStopType
?m_DieActionStopType@ioSplashWeapon@@2W4ActionStopType@@A DD 01H DUP (?) ; ioSplashWeapon::m_DieActionStopType
_BSS	ENDS
;	COMDAT ?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB DD 01H ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
CONST	ENDS
PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	??_7ioSplashWeapon@@6B@				; ioSplashWeapon::`vftable'
PUBLIC	??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z ; ioSplashWeapon::ioSplashWeapon
PUBLIC	??_R4ioSplashWeapon@@6B@			; ioSplashWeapon::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioSplashWeapon@@@8			; ioSplashWeapon `RTTI Type Descriptor'
PUBLIC	??_R3ioSplashWeapon@@8				; ioSplashWeapon::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioSplashWeapon@@8				; ioSplashWeapon::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioSplashWeapon@@8			; ioSplashWeapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioWeapon@@8			; ioWeapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWeapon@@@8				; ioWeapon `RTTI Type Descriptor'
PUBLIC	??_R3ioWeapon@@8				; ioWeapon::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWeapon@@8				; ioWeapon::`RTTI Base Class Array'
PUBLIC	?LoadProperty@ioSplashWeapon@@UAEXAAVioINILoader@@@Z ; ioSplashWeapon::LoadProperty
PUBLIC	?Process@ioSplashWeapon@@UAEXMPAVioPlayStage@@@Z ; ioSplashWeapon::Process
PUBLIC	?GetType@ioSplashWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ ; ioSplashWeapon::GetType
PUBLIC	?GetActionStopType@ioSplashWeapon@@UBE?AW4ActionStopType@@XZ ; ioSplashWeapon::GetActionStopType
PUBLIC	?GetDieActionStopType@ioSplashWeapon@@UBE?AW4ActionStopType@@XZ ; ioSplashWeapon::GetDieActionStopType
PUBLIC	?UpdateWorldAttackBox@ioSplashWeapon@@MAEXM_N@Z	; ioSplashWeapon::UpdateWorldAttackBox
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	??1ioWeapon@@UAE@XZ:PROC			; ioWeapon::~ioWeapon
EXTRN	?SetPeculiarity@ioWeapon@@QAEXK@Z:PROC		; ioWeapon::SetPeculiarity
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	??0ioWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z:PROC ; ioWeapon::ioWeapon
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__fltused:DWORD
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?IsAlreadyCollisioned@ioWeapon@@UAE_NPAVioPlayEntity@@@Z:PROC ; ioWeapon::IsAlreadyCollisioned
EXTRN	?AddCollisionEntity@ioWeapon@@UAEXPAVioPlayEntity@@@Z:PROC ; ioWeapon::AddCollisionEntity
EXTRN	?SetOwnerDamageRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerDamageRate
EXTRN	?SetOwnerChargeDamageRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeDamageRate
EXTRN	?SetOwnerChargeForceRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeForceRate
EXTRN	?SetOwnerChargeRangeRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeRangeRate
EXTRN	?SetOwnerChargeSpeedRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeSpeedRate
EXTRN	?SetOwnerChargeBlowRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeBlowRate
EXTRN	?SetOwnerChargeFloatRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeFloatRate
EXTRN	?SetOwnerChargeScaleRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeScaleRate
EXTRN	?SetOwnerChargeExplosionRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeExplosionRate
EXTRN	?SetOwnerChargeWoundedTimeRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeWoundedTimeRate
EXTRN	?SetOwnerChargeLiveTimeRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeLiveTimeRate
EXTRN	?SetOwnerChargeBuffLiveTimeRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeBuffLiveTimeRate
EXTRN	?SetWeaponIndex@ioWeapon@@UAEXK@Z:PROC		; ioWeapon::SetWeaponIndex
EXTRN	?SetGrapplingTargetName@ioWeapon@@UAEXABVioHashString@@@Z:PROC ; ioWeapon::SetGrapplingTargetName
EXTRN	?SetCreateItem@ioWeapon@@UAEXABVioHashString@@@Z:PROC ; ioWeapon::SetCreateItem
EXTRN	?SetTeam@ioWeapon@@UAEXPAVioPlayStage@@W4TeamType@@@Z:PROC ; ioWeapon::SetTeam
EXTRN	?CallReserveAreaWeapon@ioWeapon@@UAEXXZ:PROC	; ioWeapon::CallReserveAreaWeapon
EXTRN	?SetWeaponDead@ioWeapon@@UAEXXZ:PROC		; ioWeapon::SetWeaponDead
EXTRN	?PlayExplosionSound@ioWeapon@@UAEXXZ:PROC	; ioWeapon::PlayExplosionSound
EXTRN	?PlayWoundedSound@ioWeapon@@UAEXPAVioPlayEntity@@@Z:PROC ; ioWeapon::PlayWoundedSound
EXTRN	?PlayDefensedSound@ioWeapon@@UAEXPAVioPlayEntity@@@Z:PROC ; ioWeapon::PlayDefensedSound
EXTRN	?PlayLoopSound@ioWeapon@@UAEXXZ:PROC		; ioWeapon::PlayLoopSound
EXTRN	?StopLoopSound@ioWeapon@@UAEXXZ:PROC		; ioWeapon::StopLoopSound
EXTRN	?GetTargetAirBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ:PROC ; ioWeapon::GetTargetAirBuffList
EXTRN	?GetTargetBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ:PROC ; ioWeapon::GetTargetBuffList
EXTRN	?GetTargetDownBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ:PROC ; ioWeapon::GetTargetDownBuffList
EXTRN	?GetPosition@ioWeapon@@UBEABUD3DXVECTOR3@@XZ:PROC ; ioWeapon::GetPosition
EXTRN	?GetBlowType@ioWeapon@@UBE?AW4BlowTargetType@@XZ:PROC ; ioWeapon::GetBlowType
EXTRN	?GetPushPower@ioWeapon@@UBEMM@Z:PROC		; ioWeapon::GetPushPower
EXTRN	?GetBlowPower@ioWeapon@@UBEMM@Z:PROC		; ioWeapon::GetBlowPower
EXTRN	?GetAirPushPower@ioWeapon@@UBEMM@Z:PROC		; ioWeapon::GetAirPushPower
EXTRN	?GetAirBlowPower@ioWeapon@@UBEMM@Z:PROC		; ioWeapon::GetAirBlowPower
EXTRN	?GetDefensePushPower@ioWeapon@@UBEMM@Z:PROC	; ioWeapon::GetDefensePushPower
EXTRN	?GetCollisionEnableTime@ioWeapon@@UBEKXZ:PROC	; ioWeapon::GetCollisionEnableTime
EXTRN	?SetSylphid@ioWeapon@@UAEHXZ:PROC		; ioWeapon::SetSylphid
EXTRN	?ApplyExtraReserveWeaponByWeaponInfo@ioWeapon@@UAEXPAV1@@Z:PROC ; ioWeapon::ApplyExtraReserveWeaponByWeaponInfo
EXTRN	?InitResource@ioWeapon@@UAE_NXZ:PROC		; ioWeapon::InitResource
EXTRN	?DestroyResource@ioWeapon@@UAEXPAVioPlayStage@@@Z:PROC ; ioWeapon::DestroyResource
EXTRN	?SetResistanceAttr@ioWeapon@@UAEXH@Z:PROC	; ioWeapon::SetResistanceAttr
EXTRN	?SetStartCollisionBox@ioWeapon@@UAEXXZ:PROC	; ioWeapon::SetStartCollisionBox
EXTRN	?SetLiveTime@ioWeapon@@UAEXK@Z:PROC		; ioWeapon::SetLiveTime
EXTRN	?SetMoveDir@ioWeapon@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioWeapon::SetMoveDir
EXTRN	?SetMoveSpeed@ioWeapon@@UAEXM@Z:PROC		; ioWeapon::SetMoveSpeed
EXTRN	?SetFloatPower@ioWeapon@@UAEXM@Z:PROC		; ioWeapon::SetFloatPower
EXTRN	?SetStartPosition@ioWeapon@@UAEXABUD3DXVECTOR3@@PAVioPlayStage@@@Z:PROC ; ioWeapon::SetStartPosition
EXTRN	?IsCollision@ioWeapon@@UAE_NPAVioPlayEntity@@_N@Z:PROC ; ioWeapon::IsCollision
EXTRN	?TestMapCollision@ioWeapon@@UAE_NPAVioOpcodeShape@@PAVioPlayStage@@PBUD3DXMATRIX@@@Z:PROC ; ioWeapon::TestMapCollision
EXTRN	?CheckPreCollision@ioWeapon@@UAEXPAVioPlayEntity@@PAVioPlayStage@@@Z:PROC ; ioWeapon::CheckPreCollision
EXTRN	?CheckStructAndDummy@ioWeapon@@UAEXPAVioPlayEntity@@PAVioPlayStage@@@Z:PROC ; ioWeapon::CheckStructAndDummy
EXTRN	?GetDamage@ioWeapon@@UAEMPAVioPlayEntity@@@Z:PROC ; ioWeapon::GetDamage
EXTRN	?GetBaseDamage@ioWeapon@@UAEMPAVioPlayEntity@@@Z:PROC ; ioWeapon::GetBaseDamage
EXTRN	?GetPushAngle@ioWeapon@@UBEMXZ:PROC		; ioWeapon::GetPushAngle
EXTRN	?IsResistanceMagic@ioWeapon@@UAEHPAVioBaseChar@@@Z:PROC ; ioWeapon::IsResistanceMagic
EXTRN	?IsResistanceBomb@ioWeapon@@UAEHPAVioBaseChar@@@Z:PROC ; ioWeapon::IsResistanceBomb
EXTRN	?IsCanMineExplosion@ioWeapon@@UAE_NXZ:PROC	; ioWeapon::IsCanMineExplosion
EXTRN	?CheckGrapplingState@ioWeapon@@UAE?AW4GrapplingType@@XZ:PROC ; ioWeapon::CheckGrapplingState
EXTRN	?CheckCurAttribute@ioWeapon@@UAEXPBVioPlayEntity@@@Z:PROC ; ioWeapon::CheckCurAttribute
EXTRN	?CheckItemNotDrop@ioWeapon@@UAE_NPAVioBaseChar@@@Z:PROC ; ioWeapon::CheckItemNotDrop
EXTRN	?GetWorldAttackBoxList@ioWeapon@@UAEXAAV?$vector@VioOrientBox@@V?$allocator@VioOrientBox@@@std@@@std@@@Z:PROC ; ioWeapon::GetWorldAttackBoxList
EXTRN	?GetAttackDir@ioWeapon@@UBE?AUD3DXVECTOR3@@PBVioPlayEntity@@@Z:PROC ; ioWeapon::GetAttackDir
EXTRN	?GetLocalAttackBox@ioWeapon@@UBEABVioOrientBox@@XZ:PROC ; ioWeapon::GetLocalAttackBox
EXTRN	?GetLiveTime@ioWeapon@@UAEKXZ:PROC		; ioWeapon::GetLiveTime
EXTRN	?GetMoveDir@ioWeapon@@UAE?AUD3DXVECTOR3@@XZ:PROC ; ioWeapon::GetMoveDir
EXTRN	?CheckWeaponCollision@ioWeapon@@UAEXXZ:PROC	; ioWeapon::CheckWeaponCollision
EXTRN	?GetRefreshDuration@ioWeapon@@UAEKXZ:PROC	; ioWeapon::GetRefreshDuration
EXTRN	?GetIgnoreDuration@ioWeapon@@UAEKXZ:PROC	; ioWeapon::GetIgnoreDuration
EXTRN	?GetIgnoreTimeTypeDuration@ioWeapon@@UAEKXZ:PROC ; ioWeapon::GetIgnoreTimeTypeDuration
EXTRN	?GetIgnoreTimeType@ioWeapon@@UAEKXZ:PROC	; ioWeapon::GetIgnoreTimeType
EXTRN	?ApplyWeaponSync@ioWeapon@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z:PROC ; ioWeapon::ApplyWeaponSync
EXTRN	?IsSkillDependency@ioWeapon@@UAE_NABVioHashString@@@Z:PROC ; ioWeapon::IsSkillDependency
EXTRN	?SetSkillDependencyAction@ioWeapon@@UAEXXZ:PROC	; ioWeapon::SetSkillDependencyAction
EXTRN	?GetAttribute@ioWeapon@@MBEPBUWeaponAttribute@@XZ:PROC ; ioWeapon::GetAttribute
EXTRN	?CalcFinalDamage@ioWeapon@@MAEMXZ:PROC		; ioWeapon::CalcFinalDamage
EXTRN	?CalcFinalBoundDamage@ioWeapon@@MAEMXZ:PROC	; ioWeapon::CalcFinalBoundDamage
EXTRN	?CheckPiercing@ioWeapon@@MAE_N_N@Z:PROC		; ioWeapon::CheckPiercing
EXTRN	?ClearCollisionList@ioWeapon@@MAEXXZ:PROC	; ioWeapon::ClearCollisionList
EXTRN	?CheckCreateWeaponList@ioWeapon@@MAEXXZ:PROC	; ioWeapon::CheckCreateWeaponList
EXTRN	?CreateCollisionAreaWeapon@ioWeapon@@MAEXXZ:PROC ; ioWeapon::CreateCollisionAreaWeapon
EXTRN	?SetMapCollision@ioWeapon@@UAEXXZ:PROC		; ioWeapon::SetMapCollision
EXTRN	?IsIgnoreMapCollision@ioWeapon@@UBE_NXZ:PROC	; ioWeapon::IsIgnoreMapCollision
EXTRN	?IsIgnoreTestMapCollision@ioWeapon@@UBE_NXZ:PROC ; ioWeapon::IsIgnoreTestMapCollision
EXTRN	?IsIgnoreMapCollisionEffect@ioWeapon@@UBE_NXZ:PROC ; ioWeapon::IsIgnoreMapCollisionEffect
EXTRN	?AddEffectEvent@ioWeapon@@MAEXPAVioEffect@@@Z:PROC ; ioWeapon::AddEffectEvent
EXTRN	??_EioSplashWeapon@@UAEPAXI@Z:PROC		; ioSplashWeapon::`vector deleting destructor'
;	COMDAT ??_R2ioWeapon@@8
rdata$r	SEGMENT
??_R2ioWeapon@@8 DD FLAT:??_R1A@?0A@EA@ioWeapon@@8	; ioWeapon::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWeapon@@8
rdata$r	SEGMENT
??_R3ioWeapon@@8 DD 00H					; ioWeapon::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWeapon@@@8
_DATA	SEGMENT
??_R0?AVioWeapon@@@8 DD FLAT:??_7type_info@@6B@		; ioWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWeapon@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWeapon@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWeapon@@8 DD FLAT:??_R0?AVioWeapon@@@8	; ioWeapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioSplashWeapon@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioSplashWeapon@@8 DD FLAT:??_R0?AVioSplashWeapon@@@8 ; ioSplashWeapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioSplashWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R2ioSplashWeapon@@8
rdata$r	SEGMENT
??_R2ioSplashWeapon@@8 DD FLAT:??_R1A@?0A@EA@ioSplashWeapon@@8 ; ioSplashWeapon::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R3ioSplashWeapon@@8
rdata$r	SEGMENT
??_R3ioSplashWeapon@@8 DD 00H				; ioSplashWeapon::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioSplashWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioSplashWeapon@@@8
_DATA	SEGMENT
??_R0?AVioSplashWeapon@@@8 DD FLAT:??_7type_info@@6B@	; ioSplashWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioSplashWeapon@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioSplashWeapon@@6B@
rdata$r	SEGMENT
??_R4ioSplashWeapon@@6B@ DD 00H				; ioSplashWeapon::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioSplashWeapon@@@8
	DD	FLAT:??_R3ioSplashWeapon@@8
rdata$r	ENDS
;	COMDAT __real@4f800000
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
CONST	ENDS
;	COMDAT ??_7ioSplashWeapon@@6B@
CONST	SEGMENT
??_7ioSplashWeapon@@6B@ DD FLAT:??_R4ioSplashWeapon@@6B@ ; ioSplashWeapon::`vftable'
	DD	FLAT:?IsAlreadyCollisioned@ioWeapon@@UAE_NPAVioPlayEntity@@@Z
	DD	FLAT:?AddCollisionEntity@ioWeapon@@UAEXPAVioPlayEntity@@@Z
	DD	FLAT:?SetOwnerDamageRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeDamageRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeForceRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeRangeRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeSpeedRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeBlowRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeFloatRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeScaleRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeExplosionRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeWoundedTimeRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeLiveTimeRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeBuffLiveTimeRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetWeaponIndex@ioWeapon@@UAEXK@Z
	DD	FLAT:?SetGrapplingTargetName@ioWeapon@@UAEXABVioHashString@@@Z
	DD	FLAT:?SetCreateItem@ioWeapon@@UAEXABVioHashString@@@Z
	DD	FLAT:?SetTeam@ioWeapon@@UAEXPAVioPlayStage@@W4TeamType@@@Z
	DD	FLAT:?CallReserveAreaWeapon@ioWeapon@@UAEXXZ
	DD	FLAT:?SetWeaponDead@ioWeapon@@UAEXXZ
	DD	FLAT:?PlayExplosionSound@ioWeapon@@UAEXXZ
	DD	FLAT:?PlayWoundedSound@ioWeapon@@UAEXPAVioPlayEntity@@@Z
	DD	FLAT:?PlayDefensedSound@ioWeapon@@UAEXPAVioPlayEntity@@@Z
	DD	FLAT:?PlayLoopSound@ioWeapon@@UAEXXZ
	DD	FLAT:?StopLoopSound@ioWeapon@@UAEXXZ
	DD	FLAT:?GetTargetAirBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ
	DD	FLAT:?GetTargetBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ
	DD	FLAT:?GetTargetDownBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ
	DD	FLAT:?GetPosition@ioWeapon@@UBEABUD3DXVECTOR3@@XZ
	DD	FLAT:?GetBlowType@ioWeapon@@UBE?AW4BlowTargetType@@XZ
	DD	FLAT:?GetPushPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetBlowPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetAirPushPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetAirBlowPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetDefensePushPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetCollisionEnableTime@ioWeapon@@UBEKXZ
	DD	FLAT:?SetSylphid@ioWeapon@@UAEHXZ
	DD	FLAT:?ApplyExtraReserveWeaponByWeaponInfo@ioWeapon@@UAEXPAV1@@Z
	DD	FLAT:?InitResource@ioWeapon@@UAE_NXZ
	DD	FLAT:?DestroyResource@ioWeapon@@UAEXPAVioPlayStage@@@Z
	DD	FLAT:?LoadProperty@ioSplashWeapon@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?SetResistanceAttr@ioWeapon@@UAEXH@Z
	DD	FLAT:?SetStartCollisionBox@ioWeapon@@UAEXXZ
	DD	FLAT:?SetLiveTime@ioWeapon@@UAEXK@Z
	DD	FLAT:?SetMoveDir@ioWeapon@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?SetMoveSpeed@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetFloatPower@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetStartPosition@ioWeapon@@UAEXABUD3DXVECTOR3@@PAVioPlayStage@@@Z
	DD	FLAT:?Process@ioSplashWeapon@@UAEXMPAVioPlayStage@@@Z
	DD	FLAT:?IsCollision@ioWeapon@@UAE_NPAVioPlayEntity@@_N@Z
	DD	FLAT:?TestMapCollision@ioWeapon@@UAE_NPAVioOpcodeShape@@PAVioPlayStage@@PBUD3DXMATRIX@@@Z
	DD	FLAT:?CheckPreCollision@ioWeapon@@UAEXPAVioPlayEntity@@PAVioPlayStage@@@Z
	DD	FLAT:?CheckStructAndDummy@ioWeapon@@UAEXPAVioPlayEntity@@PAVioPlayStage@@@Z
	DD	FLAT:?GetDamage@ioWeapon@@UAEMPAVioPlayEntity@@@Z
	DD	FLAT:?GetBaseDamage@ioWeapon@@UAEMPAVioPlayEntity@@@Z
	DD	FLAT:?GetPushAngle@ioWeapon@@UBEMXZ
	DD	FLAT:?IsResistanceMagic@ioWeapon@@UAEHPAVioBaseChar@@@Z
	DD	FLAT:?IsResistanceBomb@ioWeapon@@UAEHPAVioBaseChar@@@Z
	DD	FLAT:?IsCanMineExplosion@ioWeapon@@UAE_NXZ
	DD	FLAT:?CheckGrapplingState@ioWeapon@@UAE?AW4GrapplingType@@XZ
	DD	FLAT:?CheckCurAttribute@ioWeapon@@UAEXPBVioPlayEntity@@@Z
	DD	FLAT:?CheckItemNotDrop@ioWeapon@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?GetWorldAttackBoxList@ioWeapon@@UAEXAAV?$vector@VioOrientBox@@V?$allocator@VioOrientBox@@@std@@@std@@@Z
	DD	FLAT:?GetAttackDir@ioWeapon@@UBE?AUD3DXVECTOR3@@PBVioPlayEntity@@@Z
	DD	FLAT:?GetLocalAttackBox@ioWeapon@@UBEABVioOrientBox@@XZ
	DD	FLAT:?GetLiveTime@ioWeapon@@UAEKXZ
	DD	FLAT:?GetMoveDir@ioWeapon@@UAE?AUD3DXVECTOR3@@XZ
	DD	FLAT:?CheckWeaponCollision@ioWeapon@@UAEXXZ
	DD	FLAT:?GetType@ioSplashWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ
	DD	FLAT:?GetActionStopType@ioSplashWeapon@@UBE?AW4ActionStopType@@XZ
	DD	FLAT:?GetDieActionStopType@ioSplashWeapon@@UBE?AW4ActionStopType@@XZ
	DD	FLAT:?GetRefreshDuration@ioWeapon@@UAEKXZ
	DD	FLAT:?GetIgnoreDuration@ioWeapon@@UAEKXZ
	DD	FLAT:?GetIgnoreTimeTypeDuration@ioWeapon@@UAEKXZ
	DD	FLAT:?GetIgnoreTimeType@ioWeapon@@UAEKXZ
	DD	FLAT:?ApplyWeaponSync@ioWeapon@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z
	DD	FLAT:?IsSkillDependency@ioWeapon@@UAE_NABVioHashString@@@Z
	DD	FLAT:?SetSkillDependencyAction@ioWeapon@@UAEXXZ
	DD	FLAT:?UpdateWorldAttackBox@ioSplashWeapon@@MAEXM_N@Z
	DD	FLAT:?GetAttribute@ioWeapon@@MBEPBUWeaponAttribute@@XZ
	DD	FLAT:?CalcFinalDamage@ioWeapon@@MAEMXZ
	DD	FLAT:?CalcFinalBoundDamage@ioWeapon@@MAEMXZ
	DD	FLAT:?CheckPiercing@ioWeapon@@MAE_N_N@Z
	DD	FLAT:?ClearCollisionList@ioWeapon@@MAEXXZ
	DD	FLAT:?CheckCreateWeaponList@ioWeapon@@MAEXXZ
	DD	FLAT:?CreateCollisionAreaWeapon@ioWeapon@@MAEXXZ
	DD	FLAT:?SetMapCollision@ioWeapon@@UAEXXZ
	DD	FLAT:?IsIgnoreMapCollision@ioWeapon@@UBE_NXZ
	DD	FLAT:?IsIgnoreTestMapCollision@ioWeapon@@UBE_NXZ
	DD	FLAT:?IsIgnoreMapCollisionEffect@ioWeapon@@UBE_NXZ
	DD	FLAT:?AddEffectEvent@ioWeapon@@MAEXPAVioEffect@@@Z
	DD	FLAT:??_EioSplashWeapon@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z$1
__ehfuncinfo$??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z DD 019930522H
	DD	02H
	DD	FLAT:__unwindtable$??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iosplashweapon.cpp
xdata$x	ENDS
;	COMDAT ??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pOwner$ = 8						; size = 4
tv172 = 12						; size = 4
tv168 = 12						; size = 4
_pAttr$ = 12						; size = 4
??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z PROC ; ioSplashWeapon::ioSplashWeapon, COMDAT
; _this$ = ecx

; 15   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 75 0c	 push	 DWORD PTR _pAttr$[ebp]
  00014	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  00017	e8 00 00 00 00	 call	 ??0ioWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z ; ioWeapon::ioWeapon
  0001c	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0
  00020	8d 8e 94 08 00
	00		 lea	 ecx, DWORD PTR [esi+2196]
  00026	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioSplashWeapon@@6B@
  0002c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 16   : 	SetPeculiarity( WP_WOUND_NO_SOUND |
; 17   : 					WP_DEF_NO_SOUND );

  00032	68 c0 00 00 00	 push	 192			; 000000c0H
  00037	8b ce		 mov	 ecx, esi
  00039	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0003d	e8 00 00 00 00	 call	 ?SetPeculiarity@ioWeapon@@QAEXK@Z ; ioWeapon::SetPeculiarity

; 18   : 
; 19   : 	m_fSplashScale_w = FLOAT1;

  00042	b8 01 00 00 00	 mov	 eax, 1
  00047	89 45 0c	 mov	 DWORD PTR tv172[ebp], eax
  0004a	db 45 0c	 fild	 DWORD PTR tv172[ebp]
  0004d	85 c0		 test	 eax, eax
  0004f	79 06		 jns	 SHORT $LN10@ioSplashWe
  00051	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN10@ioSplashWe:
  00057	d9 9e a4 08 00
	00		 fstp	 DWORD PTR [esi+2212]

; 20   : 	m_fSplashScale_h = FLOAT1;

  0005d	b8 01 00 00 00	 mov	 eax, 1
  00062	89 45 0c	 mov	 DWORD PTR tv168[ebp], eax
  00065	db 45 0c	 fild	 DWORD PTR tv168[ebp]
  00068	85 c0		 test	 eax, eax
  0006a	79 06		 jns	 SHORT $LN11@ioSplashWe
  0006c	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN11@ioSplashWe:
  00072	d9 9e a8 08 00
	00		 fstp	 DWORD PTR [esi+2216]

; 21   : 	m_bSplash = false;

  00078	c6 86 ac 08 00
	00 00		 mov	 BYTE PTR [esi+2220], 0

; 22   : }

  0007f	8b c6		 mov	 eax, esi
  00081	e8 00 00 00 00	 call	 __EH_epilog3
  00086	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioWeapon@@UAE@XZ	; ioWeapon::~ioWeapon
__unwindfunclet$??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 94 08 00
	00		 add	 ecx, 2196		; 00000894H
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z:
  00017	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0001b	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0001e	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00021	33 c8		 xor	 ecx, eax
  00023	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00028	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z
  0002d	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioSplashWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z ENDP ; ioSplashWeapon::ioSplashWeapon
PUBLIC	??1ioSplashWeapon@@UAE@XZ			; ioSplashWeapon::~ioSplashWeapon
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioSplashWeapon@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioSplashWeapon@@UAE@XZ$0
__ehfuncinfo$??1ioSplashWeapon@@UAE@XZ DD 019930522H
	DD	01H
	DD	FLAT:__unwindtable$??1ioSplashWeapon@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ioSplashWeapon@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioSplashWeapon@@UAE@XZ PROC				; ioSplashWeapon::~ioSplashWeapon, COMDAT
; _this$ = ecx

; 25   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioSplashWeapon@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioSplashWeapon@@6B@
  00017	83 65 fc 00	 and	 DWORD PTR __$EHRec$[ebp+8], 0

; 26   : }

  0001b	8d 8e 94 08 00
	00		 lea	 ecx, DWORD PTR [esi+2196]
  00021	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  00027	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  0002b	8b ce		 mov	 ecx, esi
  0002d	e8 00 00 00 00	 call	 ??1ioWeapon@@UAE@XZ	; ioWeapon::~ioWeapon
  00032	e8 00 00 00 00	 call	 __EH_epilog3
  00037	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioSplashWeapon@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioWeapon@@UAE@XZ	; ioWeapon::~ioWeapon
__ehhandler$??1ioSplashWeapon@@UAE@XZ:
  00008	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0000c	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0000f	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00012	33 c8		 xor	 ecx, eax
  00014	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00019	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioSplashWeapon@@UAE@XZ
  0001e	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioSplashWeapon@@UAE@XZ ENDP				; ioSplashWeapon::~ioSplashWeapon
EXTRN	?CreateMapEffect@ioPlayStage@@QAEPAVioMapEffect@@ABVioHashString@@ABUD3DXVECTOR3@@1@Z:PROC ; ioPlayStage::CreateMapEffect
EXTRN	?GetScale@ioWeapon@@QBEABUD3DXVECTOR3@@XZ:PROC	; ioWeapon::GetScale
EXTRN	__imp_?IsEmpty@ioHashString@@QBE_NXZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?Process@ioSplashWeapon@@UAEXMPAVioPlayStage@@@Z
_TEXT	SEGMENT
_fTimePerSec$ = 8					; size = 4
_pStage$ = 12						; size = 4
?Process@ioSplashWeapon@@UAEXMPAVioPlayStage@@@Z PROC	; ioSplashWeapon::Process, COMDAT
; _this$ = ecx

; 41   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 42   : 	if( m_bSplash )

  00006	80 be ac 08 00
	00 00		 cmp	 BYTE PTR [esi+2220], 0
  0000d	74 07		 je	 SHORT $LN2@Process

; 43   : 	{
; 44   : 		SetWeaponDead();

  0000f	8b 06		 mov	 eax, DWORD PTR [esi]
  00011	ff 50 4c	 call	 DWORD PTR [eax+76]

; 45   : 		return;

  00014	eb 52		 jmp	 SHORT $LN3@Process
$LN2@Process:
  00016	57		 push	 edi

; 46   : 	}
; 47   : 
; 48   : 	if( !m_SplashEffect.IsEmpty() )

  00017	8d be 94 08 00
	00		 lea	 edi, DWORD PTR [esi+2196]
  0001d	8b cf		 mov	 ecx, edi
  0001f	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ
  00025	84 c0		 test	 al, al
  00027	75 20		 jne	 SHORT $LN1@Process

; 49   : 	{
; 50   : 		pStage->CreateMapEffect( m_SplashEffect,
; 51   : 								 GetPosition(),
; 52   : 								 GetScale() );

  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?GetScale@ioWeapon@@QBEABUD3DXVECTOR3@@XZ ; ioWeapon::GetScale
  00030	50		 push	 eax
  00031	8b 06		 mov	 eax, DWORD PTR [esi]
  00033	8b ce		 mov	 ecx, esi
  00035	ff 50 70	 call	 DWORD PTR [eax+112]
  00038	8b 4d 0c	 mov	 ecx, DWORD PTR _pStage$[ebp]
  0003b	50		 push	 eax
  0003c	57		 push	 edi
  0003d	e8 00 00 00 00	 call	 ?CreateMapEffect@ioPlayStage@@QAEPAVioMapEffect@@ABVioHashString@@ABUD3DXVECTOR3@@1@Z ; ioPlayStage::CreateMapEffect

; 53   : 
; 54   : 		ioWeapon::PlayExplosionSound();

  00042	8b ce		 mov	 ecx, esi
  00044	e8 00 00 00 00	 call	 ?PlayExplosionSound@ioWeapon@@UAEXXZ ; ioWeapon::PlayExplosionSound
$LN1@Process:

; 55   : 	}
; 56   : 
; 57   : 	UpdateWorldAttackBox( fTimePerSec, false );

  00049	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  0004e	8b 06		 mov	 eax, DWORD PTR [esi]
  00050	6a 00		 push	 0
  00052	51		 push	 ecx
  00053	8b ce		 mov	 ecx, esi
  00055	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005a	ff 90 38 01 00
	00		 call	 DWORD PTR [eax+312]

; 58   : 	m_bSplash = true;

  00060	c6 86 ac 08 00
	00 01		 mov	 BYTE PTR [esi+2220], 1
  00067	5f		 pop	 edi
$LN3@Process:
  00068	5e		 pop	 esi

; 59   : }

  00069	5d		 pop	 ebp
  0006a	c2 08 00	 ret	 8
?Process@ioSplashWeapon@@UAEXMPAVioPlayStage@@@Z ENDP	; ioSplashWeapon::Process
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetType@ioSplashWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ
_TEXT	SEGMENT
?GetType@ioSplashWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ PROC ; ioSplashWeapon::GetType, COMDAT
; _this$ = ecx

; 63   : 	return WT_SPLASH;

  00000	6a 0a		 push	 10			; 0000000aH
  00002	58		 pop	 eax

; 64   : }

  00003	c3		 ret	 0
?GetType@ioSplashWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ ENDP ; ioSplashWeapon::GetType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetActionStopType@ioSplashWeapon@@UBE?AW4ActionStopType@@XZ
_TEXT	SEGMENT
?GetActionStopType@ioSplashWeapon@@UBE?AW4ActionStopType@@XZ PROC ; ioSplashWeapon::GetActionStopType, COMDAT
; _this$ = ecx

; 68   : 	return m_ActionStopType;

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_ActionStopType@ioSplashWeapon@@2W4ActionStopType@@A ; ioSplashWeapon::m_ActionStopType

; 69   : }

  00005	c3		 ret	 0
?GetActionStopType@ioSplashWeapon@@UBE?AW4ActionStopType@@XZ ENDP ; ioSplashWeapon::GetActionStopType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetDieActionStopType@ioSplashWeapon@@UBE?AW4ActionStopType@@XZ
_TEXT	SEGMENT
?GetDieActionStopType@ioSplashWeapon@@UBE?AW4ActionStopType@@XZ PROC ; ioSplashWeapon::GetDieActionStopType, COMDAT
; _this$ = ecx

; 73   : 	return m_DieActionStopType;

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_DieActionStopType@ioSplashWeapon@@2W4ActionStopType@@A ; ioSplashWeapon::m_DieActionStopType

; 74   : }

  00005	c3		 ret	 0
?GetDieActionStopType@ioSplashWeapon@@UBE?AW4ActionStopType@@XZ ENDP ; ioSplashWeapon::GetDieActionStopType
_TEXT	ENDS
PUBLIC	__real@3f800000
PUBLIC	__$ArrayPad$
EXTRN	__imp_?SetNull@ioOrientBox@@QAEXXZ:PROC
EXTRN	__imp_?SetExtents@ioOrientBox@@QAEXHM@Z:PROC
EXTRN	__imp_?GetExtents@ioOrientBox@@QBEMH@Z:PROC
EXTRN	__imp_??1ioOrientBox@@QAE@XZ:PROC
EXTRN	?GetOwner@ioWeapon@@QBEPAVioBaseChar@@XZ:PROC	; ioWeapon::GetOwner
EXTRN	___security_cookie:DWORD
;	COMDAT __real@3f800000
CONST	SEGMENT
__real@3f800000 DD 03f800000r			; 1
; Function compile flags: /Ogsp
CONST	ENDS
;	COMDAT ?UpdateWorldAttackBox@ioSplashWeapon@@MAEXM_N@Z
_TEXT	SEGMENT
tv249 = -76						; size = 4
tv243 = -76						; size = 4
$T530556 = -72						; size = 68
__$ArrayPad$ = -4					; size = 4
_fTimePerSec$ = 8					; size = 4
_bSetNull$ = 12						; size = 1
?UpdateWorldAttackBox@ioSplashWeapon@@MAEXM_N@Z PROC	; ioSplashWeapon::UpdateWorldAttackBox, COMDAT
; _this$ = ecx

; 77   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 4c	 sub	 esp, 76			; 0000004cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	53		 push	 ebx
  00011	56		 push	 esi
  00012	8b d9		 mov	 ebx, ecx

; 78   : 	ioBaseChar *pOwner = GetOwner();

  00014	e8 00 00 00 00	 call	 ?GetOwner@ioWeapon@@QBEPAVioBaseChar@@XZ ; ioWeapon::GetOwner

; 79   : 
; 80   : 	if( bSetNull || !pOwner )

  00019	80 7d 0c 00	 cmp	 BYTE PTR _bSetNull$[ebp], 0
  0001d	0f 85 9d 00 00
	00		 jne	 $LN2@UpdateWorl
  00023	85 c0		 test	 eax, eax
  00025	0f 84 95 00 00
	00		 je	 $LN2@UpdateWorl

; 84   : 	}
; 85   : 	else
; 86   : 	{
; 87   : 		m_WorldAttackBox = pOwner->GetAttackCollisionBox( m_CollisionType );

  0002b	f3 0f 10 05 00
	00 00 00	 movss	 xmm0, DWORD PTR __real@3f800000
  00033	8b 10		 mov	 edx, DWORD PTR [eax]
  00035	57		 push	 edi
  00036	51		 push	 ecx
  00037	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003c	6a 00		 push	 0
  0003e	ff b3 b0 04 00
	00		 push	 DWORD PTR [ebx+1200]
  00044	8d 4d b8	 lea	 ecx, DWORD PTR $T530556[ebp]
  00047	51		 push	 ecx
  00048	8b c8		 mov	 ecx, eax
  0004a	ff 92 e0 00 00
	00		 call	 DWORD PTR [edx+224]
  00050	6a 11		 push	 17			; 00000011H
  00052	59		 pop	 ecx
  00053	8b f0		 mov	 esi, eax
  00055	8d bb e8 04 00
	00		 lea	 edi, DWORD PTR [ebx+1256]
  0005b	f3 a5		 rep movsd
  0005d	8d 4d b8	 lea	 ecx, DWORD PTR $T530556[ebp]
  00060	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioOrientBox@@QAE@XZ

; 88   : 		m_WorldAttackBox.SetExtents( 0, m_WorldAttackBox.GetExtents(0) * m_fSplashScale_h );

  00066	8d b3 e8 04 00
	00		 lea	 esi, DWORD PTR [ebx+1256]
  0006c	6a 00		 push	 0
  0006e	8b ce		 mov	 ecx, esi
  00070	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetExtents@ioOrientBox@@QBEMH@Z
  00076	d8 8b a8 08 00
	00		 fmul	 DWORD PTR [ebx+2216]
  0007c	8b 3d 00 00 00
	00		 mov	 edi, DWORD PTR __imp_?SetExtents@ioOrientBox@@QAEXHM@Z
  00082	51		 push	 ecx
  00083	8b ce		 mov	 ecx, esi
  00085	d9 5d b4	 fstp	 DWORD PTR tv249[ebp]
  00088	d9 45 b4	 fld	 DWORD PTR tv249[ebp]
  0008b	d9 1c 24	 fstp	 DWORD PTR [esp]
  0008e	6a 00		 push	 0
  00090	ff d7		 call	 edi

; 89   : 		m_WorldAttackBox.SetExtents( 1, m_WorldAttackBox.GetExtents(1) * m_fSplashScale_w );

  00092	6a 01		 push	 1
  00094	8b ce		 mov	 ecx, esi
  00096	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetExtents@ioOrientBox@@QBEMH@Z
  0009c	d8 8b a4 08 00
	00		 fmul	 DWORD PTR [ebx+2212]
  000a2	51		 push	 ecx
  000a3	8b ce		 mov	 ecx, esi
  000a5	d9 5d b4	 fstp	 DWORD PTR tv243[ebp]
  000a8	d9 45 b4	 fld	 DWORD PTR tv243[ebp]
  000ab	d9 1c 24	 fstp	 DWORD PTR [esp]
  000ae	6a 01		 push	 1
  000b0	ff d7		 call	 edi

; 90   : 
; 91   : 		m_WorldAttackBoxForMap = m_WorldAttackBox;

  000b2	6a 11		 push	 17			; 00000011H
  000b4	59		 pop	 ecx
  000b5	8d bb 2c 05 00
	00		 lea	 edi, DWORD PTR [ebx+1324]
  000bb	f3 a5		 rep movsd
  000bd	5f		 pop	 edi
  000be	eb 16		 jmp	 SHORT $LN1@UpdateWorl
$LN2@UpdateWorl:

; 81   : 	{
; 82   : 		m_WorldAttackBox.SetNull();

  000c0	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?SetNull@ioOrientBox@@QAEXXZ
  000c6	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  000cc	ff d6		 call	 esi

; 83   : 		m_WorldAttackBoxForMap.SetNull();

  000ce	8d 8b 2c 05 00
	00		 lea	 ecx, DWORD PTR [ebx+1324]
  000d4	ff d6		 call	 esi
$LN1@UpdateWorl:

; 92   : 	}
; 93   : }

  000d6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000d9	5e		 pop	 esi
  000da	33 cd		 xor	 ecx, ebp
  000dc	5b		 pop	 ebx
  000dd	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e2	c9		 leave
  000e3	c2 08 00	 ret	 8
?UpdateWorldAttackBox@ioSplashWeapon@@MAEXM_N@Z ENDP	; ioSplashWeapon::UpdateWorldAttackBox
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioSplashWeapon@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioSplashWeapon@@UAEPAXI@Z PROC			; ioSplashWeapon::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioSplashWeapon@@UAE@XZ ; ioSplashWeapon::~ioSplashWeapon
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioSplashWeapon@@UAEPAXI@Z ENDP			; ioSplashWeapon::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadFloat_e@$0P@@ioINILoader@@QAEMAAY0P@$$CBDM@Z ; ioINILoader::LoadFloat_e<15>
EXTRN	__imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$LoadFloat_e@$0P@@ioINILoader@@QAEMAAY0P@$$CBDM@Z
_TEXT	SEGMENT
__k$ = -24						; size = 15
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_f$ = 12						; size = 4
??$LoadFloat_e@$0P@@ioINILoader@@QAEMAAY0P@$$CBDM@Z PROC ; ioINILoader::LoadFloat_e<15>, COMDAT
; _this$ = ecx

; 135  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 136  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 75 01 00
	00		 je	 $LN96@LoadFloat_
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 5e 01 00
	00		 je	 $LN95@LoadFloat_
  00031	b1 ec		 mov	 cl, -20			; ffffffecH
  00033	32 d1		 xor	 dl, cl
  00035	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00038	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003b	84 d2		 test	 dl, dl
  0003d	0f 84 46 01 00
	00		 je	 $LN94@LoadFloat_
  00043	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00046	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 2f 01 00
	00		 je	 $LN93@LoadFloat_
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 18 01 00
	00		 je	 $LN92@LoadFloat_
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 02 01 00
	00		 je	 $LN91@LoadFloat_
  00076	32 d1		 xor	 dl, cl
  00078	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 ec 00 00
	00		 je	 $LN90@LoadFloat_
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 d5 00 00
	00		 je	 $LN89@LoadFloat_
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 be 00 00
	00		 je	 $LN88@LoadFloat_
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 a8 00 00
	00		 je	 $LN87@LoadFloat_
  000b9	32 d1		 xor	 dl, cl
  000bb	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000be	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c1	84 d2		 test	 dl, dl
  000c3	0f 84 92 00 00
	00		 je	 $LN86@LoadFloat_
  000c9	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000cc	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	74 7f		 je	 SHORT $LN85@LoadFloat_
  000d6	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d9	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000dc	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000df	84 d2		 test	 dl, dl
  000e1	74 6c		 je	 SHORT $LN84@LoadFloat_
  000e3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e6	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000e9	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000ec	84 d2		 test	 dl, dl
  000ee	74 5a		 je	 SHORT $LN83@LoadFloat_
  000f0	32 d1		 xor	 dl, cl
  000f2	80 78 0e 00	 cmp	 BYTE PTR [eax+14], 0
  000f6	88 55 f5	 mov	 BYTE PTR __k$[ebp+13], dl
  000f9	0f 84 9a 00 00
	00		 je	 $LN1@LoadFloat_
  000ff	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00102	84 d2		 test	 dl, dl
  00104	74 3e		 je	 SHORT $LN81@LoadFloat_
  00106	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00109	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  0010c	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  0010f	84 d2		 test	 dl, dl
  00111	74 2b		 je	 SHORT $LN80@LoadFloat_
  00113	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00116	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  00119	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0011c	84 d2		 test	 dl, dl
  0011e	74 19		 je	 SHORT $LN79@LoadFloat_
  00120	8a 40 12	 mov	 al, BYTE PTR [eax+18]
  00123	32 d1		 xor	 dl, cl
  00125	88 55 f9	 mov	 BYTE PTR __k$[ebp+17], dl
  00128	84 c0		 test	 al, al
  0012a	74 07		 je	 SHORT $LN78@LoadFloat_
  0012c	34 eb		 xor	 al, -21			; ffffffebH
  0012e	88 45 fa	 mov	 BYTE PTR __k$[ebp+18], al
  00131	eb 66		 jmp	 SHORT $LN1@LoadFloat_
$LN78@LoadFloat_:
  00133	c6 45 fa eb	 mov	 BYTE PTR __k$[ebp+18], -21 ; ffffffebH
  00137	eb 60		 jmp	 SHORT $LN1@LoadFloat_
$LN79@LoadFloat_:
  00139	88 4d f9	 mov	 BYTE PTR __k$[ebp+17], cl
  0013c	eb 5b		 jmp	 SHORT $LN1@LoadFloat_
$LN80@LoadFloat_:
  0013e	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00142	eb 55		 jmp	 SHORT $LN1@LoadFloat_
$LN81@LoadFloat_:
  00144	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00148	eb 4f		 jmp	 SHORT $LN1@LoadFloat_
$LN83@LoadFloat_:
  0014a	88 4d f5	 mov	 BYTE PTR __k$[ebp+13], cl
  0014d	eb 4a		 jmp	 SHORT $LN1@LoadFloat_
$LN84@LoadFloat_:
  0014f	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00153	eb 44		 jmp	 SHORT $LN1@LoadFloat_
$LN85@LoadFloat_:
  00155	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00159	eb 3e		 jmp	 SHORT $LN1@LoadFloat_
$LN86@LoadFloat_:
  0015b	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  0015f	eb 38		 jmp	 SHORT $LN1@LoadFloat_
$LN87@LoadFloat_:
  00161	88 4d f1	 mov	 BYTE PTR __k$[ebp+9], cl
  00164	eb 33		 jmp	 SHORT $LN1@LoadFloat_
$LN88@LoadFloat_:
  00166	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  0016a	eb 2d		 jmp	 SHORT $LN1@LoadFloat_
$LN89@LoadFloat_:
  0016c	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00170	eb 27		 jmp	 SHORT $LN1@LoadFloat_
$LN90@LoadFloat_:
  00172	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  00176	eb 21		 jmp	 SHORT $LN1@LoadFloat_
$LN91@LoadFloat_:
  00178	88 4d ed	 mov	 BYTE PTR __k$[ebp+5], cl
  0017b	eb 1c		 jmp	 SHORT $LN1@LoadFloat_
$LN92@LoadFloat_:
  0017d	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00181	eb 16		 jmp	 SHORT $LN1@LoadFloat_
$LN93@LoadFloat_:
  00183	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00187	eb 10		 jmp	 SHORT $LN1@LoadFloat_
$LN94@LoadFloat_:
  00189	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0018d	eb 0a		 jmp	 SHORT $LN1@LoadFloat_
$LN95@LoadFloat_:
  0018f	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00193	eb 04		 jmp	 SHORT $LN1@LoadFloat_
$LN96@LoadFloat_:
  00195	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadFloat_:
  00199	6a 03		 push	 3
  0019b	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  0019e	c6 45 f6 00	 mov	 BYTE PTR __k$[ebp+14], 0
  001a2	5a		 pop	 edx
$LL104@LoadFloat_:
  001a3	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001a9	83 c0 04	 add	 eax, 4
  001ac	4a		 dec	 edx
  001ad	75 f4		 jne	 SHORT $LL104@LoadFloat_
  001af	6a 0c		 push	 12			; 0000000cH
  001b1	58		 pop	 eax
$LL101@LoadFloat_:
  001b2	8b c8		 mov	 ecx, eax
  001b4	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001ba	79 05		 jns	 SHORT $LN111@LoadFloat_
  001bc	49		 dec	 ecx
  001bd	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001c0	41		 inc	 ecx
$LN111@LoadFloat_:
  001c1	b2 ed		 mov	 dl, -19			; ffffffedH
  001c3	2a d1		 sub	 dl, cl
  001c5	30 54 05 e8	 xor	 BYTE PTR __k$[ebp+eax], dl
  001c9	40		 inc	 eax
  001ca	83 f8 0e	 cmp	 eax, 14			; 0000000eH
  001cd	7c e3		 jl	 SHORT $LL101@LoadFloat_

; 137  : 		return LoadFloat(_k, f);

  001cf	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _f$[ebp]
  001d4	51		 push	 ecx
  001d5	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001d8	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001dd	50		 push	 eax
  001de	8b ce		 mov	 ecx, esi
  001e0	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z

; 138  : 	}

  001e6	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001e9	33 cd		 xor	 ecx, ebp
  001eb	5e		 pop	 esi
  001ec	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001f1	c9		 leave
  001f2	c2 08 00	 ret	 8
??$LoadFloat_e@$0P@@ioINILoader@@QAEMAAY0P@$$CBDM@Z ENDP ; ioINILoader::LoadFloat_e<15>
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadString_e@$0O@@ioINILoader@@QAEXAAY0O@$$CBDAAY00$$CBDPADH@Z ; ioINILoader::LoadString_e<14>
EXTRN	__imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadString_e@$0O@@ioINILoader@@QAEXAAY0O@$$CBDAAY00$$CBDPADH@Z
_TEXT	SEGMENT
_this$GSCopy$ = -28					; size = 4
__k$ = -24						; size = 14
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_d$ = 12						; size = 4
_b$ = 16						; size = 4
_i$ = 20						; size = 4
??$LoadString_e@$0O@@ioINILoader@@QAEXAAY0O@$$CBDAAY00$$CBDPADH@Z PROC ; ioINILoader::LoadString_e<14>, COMDAT
; _this$ = ecx

; 161  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 162  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b 75 0c	 mov	 esi, DWORD PTR _d$[ebp]
  00019	57		 push	 edi
  0001a	8b 7d 10	 mov	 edi, DWORD PTR _b$[ebp]
  0001d	89 4d e4	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00020	84 d2		 test	 dl, dl
  00022	0f 84 64 01 00
	00		 je	 $LN96@LoadString
  00028	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0002b	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  0002e	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00031	84 d2		 test	 dl, dl
  00033	0f 84 4d 01 00
	00		 je	 $LN95@LoadString
  00039	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0003c	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  0003f	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00042	84 d2		 test	 dl, dl
  00044	0f 84 36 01 00
	00		 je	 $LN94@LoadString
  0004a	b1 eb		 mov	 cl, -21			; ffffffebH
  0004c	32 d1		 xor	 dl, cl
  0004e	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00051	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00054	84 d2		 test	 dl, dl
  00056	0f 84 1e 01 00
	00		 je	 $LN93@LoadString
  0005c	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0005f	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  00062	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00065	84 d2		 test	 dl, dl
  00067	0f 84 07 01 00
	00		 je	 $LN92@LoadString
  0006d	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00070	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  00073	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00076	84 d2		 test	 dl, dl
  00078	0f 84 f0 00 00
	00		 je	 $LN91@LoadString
  0007e	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00081	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  00084	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00087	84 d2		 test	 dl, dl
  00089	0f 84 da 00 00
	00		 je	 $LN90@LoadString
  0008f	32 d1		 xor	 dl, cl
  00091	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  00094	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00097	84 d2		 test	 dl, dl
  00099	0f 84 c4 00 00
	00		 je	 $LN89@LoadString
  0009f	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000a2	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  000a5	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a8	84 d2		 test	 dl, dl
  000aa	0f 84 ad 00 00
	00		 je	 $LN88@LoadString
  000b0	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000b3	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000b6	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b9	84 d2		 test	 dl, dl
  000bb	0f 84 96 00 00
	00		 je	 $LN87@LoadString
  000c1	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000c4	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000c7	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000ca	84 d2		 test	 dl, dl
  000cc	0f 84 80 00 00
	00		 je	 $LN86@LoadString
  000d2	32 d1		 xor	 dl, cl
  000d4	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000d7	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000da	84 d2		 test	 dl, dl
  000dc	74 6e		 je	 SHORT $LN85@LoadString
  000de	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000e1	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000e4	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e7	84 d2		 test	 dl, dl
  000e9	74 5b		 je	 SHORT $LN84@LoadString
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000f2	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000f5	0f 84 95 00 00
	00		 je	 $LN111@LoadString
  000fb	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000fe	84 d2		 test	 dl, dl
  00100	74 3f		 je	 SHORT $LN82@LoadString
  00102	32 d1		 xor	 dl, cl
  00104	88 55 f6	 mov	 BYTE PTR __k$[ebp+14], dl
  00107	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  0010a	84 d2		 test	 dl, dl
  0010c	74 2d		 je	 SHORT $LN81@LoadString
  0010e	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00111	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  00114	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00117	84 d2		 test	 dl, dl
  00119	74 1a		 je	 SHORT $LN80@LoadString
  0011b	8a 40 11	 mov	 al, BYTE PTR [eax+17]
  0011e	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00121	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  00124	84 c0		 test	 al, al
  00126	74 07		 je	 SHORT $LN79@LoadString
  00128	34 ec		 xor	 al, -20			; ffffffecH
  0012a	88 45 f9	 mov	 BYTE PTR __k$[ebp+17], al
  0012d	eb 61		 jmp	 SHORT $LN111@LoadString
$LN79@LoadString:
  0012f	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+17], -20 ; ffffffecH
  00133	eb 5b		 jmp	 SHORT $LN111@LoadString
$LN80@LoadString:
  00135	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00139	eb 55		 jmp	 SHORT $LN111@LoadString
$LN81@LoadString:
  0013b	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  0013f	eb 4f		 jmp	 SHORT $LN111@LoadString
$LN82@LoadString:
  00141	88 4d f6	 mov	 BYTE PTR __k$[ebp+14], cl
  00144	eb 4a		 jmp	 SHORT $LN111@LoadString
$LN84@LoadString:
  00146	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  0014a	eb 44		 jmp	 SHORT $LN111@LoadString
$LN85@LoadString:
  0014c	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00150	eb 3e		 jmp	 SHORT $LN111@LoadString
$LN86@LoadString:
  00152	88 4d f2	 mov	 BYTE PTR __k$[ebp+10], cl
  00155	eb 39		 jmp	 SHORT $LN111@LoadString
$LN87@LoadString:
  00157	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  0015b	eb 33		 jmp	 SHORT $LN111@LoadString
$LN88@LoadString:
  0015d	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00161	eb 2d		 jmp	 SHORT $LN111@LoadString
$LN89@LoadString:
  00163	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00167	eb 27		 jmp	 SHORT $LN111@LoadString
$LN90@LoadString:
  00169	88 4d ee	 mov	 BYTE PTR __k$[ebp+6], cl
  0016c	eb 22		 jmp	 SHORT $LN111@LoadString
$LN91@LoadString:
  0016e	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00172	eb 1c		 jmp	 SHORT $LN111@LoadString
$LN92@LoadString:
  00174	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00178	eb 16		 jmp	 SHORT $LN111@LoadString
$LN93@LoadString:
  0017a	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  0017e	eb 10		 jmp	 SHORT $LN111@LoadString
$LN94@LoadString:
  00180	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00184	eb 0a		 jmp	 SHORT $LN111@LoadString
$LN95@LoadString:
  00186	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  0018a	eb 04		 jmp	 SHORT $LN111@LoadString
$LN96@LoadString:
  0018c	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN111@LoadString:
  00190	6a 03		 push	 3
  00192	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  00195	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+13], 0
  00199	5a		 pop	 edx
$LL104@LoadString:
  0019a	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001a0	83 c0 04	 add	 eax, 4
  001a3	4a		 dec	 edx
  001a4	75 f4		 jne	 SHORT $LL104@LoadString

; 163  : 		LoadString(_k, d, b, i);

  001a6	ff 75 14	 push	 DWORD PTR _i$[ebp]
  001a9	8b 4d e4	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  001ac	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  001b0	57		 push	 edi
  001b1	56		 push	 esi
  001b2	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001b5	50		 push	 eax
  001b6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 164  : 	}

  001bc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001bf	5f		 pop	 edi
  001c0	33 cd		 xor	 ecx, ebp
  001c2	5e		 pop	 esi
  001c3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001c8	c9		 leave
  001c9	c2 10 00	 ret	 16			; 00000010H
??$LoadString_e@$0O@@ioINILoader@@QAEXAAY0O@$$CBDAAY00$$CBDPADH@Z ENDP ; ioINILoader::LoadString_e<14>
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
EXTRN	?LoadProperty@ioWeapon@@UAEXAAVioINILoader@@@Z:PROC ; ioWeapon::LoadProperty
EXTRN	_memset:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iosplashweapon.cpp
CONST	ENDS
;	COMDAT ?LoadProperty@ioSplashWeapon@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
tv2803 = -288						; size = 4
tv2793 = -288						; size = 4
$T531442 = -288						; size = 4
$T531313 = -288						; size = 4
_szBuf$ = -284						; size = 260
__k$531596 = -24					; size = 14
__k$531459 = -24					; size = 15
__k$531329 = -24					; size = 15
__$ArrayPad$ = -4					; size = 4
_rkLoader$ = 8						; size = 4
?LoadProperty@ioSplashWeapon@@UAEXAAVioINILoader@@@Z PROC ; ioSplashWeapon::LoadProperty, COMDAT
; _this$ = ecx

; 29   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 20 01 00
	00		 sub	 esp, 288		; 00000120H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _rkLoader$[ebp]

; 30   : 	ioWeapon::LoadProperty( rkLoader );

  00019	57		 push	 edi
  0001a	8b f1		 mov	 esi, ecx
  0001c	e8 00 00 00 00	 call	 ?LoadProperty@ioWeapon@@UAEXAAVioINILoader@@@Z ; ioWeapon::LoadProperty

; 31   : 
; 32   : 	m_fSplashScale_w = rkLoader.LoadFloat_e( "splash_scale_w", FLOAT1 );

  00021	b8 01 00 00 00	 mov	 eax, 1
  00026	33 db		 xor	 ebx, ebx
  00028	6a 03		 push	 3
  0002a	89 85 e0 fe ff
	ff		 mov	 DWORD PTR $T531313[ebp], eax
  00030	c7 45 e8 9e 9c
	87 8b		 mov	 DWORD PTR __k$531329[ebp], -1954046818 ; 8b879c9eH
  00037	c7 45 ec 9e 84
	b4 99		 mov	 DWORD PTR __k$531329[ebp+4], -1716222818 ; 99b4849eH
  0003e	c7 45 f0 8e 8d
	87 8f		 mov	 DWORD PTR __k$531329[ebp+8], -1886941810 ; 8f878d8eH
  00045	66 c7 45 f4 b2
	9b		 mov	 WORD PTR __k$531329[ebp+12], 39858 ; 00009bb2H
  0004b	8d 4d e8	 lea	 ecx, DWORD PTR __k$531329[ebp]
  0004e	88 5d f6	 mov	 BYTE PTR __k$531329[ebp+14], bl
  00051	58		 pop	 eax
$LL108@LoadProper:
  00052	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  00058	83 c1 04	 add	 ecx, 4
  0005b	48		 dec	 eax
  0005c	75 f4		 jne	 SHORT $LL108@LoadProper
  0005e	6a 0c		 push	 12			; 0000000cH
  00060	59		 pop	 ecx
$LL105@LoadProper:
  00061	8b c1		 mov	 eax, ecx
  00063	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  00068	79 05		 jns	 SHORT $LN337@LoadProper
  0006a	48		 dec	 eax
  0006b	83 c8 fc	 or	 eax, -4			; fffffffcH
  0006e	40		 inc	 eax
$LN337@LoadProper:
  0006f	b2 ed		 mov	 dl, -19			; ffffffedH
  00071	2a d0		 sub	 dl, al
  00073	30 54 0d e8	 xor	 BYTE PTR __k$531329[ebp+ecx], dl
  00077	41		 inc	 ecx
  00078	83 f9 0e	 cmp	 ecx, 14			; 0000000eH
  0007b	7c e4		 jl	 SHORT $LL105@LoadProper
  0007d	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR $T531313[ebp]
  00083	db 85 e0 fe ff
	ff		 fild	 DWORD PTR $T531313[ebp]
  00089	85 c0		 test	 eax, eax
  0008b	79 06		 jns	 SHORT $LN338@LoadProper
  0008d	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN338@LoadProper:
  00093	51		 push	 ecx
  00094	8d 45 e8	 lea	 eax, DWORD PTR __k$531329[ebp]
  00097	d9 1c 24	 fstp	 DWORD PTR [esp]
  0009a	50		 push	 eax
  0009b	8b cf		 mov	 ecx, edi
  0009d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  000a3	d9 9e a4 08 00
	00		 fstp	 DWORD PTR [esi+2212]

; 33   : 	m_fSplashScale_h = rkLoader.LoadFloat_e( "splash_scale_h", FLOAT1 );

  000a9	b8 01 00 00 00	 mov	 eax, 1
  000ae	6a 03		 push	 3
  000b0	89 85 e0 fe ff
	ff		 mov	 DWORD PTR $T531442[ebp], eax
  000b6	c7 45 e8 9e 9c
	87 8b		 mov	 DWORD PTR __k$531459[ebp], -1954046818 ; 8b879c9eH
  000bd	c7 45 ec 9e 84
	b4 99		 mov	 DWORD PTR __k$531459[ebp+4], -1716222818 ; 99b4849eH
  000c4	c7 45 f0 8e 8d
	87 8f		 mov	 DWORD PTR __k$531459[ebp+8], -1886941810 ; 8f878d8eH
  000cb	66 c7 45 f4 b2
	84		 mov	 WORD PTR __k$531459[ebp+12], 33970 ; 000084b2H
  000d1	8d 4d e8	 lea	 ecx, DWORD PTR __k$531459[ebp]
  000d4	88 5d f6	 mov	 BYTE PTR __k$531459[ebp+14], bl
  000d7	58		 pop	 eax
$LL216@LoadProper:
  000d8	81 31 ed ec eb
	ea		 xor	 DWORD PTR [ecx], -353637139 ; eaebecedH
  000de	83 c1 04	 add	 ecx, 4
  000e1	48		 dec	 eax
  000e2	75 f4		 jne	 SHORT $LL216@LoadProper
  000e4	6a 0c		 push	 12			; 0000000cH
  000e6	59		 pop	 ecx
$LL213@LoadProper:
  000e7	8b c1		 mov	 eax, ecx
  000e9	25 03 00 00 80	 and	 eax, -2147483645	; 80000003H
  000ee	79 05		 jns	 SHORT $LN339@LoadProper
  000f0	48		 dec	 eax
  000f1	83 c8 fc	 or	 eax, -4			; fffffffcH
  000f4	40		 inc	 eax
$LN339@LoadProper:
  000f5	b2 ed		 mov	 dl, -19			; ffffffedH
  000f7	2a d0		 sub	 dl, al
  000f9	30 54 0d e8	 xor	 BYTE PTR __k$531459[ebp+ecx], dl
  000fd	41		 inc	 ecx
  000fe	83 f9 0e	 cmp	 ecx, 14			; 0000000eH
  00101	7c e4		 jl	 SHORT $LL213@LoadProper
  00103	8b 85 e0 fe ff
	ff		 mov	 eax, DWORD PTR $T531442[ebp]
  00109	db 85 e0 fe ff
	ff		 fild	 DWORD PTR $T531442[ebp]
  0010f	85 c0		 test	 eax, eax
  00111	79 06		 jns	 SHORT $LN340@LoadProper
  00113	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN340@LoadProper:
  00119	51		 push	 ecx
  0011a	8d 45 e8	 lea	 eax, DWORD PTR __k$531459[ebp]
  0011d	d9 1c 24	 fstp	 DWORD PTR [esp]
  00120	50		 push	 eax
  00121	8b cf		 mov	 ecx, edi
  00123	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  00129	d9 9e a8 08 00
	00		 fstp	 DWORD PTR [esi+2216]

; 34   : 
; 35   : 	char szBuf[MAX_PATH] = "";

  0012f	68 03 01 00 00	 push	 259			; 00000103H
  00134	8d 85 e5 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp+1]
  0013a	53		 push	 ebx
  0013b	50		 push	 eax
  0013c	88 9d e4 fe ff
	ff		 mov	 BYTE PTR _szBuf$[ebp], bl
  00142	e8 00 00 00 00	 call	 _memset
  00147	83 c4 0c	 add	 esp, 12			; 0000000cH
  0014a	6a 03		 push	 3

; 36   : 	rkLoader.LoadString_e( "splash_effect", "", szBuf, MAX_PATH );

  0014c	c7 45 e8 9e 9c
	87 8b		 mov	 DWORD PTR __k$531596[ebp], -1954046818 ; 8b879c9eH
  00153	c7 45 ec 9e 84
	b4 8f		 mov	 DWORD PTR __k$531596[ebp+4], -1883994978 ; 8fb4849eH
  0015a	c7 45 f0 8b 8a
	8e 89		 mov	 DWORD PTR __k$531596[ebp+8], -1987147125 ; 898e8a8bH
  00161	8d 45 e8	 lea	 eax, DWORD PTR __k$531596[ebp]
  00164	66 c7 45 f4 99
	00		 mov	 WORD PTR __k$531596[ebp+12], 153 ; 00000099H
  0016a	59		 pop	 ecx
$LL322@LoadProper:
  0016b	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00171	83 c0 04	 add	 eax, 4
  00174	49		 dec	 ecx
  00175	75 f4		 jne	 SHORT $LL322@LoadProper
  00177	80 75 f4 ed	 xor	 BYTE PTR __k$531596[ebp+12], -19 ; ffffffedH
  0017b	68 04 01 00 00	 push	 260			; 00000104H
  00180	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00186	50		 push	 eax
  00187	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0018c	8d 45 e8	 lea	 eax, DWORD PTR __k$531596[ebp]
  0018f	50		 push	 eax
  00190	8b cf		 mov	 ecx, edi
  00192	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 37   : 	m_SplashEffect = szBuf;

  00198	8d 85 e4 fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0019e	50		 push	 eax
  0019f	8d 8e 94 08 00
	00		 lea	 ecx, DWORD PTR [esi+2196]
  001a5	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z

; 38   : }

  001ab	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001ae	5f		 pop	 edi
  001af	5e		 pop	 esi
  001b0	33 cd		 xor	 ecx, ebp
  001b2	5b		 pop	 ebx
  001b3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001b8	c9		 leave
  001b9	c2 04 00	 ret	 4
?LoadProperty@ioSplashWeapon@@UAEXAAVioINILoader@@@Z ENDP ; ioSplashWeapon::LoadProperty
_TEXT	ENDS
END
