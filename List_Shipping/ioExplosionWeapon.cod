; Listing generated by Microsoft (R) Optimizing Compiler Version 16.00.30319.01 

	TITLE	D:\Lost Saga For Developer\Youtube\Tutorial\Source\src\LSClient\ioExplosionWeapon.cpp
	.686P
	.XMM
	include listing.inc
	.model	flat

INCLUDELIB MSVCRT
INCLUDELIB OLDNAMES

PUBLIC	?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
PUBLIC	?m_ActionStopType@ioExplosionWeapon@@2W4ActionStopType@@A ; ioExplosionWeapon::m_ActionStopType
PUBLIC	?m_DieActionStopType@ioExplosionWeapon@@2W4ActionStopType@@A ; ioExplosionWeapon::m_DieActionStopType
_BSS	SEGMENT
?m_ActionStopType@ioExplosionWeapon@@2W4ActionStopType@@A DD 01H DUP (?) ; ioExplosionWeapon::m_ActionStopType
?m_DieActionStopType@ioExplosionWeapon@@2W4ActionStopType@@A DD 01H DUP (?) ; ioExplosionWeapon::m_DieActionStopType
_BSS	ENDS
;	COMDAT ?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB
CONST	SEGMENT
?_EEM_DS@?$deque@UD3DXVECTOR3@@V?$allocator@UD3DXVECTOR3@@@std@@@std@@2HB DD 01H ; std::deque<D3DXVECTOR3,std::allocator<D3DXVECTOR3> >::_EEM_DS
CONST	ENDS
PUBLIC	?return1@@YAIXZ					; return1
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
;	COMDAT ?return1@@YAIXZ
_TEXT	SEGMENT
?return1@@YAIXZ PROC					; return1, COMDAT

; 17   : 	__forceinline unsigned int return1() { __asm mov eax, 1 };

  00000	b8 01 00 00 00	 mov	 eax, 1
  00005	c3		 ret	 0
?return1@@YAIXZ ENDP					; return1
_TEXT	ENDS
PUBLIC	?return1000@@YAIXZ				; return1000
; Function compile flags: /Ogsp
;	COMDAT ?return1000@@YAIXZ
_TEXT	SEGMENT
?return1000@@YAIXZ PROC					; return1000, COMDAT

; 29   : 	__forceinline unsigned int return1000() { __asm mov eax, 1000 };

  00000	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00005	c3		 ret	 0
?return1000@@YAIXZ ENDP					; return1000
_TEXT	ENDS
PUBLIC	??_7ioExplosionWeapon@@6B@			; ioExplosionWeapon::`vftable'
PUBLIC	??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z ; ioExplosionWeapon::ioExplosionWeapon
PUBLIC	??_R4ioExplosionWeapon@@6B@			; ioExplosionWeapon::`RTTI Complete Object Locator'
PUBLIC	??_R0?AVioExplosionWeapon@@@8			; ioExplosionWeapon `RTTI Type Descriptor'
PUBLIC	??_R3ioExplosionWeapon@@8			; ioExplosionWeapon::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioExplosionWeapon@@8			; ioExplosionWeapon::`RTTI Base Class Array'
PUBLIC	??_R1A@?0A@EA@ioExplosionWeapon@@8		; ioExplosionWeapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R1A@?0A@EA@ioWeapon@@8			; ioWeapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
PUBLIC	??_R0?AVioWeapon@@@8				; ioWeapon `RTTI Type Descriptor'
PUBLIC	??_R3ioWeapon@@8				; ioWeapon::`RTTI Class Hierarchy Descriptor'
PUBLIC	??_R2ioWeapon@@8				; ioWeapon::`RTTI Base Class Array'
PUBLIC	?GetCollisionEnableTime@ioExplosionWeapon@@UBEKXZ ; ioExplosionWeapon::GetCollisionEnableTime
PUBLIC	?InitResource@ioExplosionWeapon@@UAE_NXZ	; ioExplosionWeapon::InitResource
PUBLIC	?DestroyResource@ioExplosionWeapon@@UAEXPAVioPlayStage@@@Z ; ioExplosionWeapon::DestroyResource
PUBLIC	?LoadProperty@ioExplosionWeapon@@UAEXAAVioINILoader@@@Z ; ioExplosionWeapon::LoadProperty
PUBLIC	?SetStartPosition@ioExplosionWeapon@@UAEXABUD3DXVECTOR3@@PAVioPlayStage@@@Z ; ioExplosionWeapon::SetStartPosition
PUBLIC	?Process@ioExplosionWeapon@@UAEXMPAVioPlayStage@@@Z ; ioExplosionWeapon::Process
PUBLIC	?IsCollision@ioExplosionWeapon@@UAE_NPAVioPlayEntity@@_N@Z ; ioExplosionWeapon::IsCollision
PUBLIC	?IsCanMineExplosion@ioExplosionWeapon@@UAE_NXZ	; ioExplosionWeapon::IsCanMineExplosion
PUBLIC	?GetLocalAttackBox@ioExplosionWeapon@@UBEABVioOrientBox@@XZ ; ioExplosionWeapon::GetLocalAttackBox
PUBLIC	?GetType@ioExplosionWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ ; ioExplosionWeapon::GetType
PUBLIC	?GetActionStopType@ioExplosionWeapon@@UBE?AW4ActionStopType@@XZ ; ioExplosionWeapon::GetActionStopType
PUBLIC	?GetDieActionStopType@ioExplosionWeapon@@UBE?AW4ActionStopType@@XZ ; ioExplosionWeapon::GetDieActionStopType
PUBLIC	?UpdateWorldAttackBox@ioExplosionWeapon@@MAEXM_N@Z ; ioExplosionWeapon::UpdateWorldAttackBox
EXTRN	__imp_??1ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??1ioOrientBox@@QAE@XZ:PROC
EXTRN	??1ioWeapon@@UAE@XZ:PROC			; ioWeapon::~ioWeapon
EXTRN	?SetPeculiarity@ioWeapon@@QAEXK@Z:PROC		; ioWeapon::SetPeculiarity
EXTRN	__imp_??0ioHashString@@QAE@XZ:PROC
EXTRN	__imp_??0ioOrientBox@@QAE@XZ:PROC
EXTRN	??0ioWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z:PROC ; ioWeapon::ioWeapon
EXTRN	___CxxFrameHandler3:PROC
EXTRN	@__security_check_cookie@4:PROC
EXTRN	__EH_epilog3:PROC
EXTRN	__EH_prolog3:PROC
EXTRN	??_7type_info@@6B@:QWORD			; type_info::`vftable'
EXTRN	?IsAlreadyCollisioned@ioWeapon@@UAE_NPAVioPlayEntity@@@Z:PROC ; ioWeapon::IsAlreadyCollisioned
EXTRN	?AddCollisionEntity@ioWeapon@@UAEXPAVioPlayEntity@@@Z:PROC ; ioWeapon::AddCollisionEntity
EXTRN	?SetOwnerDamageRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerDamageRate
EXTRN	?SetOwnerChargeDamageRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeDamageRate
EXTRN	?SetOwnerChargeForceRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeForceRate
EXTRN	?SetOwnerChargeRangeRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeRangeRate
EXTRN	?SetOwnerChargeSpeedRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeSpeedRate
EXTRN	?SetOwnerChargeBlowRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeBlowRate
EXTRN	?SetOwnerChargeFloatRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeFloatRate
EXTRN	?SetOwnerChargeScaleRate@ioWeapon@@UAEXM@Z:PROC	; ioWeapon::SetOwnerChargeScaleRate
EXTRN	?SetOwnerChargeExplosionRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeExplosionRate
EXTRN	?SetOwnerChargeWoundedTimeRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeWoundedTimeRate
EXTRN	?SetOwnerChargeLiveTimeRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeLiveTimeRate
EXTRN	?SetOwnerChargeBuffLiveTimeRate@ioWeapon@@UAEXM@Z:PROC ; ioWeapon::SetOwnerChargeBuffLiveTimeRate
EXTRN	?SetWeaponIndex@ioWeapon@@UAEXK@Z:PROC		; ioWeapon::SetWeaponIndex
EXTRN	?SetGrapplingTargetName@ioWeapon@@UAEXABVioHashString@@@Z:PROC ; ioWeapon::SetGrapplingTargetName
EXTRN	?SetCreateItem@ioWeapon@@UAEXABVioHashString@@@Z:PROC ; ioWeapon::SetCreateItem
EXTRN	?SetTeam@ioWeapon@@UAEXPAVioPlayStage@@W4TeamType@@@Z:PROC ; ioWeapon::SetTeam
EXTRN	?CallReserveAreaWeapon@ioWeapon@@UAEXXZ:PROC	; ioWeapon::CallReserveAreaWeapon
EXTRN	?SetWeaponDead@ioWeapon@@UAEXXZ:PROC		; ioWeapon::SetWeaponDead
EXTRN	?PlayExplosionSound@ioWeapon@@UAEXXZ:PROC	; ioWeapon::PlayExplosionSound
EXTRN	?PlayWoundedSound@ioWeapon@@UAEXPAVioPlayEntity@@@Z:PROC ; ioWeapon::PlayWoundedSound
EXTRN	?PlayDefensedSound@ioWeapon@@UAEXPAVioPlayEntity@@@Z:PROC ; ioWeapon::PlayDefensedSound
EXTRN	?PlayLoopSound@ioWeapon@@UAEXXZ:PROC		; ioWeapon::PlayLoopSound
EXTRN	?StopLoopSound@ioWeapon@@UAEXXZ:PROC		; ioWeapon::StopLoopSound
EXTRN	?GetTargetAirBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ:PROC ; ioWeapon::GetTargetAirBuffList
EXTRN	?GetTargetBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ:PROC ; ioWeapon::GetTargetBuffList
EXTRN	?GetTargetDownBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ:PROC ; ioWeapon::GetTargetDownBuffList
EXTRN	?GetPosition@ioWeapon@@UBEABUD3DXVECTOR3@@XZ:PROC ; ioWeapon::GetPosition
EXTRN	?GetBlowType@ioWeapon@@UBE?AW4BlowTargetType@@XZ:PROC ; ioWeapon::GetBlowType
EXTRN	?GetPushPower@ioWeapon@@UBEMM@Z:PROC		; ioWeapon::GetPushPower
EXTRN	?GetBlowPower@ioWeapon@@UBEMM@Z:PROC		; ioWeapon::GetBlowPower
EXTRN	?GetAirPushPower@ioWeapon@@UBEMM@Z:PROC		; ioWeapon::GetAirPushPower
EXTRN	?GetAirBlowPower@ioWeapon@@UBEMM@Z:PROC		; ioWeapon::GetAirBlowPower
EXTRN	?GetDefensePushPower@ioWeapon@@UBEMM@Z:PROC	; ioWeapon::GetDefensePushPower
EXTRN	?SetSylphid@ioWeapon@@UAEHXZ:PROC		; ioWeapon::SetSylphid
EXTRN	?ApplyExtraReserveWeaponByWeaponInfo@ioWeapon@@UAEXPAV1@@Z:PROC ; ioWeapon::ApplyExtraReserveWeaponByWeaponInfo
EXTRN	?SetResistanceAttr@ioWeapon@@UAEXH@Z:PROC	; ioWeapon::SetResistanceAttr
EXTRN	?SetStartCollisionBox@ioWeapon@@UAEXXZ:PROC	; ioWeapon::SetStartCollisionBox
EXTRN	?SetLiveTime@ioWeapon@@UAEXK@Z:PROC		; ioWeapon::SetLiveTime
EXTRN	?SetMoveDir@ioWeapon@@UAEXABUD3DXVECTOR3@@@Z:PROC ; ioWeapon::SetMoveDir
EXTRN	?SetMoveSpeed@ioWeapon@@UAEXM@Z:PROC		; ioWeapon::SetMoveSpeed
EXTRN	?SetFloatPower@ioWeapon@@UAEXM@Z:PROC		; ioWeapon::SetFloatPower
EXTRN	?TestMapCollision@ioWeapon@@UAE_NPAVioOpcodeShape@@PAVioPlayStage@@PBUD3DXMATRIX@@@Z:PROC ; ioWeapon::TestMapCollision
EXTRN	?CheckPreCollision@ioWeapon@@UAEXPAVioPlayEntity@@PAVioPlayStage@@@Z:PROC ; ioWeapon::CheckPreCollision
EXTRN	?CheckStructAndDummy@ioWeapon@@UAEXPAVioPlayEntity@@PAVioPlayStage@@@Z:PROC ; ioWeapon::CheckStructAndDummy
EXTRN	?GetDamage@ioWeapon@@UAEMPAVioPlayEntity@@@Z:PROC ; ioWeapon::GetDamage
EXTRN	?GetBaseDamage@ioWeapon@@UAEMPAVioPlayEntity@@@Z:PROC ; ioWeapon::GetBaseDamage
EXTRN	?GetPushAngle@ioWeapon@@UBEMXZ:PROC		; ioWeapon::GetPushAngle
EXTRN	?IsResistanceMagic@ioWeapon@@UAEHPAVioBaseChar@@@Z:PROC ; ioWeapon::IsResistanceMagic
EXTRN	?IsResistanceBomb@ioWeapon@@UAEHPAVioBaseChar@@@Z:PROC ; ioWeapon::IsResistanceBomb
EXTRN	?CheckGrapplingState@ioWeapon@@UAE?AW4GrapplingType@@XZ:PROC ; ioWeapon::CheckGrapplingState
EXTRN	?CheckCurAttribute@ioWeapon@@UAEXPBVioPlayEntity@@@Z:PROC ; ioWeapon::CheckCurAttribute
EXTRN	?CheckItemNotDrop@ioWeapon@@UAE_NPAVioBaseChar@@@Z:PROC ; ioWeapon::CheckItemNotDrop
EXTRN	?GetWorldAttackBoxList@ioWeapon@@UAEXAAV?$vector@VioOrientBox@@V?$allocator@VioOrientBox@@@std@@@std@@@Z:PROC ; ioWeapon::GetWorldAttackBoxList
EXTRN	?GetAttackDir@ioWeapon@@UBE?AUD3DXVECTOR3@@PBVioPlayEntity@@@Z:PROC ; ioWeapon::GetAttackDir
EXTRN	?GetLiveTime@ioWeapon@@UAEKXZ:PROC		; ioWeapon::GetLiveTime
EXTRN	?GetMoveDir@ioWeapon@@UAE?AUD3DXVECTOR3@@XZ:PROC ; ioWeapon::GetMoveDir
EXTRN	?CheckWeaponCollision@ioWeapon@@UAEXXZ:PROC	; ioWeapon::CheckWeaponCollision
EXTRN	?GetRefreshDuration@ioWeapon@@UAEKXZ:PROC	; ioWeapon::GetRefreshDuration
EXTRN	?GetIgnoreDuration@ioWeapon@@UAEKXZ:PROC	; ioWeapon::GetIgnoreDuration
EXTRN	?GetIgnoreTimeTypeDuration@ioWeapon@@UAEKXZ:PROC ; ioWeapon::GetIgnoreTimeTypeDuration
EXTRN	?GetIgnoreTimeType@ioWeapon@@UAEKXZ:PROC	; ioWeapon::GetIgnoreTimeType
EXTRN	?ApplyWeaponSync@ioWeapon@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z:PROC ; ioWeapon::ApplyWeaponSync
EXTRN	?IsSkillDependency@ioWeapon@@UAE_NABVioHashString@@@Z:PROC ; ioWeapon::IsSkillDependency
EXTRN	?SetSkillDependencyAction@ioWeapon@@UAEXXZ:PROC	; ioWeapon::SetSkillDependencyAction
EXTRN	?GetAttribute@ioWeapon@@MBEPBUWeaponAttribute@@XZ:PROC ; ioWeapon::GetAttribute
EXTRN	?CalcFinalDamage@ioWeapon@@MAEMXZ:PROC		; ioWeapon::CalcFinalDamage
EXTRN	?CalcFinalBoundDamage@ioWeapon@@MAEMXZ:PROC	; ioWeapon::CalcFinalBoundDamage
EXTRN	?CheckPiercing@ioWeapon@@MAE_N_N@Z:PROC		; ioWeapon::CheckPiercing
EXTRN	?ClearCollisionList@ioWeapon@@MAEXXZ:PROC	; ioWeapon::ClearCollisionList
EXTRN	?CheckCreateWeaponList@ioWeapon@@MAEXXZ:PROC	; ioWeapon::CheckCreateWeaponList
EXTRN	?CreateCollisionAreaWeapon@ioWeapon@@MAEXXZ:PROC ; ioWeapon::CreateCollisionAreaWeapon
EXTRN	?SetMapCollision@ioWeapon@@UAEXXZ:PROC		; ioWeapon::SetMapCollision
EXTRN	?IsIgnoreMapCollision@ioWeapon@@UBE_NXZ:PROC	; ioWeapon::IsIgnoreMapCollision
EXTRN	?IsIgnoreTestMapCollision@ioWeapon@@UBE_NXZ:PROC ; ioWeapon::IsIgnoreTestMapCollision
EXTRN	?IsIgnoreMapCollisionEffect@ioWeapon@@UBE_NXZ:PROC ; ioWeapon::IsIgnoreMapCollisionEffect
EXTRN	?AddEffectEvent@ioWeapon@@MAEXPAVioEffect@@@Z:PROC ; ioWeapon::AddEffectEvent
EXTRN	??_EioExplosionWeapon@@UAEPAXI@Z:PROC		; ioExplosionWeapon::`vector deleting destructor'
;	COMDAT ??_R2ioWeapon@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioexplosionweapon.cpp
rdata$r	SEGMENT
??_R2ioWeapon@@8 DD FLAT:??_R1A@?0A@EA@ioWeapon@@8	; ioWeapon::`RTTI Base Class Array'
rdata$r	ENDS
;	COMDAT ??_R3ioWeapon@@8
rdata$r	SEGMENT
??_R3ioWeapon@@8 DD 00H					; ioWeapon::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	01H
	DD	FLAT:??_R2ioWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioWeapon@@@8
_DATA	SEGMENT
??_R0?AVioWeapon@@@8 DD FLAT:??_7type_info@@6B@		; ioWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioWeapon@@', 00H
_DATA	ENDS
;	COMDAT ??_R1A@?0A@EA@ioWeapon@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioWeapon@@8 DD FLAT:??_R0?AVioWeapon@@@8	; ioWeapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	00H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R1A@?0A@EA@ioExplosionWeapon@@8
rdata$r	SEGMENT
??_R1A@?0A@EA@ioExplosionWeapon@@8 DD FLAT:??_R0?AVioExplosionWeapon@@@8 ; ioExplosionWeapon::`RTTI Base Class Descriptor at (0,-1,0,64)'
	DD	01H
	DD	00H
	DD	0ffffffffH
	DD	00H
	DD	040H
	DD	FLAT:??_R3ioExplosionWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R2ioExplosionWeapon@@8
rdata$r	SEGMENT
??_R2ioExplosionWeapon@@8 DD FLAT:??_R1A@?0A@EA@ioExplosionWeapon@@8 ; ioExplosionWeapon::`RTTI Base Class Array'
	DD	FLAT:??_R1A@?0A@EA@ioWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R3ioExplosionWeapon@@8
rdata$r	SEGMENT
??_R3ioExplosionWeapon@@8 DD 00H			; ioExplosionWeapon::`RTTI Class Hierarchy Descriptor'
	DD	00H
	DD	02H
	DD	FLAT:??_R2ioExplosionWeapon@@8
rdata$r	ENDS
;	COMDAT ??_R0?AVioExplosionWeapon@@@8
_DATA	SEGMENT
??_R0?AVioExplosionWeapon@@@8 DD FLAT:??_7type_info@@6B@ ; ioExplosionWeapon `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioExplosionWeapon@@', 00H
_DATA	ENDS
;	COMDAT ??_R4ioExplosionWeapon@@6B@
rdata$r	SEGMENT
??_R4ioExplosionWeapon@@6B@ DD 00H			; ioExplosionWeapon::`RTTI Complete Object Locator'
	DD	00H
	DD	00H
	DD	FLAT:??_R0?AVioExplosionWeapon@@@8
	DD	FLAT:??_R3ioExplosionWeapon@@8
rdata$r	ENDS
;	COMDAT ??_7ioExplosionWeapon@@6B@
CONST	SEGMENT
??_7ioExplosionWeapon@@6B@ DD FLAT:??_R4ioExplosionWeapon@@6B@ ; ioExplosionWeapon::`vftable'
	DD	FLAT:?IsAlreadyCollisioned@ioWeapon@@UAE_NPAVioPlayEntity@@@Z
	DD	FLAT:?AddCollisionEntity@ioWeapon@@UAEXPAVioPlayEntity@@@Z
	DD	FLAT:?SetOwnerDamageRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeDamageRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeForceRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeRangeRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeSpeedRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeBlowRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeFloatRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeScaleRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeExplosionRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeWoundedTimeRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeLiveTimeRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetOwnerChargeBuffLiveTimeRate@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetWeaponIndex@ioWeapon@@UAEXK@Z
	DD	FLAT:?SetGrapplingTargetName@ioWeapon@@UAEXABVioHashString@@@Z
	DD	FLAT:?SetCreateItem@ioWeapon@@UAEXABVioHashString@@@Z
	DD	FLAT:?SetTeam@ioWeapon@@UAEXPAVioPlayStage@@W4TeamType@@@Z
	DD	FLAT:?CallReserveAreaWeapon@ioWeapon@@UAEXXZ
	DD	FLAT:?SetWeaponDead@ioWeapon@@UAEXXZ
	DD	FLAT:?PlayExplosionSound@ioWeapon@@UAEXXZ
	DD	FLAT:?PlayWoundedSound@ioWeapon@@UAEXPAVioPlayEntity@@@Z
	DD	FLAT:?PlayDefensedSound@ioWeapon@@UAEXPAVioPlayEntity@@@Z
	DD	FLAT:?PlayLoopSound@ioWeapon@@UAEXXZ
	DD	FLAT:?StopLoopSound@ioWeapon@@UAEXXZ
	DD	FLAT:?GetTargetAirBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ
	DD	FLAT:?GetTargetBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ
	DD	FLAT:?GetTargetDownBuffList@ioWeapon@@UBEABV?$vector@UBuffInfoStruct@@V?$allocator@UBuffInfoStruct@@@std@@@std@@XZ
	DD	FLAT:?GetPosition@ioWeapon@@UBEABUD3DXVECTOR3@@XZ
	DD	FLAT:?GetBlowType@ioWeapon@@UBE?AW4BlowTargetType@@XZ
	DD	FLAT:?GetPushPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetBlowPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetAirPushPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetAirBlowPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetDefensePushPower@ioWeapon@@UBEMM@Z
	DD	FLAT:?GetCollisionEnableTime@ioExplosionWeapon@@UBEKXZ
	DD	FLAT:?SetSylphid@ioWeapon@@UAEHXZ
	DD	FLAT:?ApplyExtraReserveWeaponByWeaponInfo@ioWeapon@@UAEXPAV1@@Z
	DD	FLAT:?InitResource@ioExplosionWeapon@@UAE_NXZ
	DD	FLAT:?DestroyResource@ioExplosionWeapon@@UAEXPAVioPlayStage@@@Z
	DD	FLAT:?LoadProperty@ioExplosionWeapon@@UAEXAAVioINILoader@@@Z
	DD	FLAT:?SetResistanceAttr@ioWeapon@@UAEXH@Z
	DD	FLAT:?SetStartCollisionBox@ioWeapon@@UAEXXZ
	DD	FLAT:?SetLiveTime@ioWeapon@@UAEXK@Z
	DD	FLAT:?SetMoveDir@ioWeapon@@UAEXABUD3DXVECTOR3@@@Z
	DD	FLAT:?SetMoveSpeed@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetFloatPower@ioWeapon@@UAEXM@Z
	DD	FLAT:?SetStartPosition@ioExplosionWeapon@@UAEXABUD3DXVECTOR3@@PAVioPlayStage@@@Z
	DD	FLAT:?Process@ioExplosionWeapon@@UAEXMPAVioPlayStage@@@Z
	DD	FLAT:?IsCollision@ioExplosionWeapon@@UAE_NPAVioPlayEntity@@_N@Z
	DD	FLAT:?TestMapCollision@ioWeapon@@UAE_NPAVioOpcodeShape@@PAVioPlayStage@@PBUD3DXMATRIX@@@Z
	DD	FLAT:?CheckPreCollision@ioWeapon@@UAEXPAVioPlayEntity@@PAVioPlayStage@@@Z
	DD	FLAT:?CheckStructAndDummy@ioWeapon@@UAEXPAVioPlayEntity@@PAVioPlayStage@@@Z
	DD	FLAT:?GetDamage@ioWeapon@@UAEMPAVioPlayEntity@@@Z
	DD	FLAT:?GetBaseDamage@ioWeapon@@UAEMPAVioPlayEntity@@@Z
	DD	FLAT:?GetPushAngle@ioWeapon@@UBEMXZ
	DD	FLAT:?IsResistanceMagic@ioWeapon@@UAEHPAVioBaseChar@@@Z
	DD	FLAT:?IsResistanceBomb@ioWeapon@@UAEHPAVioBaseChar@@@Z
	DD	FLAT:?IsCanMineExplosion@ioExplosionWeapon@@UAE_NXZ
	DD	FLAT:?CheckGrapplingState@ioWeapon@@UAE?AW4GrapplingType@@XZ
	DD	FLAT:?CheckCurAttribute@ioWeapon@@UAEXPBVioPlayEntity@@@Z
	DD	FLAT:?CheckItemNotDrop@ioWeapon@@UAE_NPAVioBaseChar@@@Z
	DD	FLAT:?GetWorldAttackBoxList@ioWeapon@@UAEXAAV?$vector@VioOrientBox@@V?$allocator@VioOrientBox@@@std@@@std@@@Z
	DD	FLAT:?GetAttackDir@ioWeapon@@UBE?AUD3DXVECTOR3@@PBVioPlayEntity@@@Z
	DD	FLAT:?GetLocalAttackBox@ioExplosionWeapon@@UBEABVioOrientBox@@XZ
	DD	FLAT:?GetLiveTime@ioWeapon@@UAEKXZ
	DD	FLAT:?GetMoveDir@ioWeapon@@UAE?AUD3DXVECTOR3@@XZ
	DD	FLAT:?CheckWeaponCollision@ioWeapon@@UAEXXZ
	DD	FLAT:?GetType@ioExplosionWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ
	DD	FLAT:?GetActionStopType@ioExplosionWeapon@@UBE?AW4ActionStopType@@XZ
	DD	FLAT:?GetDieActionStopType@ioExplosionWeapon@@UBE?AW4ActionStopType@@XZ
	DD	FLAT:?GetRefreshDuration@ioWeapon@@UAEKXZ
	DD	FLAT:?GetIgnoreDuration@ioWeapon@@UAEKXZ
	DD	FLAT:?GetIgnoreTimeTypeDuration@ioWeapon@@UAEKXZ
	DD	FLAT:?GetIgnoreTimeType@ioWeapon@@UAEKXZ
	DD	FLAT:?ApplyWeaponSync@ioWeapon@@UAEXAAVSP2Packet@@PAVioPlayStage@@@Z
	DD	FLAT:?IsSkillDependency@ioWeapon@@UAE_NABVioHashString@@@Z
	DD	FLAT:?SetSkillDependencyAction@ioWeapon@@UAEXXZ
	DD	FLAT:?UpdateWorldAttackBox@ioExplosionWeapon@@MAEXM_N@Z
	DD	FLAT:?GetAttribute@ioWeapon@@MBEPBUWeaponAttribute@@XZ
	DD	FLAT:?CalcFinalDamage@ioWeapon@@MAEMXZ
	DD	FLAT:?CalcFinalBoundDamage@ioWeapon@@MAEMXZ
	DD	FLAT:?CheckPiercing@ioWeapon@@MAE_N_N@Z
	DD	FLAT:?ClearCollisionList@ioWeapon@@MAEXXZ
	DD	FLAT:?CheckCreateWeaponList@ioWeapon@@MAEXXZ
	DD	FLAT:?CreateCollisionAreaWeapon@ioWeapon@@MAEXXZ
	DD	FLAT:?SetMapCollision@ioWeapon@@UAEXXZ
	DD	FLAT:?IsIgnoreMapCollision@ioWeapon@@UBE_NXZ
	DD	FLAT:?IsIgnoreTestMapCollision@ioWeapon@@UBE_NXZ
	DD	FLAT:?IsIgnoreMapCollisionEffect@ioWeapon@@UBE_NXZ
	DD	FLAT:?AddEffectEvent@ioWeapon@@MAEXPAVioEffect@@@Z
	DD	FLAT:??_EioExplosionWeapon@@UAEPAXI@Z
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z$0
	DD	00H
	DD	FLAT:__unwindfunclet$??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z$1
	DD	01H
	DD	FLAT:__unwindfunclet$??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z$2
__ehfuncinfo$??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
_pOwner$ = 8						; size = 4
_pAttr$ = 12						; size = 4
??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z PROC ; ioExplosionWeapon::ioExplosionWeapon, COMDAT
; _this$ = ecx

; 15   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	ff 75 0c	 push	 DWORD PTR _pAttr$[ebp]
  00014	ff 75 08	 push	 DWORD PTR _pOwner$[ebp]
  00017	e8 00 00 00 00	 call	 ??0ioWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z ; ioWeapon::ioWeapon
  0001c	33 db		 xor	 ebx, ebx
  0001e	8d 8e 9c 08 00
	00		 lea	 ecx, DWORD PTR [esi+2204]
  00024	89 5d fc	 mov	 DWORD PTR __$EHRec$[ebp+8], ebx
  00027	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioExplosionWeapon@@6B@
  0002d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioOrientBox@@QAE@XZ
  00033	8d 8e e0 08 00
	00		 lea	 ecx, DWORD PTR [esi+2272]
  00039	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  0003d	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??0ioHashString@@QAE@XZ

; 16   : 	SetPeculiarity( WP_MINE_EXPLOSION |
; 17   : 					WP_WOUND_NO_SOUND |
; 18   : 					WP_DEF_NO_SOUND );

  00043	68 d0 00 00 00	 push	 208			; 000000d0H
  00048	8b ce		 mov	 ecx, esi
  0004a	c6 45 fc 02	 mov	 BYTE PTR __$EHRec$[ebp+8], 2
  0004e	e8 00 00 00 00	 call	 ?SetPeculiarity@ioWeapon@@QAEXK@Z ; ioWeapon::SetPeculiarity

; 19   : 
; 20   : 	m_pFireMesh = NULL;

  00053	89 9e 98 08 00
	00		 mov	 DWORD PTR [esi+2200], ebx

; 21   : 	m_State = ES_DELAY;

  00059	89 9e 94 08 00
	00		 mov	 DWORD PTR [esi+2196], ebx

; 22   : 
; 23   : 	m_dwDuration = 0;

  0005f	89 9e f0 08 00
	00		 mov	 DWORD PTR [esi+2288], ebx

; 24   : 	
; 25   : 	m_bResistance = false;

  00065	88 9e 3c 06 00
	00		 mov	 BYTE PTR [esi+1596], bl

; 26   : }

  0006b	8b c6		 mov	 eax, esi
  0006d	e8 00 00 00 00	 call	 __EH_epilog3
  00072	c2 08 00	 ret	 8
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioWeapon@@UAE@XZ	; ioWeapon::~ioWeapon
__unwindfunclet$??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 9c 08 00
	00		 add	 ecx, 2204		; 0000089cH
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioOrientBox@@QAE@XZ
__unwindfunclet$??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z$2:
  00017	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	81 c1 e0 08 00
	00		 add	 ecx, 2272		; 000008e0H
  00020	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z:
  00026	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00030	33 c8		 xor	 ecx, eax
  00032	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00037	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??0ioExplosionWeapon@@QAE@PAVioBaseChar@@PBUWeaponAttribute@@@Z ENDP ; ioExplosionWeapon::ioExplosionWeapon
PUBLIC	??_C@_0DM@PKMFPFGK@ioExplosionWeapon?3?3?$HOioExplosionW@ ; `string'
PUBLIC	??1ioExplosionWeapon@@UAE@XZ			; ioExplosionWeapon::~ioExplosionWeapon
EXTRN	__imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ:PROC
EXTRN	__imp_?LOG@@3VCLog@@A:BYTE
;	COMDAT ??_C@_0DM@PKMFPFGK@ioExplosionWeapon?3?3?$HOioExplosionW@
CONST	SEGMENT
??_C@_0DM@PKMFPFGK@ioExplosionWeapon?3?3?$HOioExplosionW@ DB 'ioExplosion'
	DB	'Weapon::~ioExplosionWeapon - UnReleased Resource', 00H ; `string'
CONST	ENDS
;	COMDAT xdata$x
xdata$x	SEGMENT
__unwindtable$??1ioExplosionWeapon@@UAE@XZ DD 0ffffffffH
	DD	FLAT:__unwindfunclet$??1ioExplosionWeapon@@UAE@XZ$0
	DD	00H
	DD	FLAT:__unwindfunclet$??1ioExplosionWeapon@@UAE@XZ$1
	DD	01H
	DD	FLAT:__unwindfunclet$??1ioExplosionWeapon@@UAE@XZ$2
__ehfuncinfo$??1ioExplosionWeapon@@UAE@XZ DD 019930522H
	DD	03H
	DD	FLAT:__unwindtable$??1ioExplosionWeapon@@UAE@XZ
	DD	2 DUP(00H)
	DD	2 DUP(00H)
	DD	00H
	DD	01H
; Function compile flags: /Ogsp
xdata$x	ENDS
;	COMDAT ??1ioExplosionWeapon@@UAE@XZ
_TEXT	SEGMENT
_this$ = -16						; size = 4
__$EHRec$ = -12						; size = 12
??1ioExplosionWeapon@@UAE@XZ PROC			; ioExplosionWeapon::~ioExplosionWeapon, COMDAT
; _this$ = ecx

; 29   : {

  00000	6a 04		 push	 4
  00002	b8 00 00 00 00	 mov	 eax, __ehhandler$??1ioExplosionWeapon@@UAE@XZ
  00007	e8 00 00 00 00	 call	 __EH_prolog3
  0000c	8b f1		 mov	 esi, ecx
  0000e	89 75 f0	 mov	 DWORD PTR _this$[ebp], esi
  00011	c7 06 00 00 00
	00		 mov	 DWORD PTR [esi], OFFSET ??_7ioExplosionWeapon@@6B@

; 30   : 	if( m_pFireMesh )

  00017	83 be 98 08 00
	00 00		 cmp	 DWORD PTR [esi+2200], 0
  0001e	c7 45 fc 02 00
	00 00		 mov	 DWORD PTR __$EHRec$[ebp+8], 2
  00025	74 16		 je	 SHORT $LN1@ioExplosio

; 31   : 	{
; 32   : 		LOG.PrintTimeAndLog( 0, "ioExplosionWeapon::~ioExplosionWeapon - UnReleased Resource" );

  00027	68 00 00 00 00	 push	 OFFSET ??_C@_0DM@PKMFPFGK@ioExplosionWeapon?3?3?$HOioExplosionW@
  0002c	6a 00		 push	 0
  0002e	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?LOG@@3VCLog@@A
  00034	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?PrintTimeAndLog@CLog@@QAAXHPADZZ
  0003a	83 c4 0c	 add	 esp, 12			; 0000000cH
$LN1@ioExplosio:

; 33   : 	}
; 34   : }

  0003d	8d 8e e0 08 00
	00		 lea	 ecx, DWORD PTR [esi+2272]
  00043	c6 45 fc 01	 mov	 BYTE PTR __$EHRec$[ebp+8], 1
  00047	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
  0004d	8d 8e 9c 08 00
	00		 lea	 ecx, DWORD PTR [esi+2204]
  00053	c6 45 fc 00	 mov	 BYTE PTR __$EHRec$[ebp+8], 0
  00057	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??1ioOrientBox@@QAE@XZ
  0005d	83 4d fc ff	 or	 DWORD PTR __$EHRec$[ebp+8], -1
  00061	8b ce		 mov	 ecx, esi
  00063	e8 00 00 00 00	 call	 ??1ioWeapon@@UAE@XZ	; ioWeapon::~ioWeapon
  00068	e8 00 00 00 00	 call	 __EH_epilog3
  0006d	c3		 ret	 0
_TEXT	ENDS
;	COMDAT text$x
text$x	SEGMENT
__unwindfunclet$??1ioExplosionWeapon@@UAE@XZ$0:
  00000	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  00003	e9 00 00 00 00	 jmp	 ??1ioWeapon@@UAE@XZ	; ioWeapon::~ioWeapon
__unwindfunclet$??1ioExplosionWeapon@@UAE@XZ$1:
  00008	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0000b	81 c1 9c 08 00
	00		 add	 ecx, 2204		; 0000089cH
  00011	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioOrientBox@@QAE@XZ
__unwindfunclet$??1ioExplosionWeapon@@UAE@XZ$2:
  00017	8b 4d f0	 mov	 ecx, DWORD PTR _this$[ebp]
  0001a	81 c1 e0 08 00
	00		 add	 ecx, 2272		; 000008e0H
  00020	ff 25 00 00 00
	00		 jmp	 DWORD PTR __imp_??1ioHashString@@QAE@XZ
__ehhandler$??1ioExplosionWeapon@@UAE@XZ:
  00026	8b 54 24 08	 mov	 edx, DWORD PTR [esp+8]
  0002a	8d 42 0c	 lea	 eax, DWORD PTR [edx+12]
  0002d	8b 4a ec	 mov	 ecx, DWORD PTR [edx-20]
  00030	33 c8		 xor	 ecx, eax
  00032	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00037	b8 00 00 00 00	 mov	 eax, OFFSET __ehfuncinfo$??1ioExplosionWeapon@@UAE@XZ
  0003c	e9 00 00 00 00	 jmp	 ___CxxFrameHandler3
text$x	ENDS
??1ioExplosionWeapon@@UAE@XZ ENDP			; ioExplosionWeapon::~ioExplosionWeapon
EXTRN	__imp_?DestroyEffect@ioEffectFactory@@QAEXPAVioEffect@@@Z:PROC
EXTRN	__imp_?GetSingleton@ioEffectFactory@@SAAAV1@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?DestroyResource@ioExplosionWeapon@@UAEXPAVioPlayStage@@@Z
_TEXT	SEGMENT
_pStage$ = 8						; size = 4
?DestroyResource@ioExplosionWeapon@@UAEXPAVioPlayStage@@@Z PROC ; ioExplosionWeapon::DestroyResource, COMDAT
; _this$ = ecx

; 110  : {

  00000	56		 push	 esi

; 111  : 	if( m_pFireMesh )

  00001	8d b1 98 08 00
	00		 lea	 esi, DWORD PTR [ecx+2200]
  00007	8b 06		 mov	 eax, DWORD PTR [esi]
  00009	85 c0		 test	 eax, eax
  0000b	74 12		 je	 SHORT $LN1@DestroyRes

; 112  : 	{
; 113  : 		g_EffectFactory.DestroyEffect( m_pFireMesh );

  0000d	50		 push	 eax
  0000e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioEffectFactory@@SAAAV1@XZ
  00014	8b c8		 mov	 ecx, eax
  00016	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?DestroyEffect@ioEffectFactory@@QAEXPAVioEffect@@@Z

; 114  : 		m_pFireMesh = NULL;

  0001c	83 26 00	 and	 DWORD PTR [esi], 0
$LN1@DestroyRes:
  0001f	5e		 pop	 esi

; 115  : 	}
; 116  : }

  00020	c2 04 00	 ret	 4
?DestroyResource@ioExplosionWeapon@@UAEXPAVioPlayStage@@@Z ENDP ; ioExplosionWeapon::DestroyResource
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetType@ioExplosionWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ
_TEXT	SEGMENT
?GetType@ioExplosionWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ PROC ; ioExplosionWeapon::GetType, COMDAT
; _this$ = ecx

; 120  : 	return WT_EXPLOSION;

  00000	6a 10		 push	 16			; 00000010H
  00002	58		 pop	 eax

; 121  : }

  00003	c3		 ret	 0
?GetType@ioExplosionWeapon@@UBE?AW4WeaponType@ioWeapon@@XZ ENDP ; ioExplosionWeapon::GetType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetActionStopType@ioExplosionWeapon@@UBE?AW4ActionStopType@@XZ
_TEXT	SEGMENT
?GetActionStopType@ioExplosionWeapon@@UBE?AW4ActionStopType@@XZ PROC ; ioExplosionWeapon::GetActionStopType, COMDAT
; _this$ = ecx

; 125  : 	return m_ActionStopType;

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_ActionStopType@ioExplosionWeapon@@2W4ActionStopType@@A ; ioExplosionWeapon::m_ActionStopType

; 126  : }

  00005	c3		 ret	 0
?GetActionStopType@ioExplosionWeapon@@UBE?AW4ActionStopType@@XZ ENDP ; ioExplosionWeapon::GetActionStopType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetDieActionStopType@ioExplosionWeapon@@UBE?AW4ActionStopType@@XZ
_TEXT	SEGMENT
?GetDieActionStopType@ioExplosionWeapon@@UBE?AW4ActionStopType@@XZ PROC ; ioExplosionWeapon::GetDieActionStopType, COMDAT
; _this$ = ecx

; 130  : 	return m_DieActionStopType;

  00000	a1 00 00 00 00	 mov	 eax, DWORD PTR ?m_DieActionStopType@ioExplosionWeapon@@2W4ActionStopType@@A ; ioExplosionWeapon::m_DieActionStopType

; 131  : }

  00005	c3		 ret	 0
?GetDieActionStopType@ioExplosionWeapon@@UBE?AW4ActionStopType@@XZ ENDP ; ioExplosionWeapon::GetDieActionStopType
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetLocalAttackBox@ioExplosionWeapon@@UBEABVioOrientBox@@XZ
_TEXT	SEGMENT
?GetLocalAttackBox@ioExplosionWeapon@@UBEABVioOrientBox@@XZ PROC ; ioExplosionWeapon::GetLocalAttackBox, COMDAT
; _this$ = ecx

; 135  : 	return m_LocalAttackBox;

  00000	8d 81 9c 08 00
	00		 lea	 eax, DWORD PTR [ecx+2204]

; 136  : }

  00006	c3		 ret	 0
?GetLocalAttackBox@ioExplosionWeapon@@UBEABVioOrientBox@@XZ ENDP ; ioExplosionWeapon::GetLocalAttackBox
_TEXT	ENDS
PUBLIC	__real@4f800000
PUBLIC	_pStage$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	?Explosion@ioExplosionWeapon@@QAEXPAVioPlayStage@@@Z ; ioExplosionWeapon::Explosion
EXTRN	?CreateMapEffect@ioPlayStage@@QAEPAVioMapEffect@@ABVioHashString@@ABUD3DXVECTOR3@@1@Z:PROC ; ioPlayStage::CreateMapEffect
EXTRN	?GetScale@ioWeapon@@QBEABUD3DXVECTOR3@@XZ:PROC	; ioWeapon::GetScale
EXTRN	__imp_?IsEmpty@ioHashString@@QBE_NXZ:PROC
EXTRN	__imp_?SetExtents@ioOrientBox@@QAEXHM@Z:PROC
EXTRN	___security_cookie:DWORD
EXTRN	__fltused:DWORD
;	COMDAT __real@4f800000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@4f800000 DD 04f800000r			; 4.29497e+009
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioexplosionweapon.cpp
CONST	ENDS
;	COMDAT ?Explosion@ioExplosionWeapon@@QAEXPAVioPlayStage@@@Z
_TEXT	SEGMENT
_pStage$GSCopy$ = -24					; size = 4
tv197 = -20						; size = 4
_fHalfRange$ = -20					; size = 4
_vPos$530627 = -16					; size = 12
__$ArrayPad$ = -4					; size = 4
_pStage$ = 8						; size = 4
?Explosion@ioExplosionWeapon@@QAEXPAVioPlayStage@@@Z PROC ; ioExplosionWeapon::Explosion, COMDAT
; _this$ = ecx

; 163  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _pStage$[ebp]
  00013	53		 push	 ebx
  00014	8b d9		 mov	 ebx, ecx

; 164  : 	if( m_State == ES_EXPLOSION )

  00016	33 c9		 xor	 ecx, ecx
  00018	41		 inc	 ecx

; 182  : 	}
; 183  : 
; 184  : 	DestroyResource();

  00019	89 45 e8	 mov	 DWORD PTR _pStage$GSCopy$[ebp], eax
  0001c	39 8b 94 08 00
	00		 cmp	 DWORD PTR [ebx+2196], ecx
  00022	0f 84 d4 00 00
	00		 je	 $LN3@Explosion

; 165  : 		return;
; 166  : 
; 167  : 	m_State = ES_EXPLOSION;
; 168  : 
; 169  : 	float fHalfRange = m_fExplosionRange;
; 170  : 	m_LocalAttackBox.SetExtents( 0, fHalfRange );

  00028	f3 0f 10 83 f4
	08 00 00	 movss	 xmm0, DWORD PTR [ebx+2292]
  00030	56		 push	 esi
  00031	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?SetExtents@ioOrientBox@@QAEXHM@Z
  00037	57		 push	 edi
  00038	51		 push	 ecx
  00039	89 8b 94 08 00
	00		 mov	 DWORD PTR [ebx+2196], ecx
  0003f	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00044	6a 00		 push	 0
  00046	8d 8b 9c 08 00
	00		 lea	 ecx, DWORD PTR [ebx+2204]
  0004c	f3 0f 11 45 ec	 movss	 DWORD PTR _fHalfRange$[ebp], xmm0
  00051	ff d6		 call	 esi

; 171  : 	m_LocalAttackBox.SetExtents( 1, fHalfRange );

  00053	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fHalfRange$[ebp]
  00058	51		 push	 ecx
  00059	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005e	6a 01		 push	 1
  00060	8d 8b 9c 08 00
	00		 lea	 ecx, DWORD PTR [ebx+2204]
  00066	ff d6		 call	 esi

; 172  : 	m_LocalAttackBox.SetExtents( 2, fHalfRange );

  00068	f3 0f 10 45 ec	 movss	 xmm0, DWORD PTR _fHalfRange$[ebp]
  0006d	51		 push	 ecx
  0006e	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00073	6a 02		 push	 2
  00075	8d 8b 9c 08 00
	00		 lea	 ecx, DWORD PTR [ebx+2204]
  0007b	ff d6		 call	 esi

; 173  : 	UpdateWorldAttackBox( 0.0f, false );

  0007d	0f 57 c0	 xorps	 xmm0, xmm0
  00080	8b 03		 mov	 eax, DWORD PTR [ebx]
  00082	6a 00		 push	 0
  00084	51		 push	 ecx
  00085	8b cb		 mov	 ecx, ebx
  00087	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0008c	ff 90 38 01 00
	00		 call	 DWORD PTR [eax+312]

; 174  : 
; 175  : 	if( !m_BoomEffect.IsEmpty() )

  00092	8d 8b e0 08 00
	00		 lea	 ecx, DWORD PTR [ebx+2272]
  00098	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsEmpty@ioHashString@@QBE_NXZ
  0009e	84 c0		 test	 al, al
  000a0	75 4c		 jne	 SHORT $LN1@Explosion

; 176  : 	{
; 177  : 		D3DXVECTOR3 vPos = GetPosition();

  000a2	8b 03		 mov	 eax, DWORD PTR [ebx]
  000a4	8b cb		 mov	 ecx, ebx
  000a6	ff 50 70	 call	 DWORD PTR [eax+112]
  000a9	8b f0		 mov	 esi, eax
  000ab	8d 7d f0	 lea	 edi, DWORD PTR _vPos$530627[ebp]
  000ae	a5		 movsd
  000af	a5		 movsd
  000b0	a5		 movsd

; 178  : 		vPos.y += FLOAT1;

  000b1	b8 01 00 00 00	 mov	 eax, 1
  000b6	89 45 ec	 mov	 DWORD PTR tv197[ebp], eax
  000b9	db 45 ec	 fild	 DWORD PTR tv197[ebp]
  000bc	85 c0		 test	 eax, eax
  000be	79 06		 jns	 SHORT $LN7@Explosion
  000c0	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN7@Explosion:
  000c6	d8 45 f4	 fadd	 DWORD PTR _vPos$530627[ebp+4]

; 179  : 
; 180  : 		pStage->CreateMapEffect( m_BoomEffect, vPos, GetScale() );

  000c9	8b cb		 mov	 ecx, ebx
  000cb	d9 5d f4	 fstp	 DWORD PTR _vPos$530627[ebp+4]
  000ce	e8 00 00 00 00	 call	 ?GetScale@ioWeapon@@QBEABUD3DXVECTOR3@@XZ ; ioWeapon::GetScale
  000d3	8b 4d e8	 mov	 ecx, DWORD PTR _pStage$GSCopy$[ebp]
  000d6	50		 push	 eax
  000d7	8d 45 f0	 lea	 eax, DWORD PTR _vPos$530627[ebp]
  000da	50		 push	 eax
  000db	8d 83 e0 08 00
	00		 lea	 eax, DWORD PTR [ebx+2272]
  000e1	50		 push	 eax
  000e2	e8 00 00 00 00	 call	 ?CreateMapEffect@ioPlayStage@@QAEPAVioMapEffect@@ABVioHashString@@ABUD3DXVECTOR3@@1@Z ; ioPlayStage::CreateMapEffect

; 181  : 		ioWeapon::PlayExplosionSound();

  000e7	8b cb		 mov	 ecx, ebx
  000e9	e8 00 00 00 00	 call	 ?PlayExplosionSound@ioWeapon@@UAEXXZ ; ioWeapon::PlayExplosionSound
$LN1@Explosion:

; 182  : 	}
; 183  : 
; 184  : 	DestroyResource();

  000ee	8b 03		 mov	 eax, DWORD PTR [ebx]
  000f0	6a 00		 push	 0
  000f2	8b cb		 mov	 ecx, ebx
  000f4	ff 90 9c 00 00
	00		 call	 DWORD PTR [eax+156]
  000fa	5f		 pop	 edi
  000fb	5e		 pop	 esi
$LN3@Explosion:

; 185  : }

  000fc	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000ff	33 cd		 xor	 ecx, ebp
  00101	5b		 pop	 ebx
  00102	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00107	c9		 leave
  00108	c2 04 00	 ret	 4
?Explosion@ioExplosionWeapon@@QAEXPAVioPlayStage@@@Z ENDP ; ioExplosionWeapon::Explosion
_TEXT	ENDS
PUBLIC	__$ArrayPad$
EXTRN	?SetPosition@ioWeapon@@QAEXABUD3DXVECTOR3@@@Z:PROC ; ioWeapon::SetPosition
EXTRN	?GetMapHeight@ioPlayStage@@QAEMMMPBVioGameEntity@@_NM1@Z:PROC ; ioPlayStage::GetMapHeight
; Function compile flags: /Ogsp
;	COMDAT ?SetStartPosition@ioExplosionWeapon@@UAEXABUD3DXVECTOR3@@PAVioPlayStage@@@Z
_TEXT	SEGMENT
tv206 = -24						; size = 4
tv198 = -24						; size = 4
tv220 = -20						; size = 4
tv217 = -20						; size = 4
_fMapHeight$ = -20					; size = 4
_vNewPos$ = -16						; size = 12
__$ArrayPad$ = -4					; size = 4
_vPos$ = 8						; size = 4
_pStage$ = 12						; size = 4
?SetStartPosition@ioExplosionWeapon@@UAEXABUD3DXVECTOR3@@PAVioPlayStage@@@Z PROC ; ioExplosionWeapon::SetStartPosition, COMDAT
; _this$ = ecx

; 210  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 55 08	 mov	 edx, DWORD PTR _vPos$[ebp]
  00013	53		 push	 ebx
  00014	8b d9		 mov	 ebx, ecx
  00016	8b 4d 0c	 mov	 ecx, DWORD PTR _pStage$[ebp]

; 211  : 	if( !pStage || m_bSetForcePos)

  00019	85 c9		 test	 ecx, ecx
  0001b	0f 84 b4 00 00
	00		 je	 $LN2@SetStartPo
  00021	80 bb f8 08 00
	00 00		 cmp	 BYTE PTR [ebx+2296], 0
  00028	0f 85 a7 00 00
	00		 jne	 $LN2@SetStartPo

; 214  : 		return;
; 215  : 	}
; 216  : 
; 217  : 	D3DXVECTOR3 vNewPos = vPos;

  0002e	56		 push	 esi
  0002f	57		 push	 edi
  00030	8b f2		 mov	 esi, edx
  00032	8d 7d f0	 lea	 edi, DWORD PTR _vNewPos$[ebp]
  00035	a5		 movsd
  00036	a5		 movsd
  00037	a5		 movsd

; 218  : 	float fMapHeight = pStage->GetMapHeight( vPos.x, vPos.z, NULL, false, vPos.y + FLOAT1 );

  00038	b8 01 00 00 00	 mov	 eax, 1
  0003d	33 f6		 xor	 esi, esi
  0003f	d9 42 04	 fld	 DWORD PTR [edx+4]
  00042	89 45 ec	 mov	 DWORD PTR tv220[ebp], eax
  00045	56		 push	 esi
  00046	db 45 ec	 fild	 DWORD PTR tv220[ebp]
  00049	85 c0		 test	 eax, eax
  0004b	79 06		 jns	 SHORT $LN12@SetStartPo
  0004d	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN12@SetStartPo:
  00053	f3 0f 10 42 08	 movss	 xmm0, DWORD PTR [edx+8]
  00058	de c1		 faddp	 ST(1), ST(0)
  0005a	51		 push	 ecx
  0005b	d9 5d ec	 fstp	 DWORD PTR tv217[ebp]
  0005e	d9 45 ec	 fld	 DWORD PTR tv217[ebp]
  00061	d9 1c 24	 fstp	 DWORD PTR [esp]
  00064	56		 push	 esi
  00065	56		 push	 esi
  00066	51		 push	 ecx
  00067	51		 push	 ecx
  00068	f3 0f 11 44 24
	04		 movss	 DWORD PTR [esp+4], xmm0
  0006e	f3 0f 10 02	 movss	 xmm0, DWORD PTR [edx]
  00072	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00077	e8 00 00 00 00	 call	 ?GetMapHeight@ioPlayStage@@QAEMMMPBVioGameEntity@@_NM1@Z ; ioPlayStage::GetMapHeight
  0007c	d9 5d ec	 fstp	 DWORD PTR _fMapHeight$[ebp]

; 219  : 
; 220  : 	if( fMapHeight <= FLOAT1 )

  0007f	b8 01 00 00 00	 mov	 eax, 1
  00084	d9 45 ec	 fld	 DWORD PTR _fMapHeight$[ebp]
  00087	89 45 e8	 mov	 DWORD PTR tv206[ebp], eax
  0008a	db 45 e8	 fild	 DWORD PTR tv206[ebp]
  0008d	85 c0		 test	 eax, eax
  0008f	79 06		 jns	 SHORT $LN13@SetStartPo
  00091	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN13@SetStartPo:
  00097	5f		 pop	 edi
  00098	df f1		 fcomip	 ST(1)
  0009a	dd d8		 fstp	 ST(0)
  0009c	5e		 pop	 esi
  0009d	72 15		 jb	 SHORT $LN1@SetStartPo

; 221  : 	{
; 222  : 		DestroyResource();

  0009f	8b 03		 mov	 eax, DWORD PTR [ebx]
  000a1	6a 00		 push	 0
  000a3	8b cb		 mov	 ecx, ebx
  000a5	ff 90 9c 00 00
	00		 call	 DWORD PTR [eax+156]

; 223  : 		SetWeaponDead();

  000ab	8b 03		 mov	 eax, DWORD PTR [ebx]
  000ad	8b cb		 mov	 ecx, ebx
  000af	ff 50 4c	 call	 DWORD PTR [eax+76]

; 224  : 		return;

  000b2	eb 29		 jmp	 SHORT $LN4@SetStartPo
$LN1@SetStartPo:

; 225  : 	}
; 226  : 
; 227  : 	vNewPos.y = fMapHeight + FLOAT1;

  000b4	b8 01 00 00 00	 mov	 eax, 1
  000b9	89 45 e8	 mov	 DWORD PTR tv198[ebp], eax
  000bc	db 45 e8	 fild	 DWORD PTR tv198[ebp]
  000bf	85 c0		 test	 eax, eax
  000c1	79 06		 jns	 SHORT $LN14@SetStartPo
  000c3	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN14@SetStartPo:
  000c9	d8 45 ec	 fadd	 DWORD PTR _fMapHeight$[ebp]

; 228  : 	SetPosition( vNewPos );

  000cc	8d 45 f0	 lea	 eax, DWORD PTR _vNewPos$[ebp]
  000cf	50		 push	 eax
  000d0	d9 5d f4	 fstp	 DWORD PTR _vNewPos$[ebp+4]
  000d3	eb 01		 jmp	 SHORT $LN15@SetStartPo
$LN2@SetStartPo:

; 212  : 	{
; 213  : 		SetPosition( vPos );

  000d5	52		 push	 edx
$LN15@SetStartPo:
  000d6	8b cb		 mov	 ecx, ebx
  000d8	e8 00 00 00 00	 call	 ?SetPosition@ioWeapon@@QAEXABUD3DXVECTOR3@@@Z ; ioWeapon::SetPosition
$LN4@SetStartPo:

; 229  : }

  000dd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  000e0	33 cd		 xor	 ecx, ebp
  000e2	5b		 pop	 ebx
  000e3	e8 00 00 00 00	 call	 @__security_check_cookie@4
  000e8	c9		 leave
  000e9	c2 08 00	 ret	 8
?SetStartPosition@ioExplosionWeapon@@UAEXABUD3DXVECTOR3@@PAVioPlayStage@@@Z ENDP ; ioExplosionWeapon::SetStartPosition
_TEXT	ENDS
PUBLIC	?IsExplosion@ioExplosionWeapon@@QBE_NXZ		; ioExplosionWeapon::IsExplosion
; Function compile flags: /Ogsp
;	COMDAT ?IsExplosion@ioExplosionWeapon@@QBE_NXZ
_TEXT	SEGMENT
?IsExplosion@ioExplosionWeapon@@QBE_NXZ PROC		; ioExplosionWeapon::IsExplosion, COMDAT
; _this$ = ecx

; 233  : 	if( m_State == ES_EXPLOSION )

  00000	83 b9 94 08 00
	00 01		 cmp	 DWORD PTR [ecx+2196], 1
  00007	0f 94 c0	 sete	 al

; 234  : 		return true;
; 235  : 
; 236  : 	return false;
; 237  : }

  0000a	c3		 ret	 0
?IsExplosion@ioExplosionWeapon@@QBE_NXZ ENDP		; ioExplosionWeapon::IsExplosion
_TEXT	ENDS
EXTRN	?IsCanMineExplosion@ioWeapon@@UAE_NXZ:PROC	; ioWeapon::IsCanMineExplosion
; Function compile flags: /Ogsp
;	COMDAT ?IsCanMineExplosion@ioExplosionWeapon@@UAE_NXZ
_TEXT	SEGMENT
?IsCanMineExplosion@ioExplosionWeapon@@UAE_NXZ PROC	; ioExplosionWeapon::IsCanMineExplosion, COMDAT
; _this$ = ecx

; 240  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 241  : 	if( !ioWeapon::IsCanMineExplosion() )

  00003	e8 00 00 00 00	 call	 ?IsCanMineExplosion@ioWeapon@@UAE_NXZ ; ioWeapon::IsCanMineExplosion
  00008	84 c0		 test	 al, al
  0000a	75 02		 jne	 SHORT $LN2@IsCanMineE
  0000c	5e		 pop	 esi

; 245  : 		return false;
; 246  : 
; 247  : 	return true;
; 248  : }

  0000d	c3		 ret	 0
$LN2@IsCanMineE:

; 242  : 		return false;
; 243  : 
; 244  : 	if( !IsExplosion() )

  0000e	83 be 94 08 00
	00 01		 cmp	 DWORD PTR [esi+2196], 1
  00015	5e		 pop	 esi
  00016	0f 94 c0	 sete	 al

; 245  : 		return false;
; 246  : 
; 247  : 	return true;
; 248  : }

  00019	c3		 ret	 0
?IsCanMineExplosion@ioExplosionWeapon@@UAE_NXZ ENDP	; ioExplosionWeapon::IsCanMineExplosion
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?GetCollisionEnableTime@ioExplosionWeapon@@UBEKXZ
_TEXT	SEGMENT
?GetCollisionEnableTime@ioExplosionWeapon@@UBEKXZ PROC	; ioExplosionWeapon::GetCollisionEnableTime, COMDAT
; _this$ = ecx

; 251  : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 252  : 	if( m_State == ES_EXPLOSION )

  00003	83 be 94 08 00
	00 01		 cmp	 DWORD PTR [esi+2196], 1
  0000a	75 08		 jne	 SHORT $LN1@GetCollisi

; 253  : 		return m_dwCreatedTime;

  0000c	8b 86 d4 04 00
	00		 mov	 eax, DWORD PTR [esi+1236]
  00012	5e		 pop	 esi

; 256  : }

  00013	c3		 ret	 0
$LN1@GetCollisi:

; 254  : 
; 255  : 	return m_dwCreatedTime + GetAttribute()->m_dwCollisionDelay;

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	ff 90 3c 01 00
	00		 call	 DWORD PTR [eax+316]
  0001c	8b 80 c4 01 00
	00		 mov	 eax, DWORD PTR [eax+452]
  00022	03 86 d4 04 00
	00		 add	 eax, DWORD PTR [esi+1236]
  00028	5e		 pop	 esi

; 256  : }

  00029	c3		 ret	 0
?GetCollisionEnableTime@ioExplosionWeapon@@UBEKXZ ENDP	; ioExplosionWeapon::GetCollisionEnableTime
_TEXT	ENDS
PUBLIC	?_DECSTR@@YAXPADH@Z				; _DECSTR
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
;	COMDAT ?_DECSTR@@YAXPADH@Z
_TEXT	SEGMENT
_s$ = 8							; size = 4
_l$ = 12						; size = 4
?_DECSTR@@YAXPADH@Z PROC				; _DECSTR, COMDAT

; 40   : __forceinline void _DECSTR(char* s, int l){int i=0,l4=(l-1)/4,*p=(int*)s;s[l-1]=0;for(;i<l4;++i)*(p++)^=0xEAEBECED;for(i=l4*4;i<l-1;++i)s[i]^=0xED-i%4;}

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	8b 4d 0c	 mov	 ecx, DWORD PTR _l$[ebp]
  00006	56		 push	 esi
  00007	8b 75 08	 mov	 esi, DWORD PTR _s$[ebp]
  0000a	57		 push	 edi
  0000b	8d 79 ff	 lea	 edi, DWORD PTR [ecx-1]
  0000e	8b c7		 mov	 eax, edi
  00010	99		 cdq
  00011	83 e2 03	 and	 edx, 3
  00014	03 c2		 add	 eax, edx
  00016	c1 f8 02	 sar	 eax, 2
  00019	8b d6		 mov	 edx, esi
  0001b	c6 44 0e ff 00	 mov	 BYTE PTR [esi+ecx-1], 0
  00020	85 c0		 test	 eax, eax
  00022	7e 0e		 jle	 SHORT $LN4@DECSTR
  00024	8b c8		 mov	 ecx, eax
$LL6@DECSTR:
  00026	81 32 ed ec eb
	ea		 xor	 DWORD PTR [edx], -353637139 ; eaebecedH
  0002c	83 c2 04	 add	 edx, 4
  0002f	49		 dec	 ecx
  00030	75 f4		 jne	 SHORT $LL6@DECSTR
$LN4@DECSTR:
  00032	c1 e0 02	 shl	 eax, 2
  00035	eb 17		 jmp	 SHORT $LN14@DECSTR
$LL3@DECSTR:
  00037	8b c8		 mov	 ecx, eax
  00039	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0003f	79 05		 jns	 SHORT $LN13@DECSTR
  00041	49		 dec	 ecx
  00042	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00045	41		 inc	 ecx
$LN13@DECSTR:
  00046	b2 ed		 mov	 dl, -19			; ffffffedH
  00048	2a d1		 sub	 dl, cl
  0004a	30 14 30	 xor	 BYTE PTR [eax+esi], dl
  0004d	40		 inc	 eax
$LN14@DECSTR:
  0004e	3b c7		 cmp	 eax, edi
  00050	7c e5		 jl	 SHORT $LL3@DECSTR
  00052	5f		 pop	 edi
  00053	5e		 pop	 esi
  00054	5d		 pop	 ebp
  00055	c3		 ret	 0
?_DECSTR@@YAXPADH@Z ENDP				; _DECSTR
_TEXT	ENDS
PUBLIC	??_R0?AVioGameEntity@@@8			; ioGameEntity `RTTI Type Descriptor'
PUBLIC	??_R0?AVioPlayEntity@@@8			; ioPlayEntity `RTTI Type Descriptor'
PUBLIC	?ToPlayEntity@@YAPAVioPlayEntity@@PAVioGameEntity@@@Z ; ToPlayEntity
EXTRN	___RTDynamicCast:PROC
;	COMDAT ??_R0?AVioGameEntity@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioplayentity.h
_DATA	SEGMENT
??_R0?AVioGameEntity@@@8 DD FLAT:??_7type_info@@6B@	; ioGameEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioGameEntity@@', 00H
_DATA	ENDS
;	COMDAT ??_R0?AVioPlayEntity@@@8
_DATA	SEGMENT
??_R0?AVioPlayEntity@@@8 DD FLAT:??_7type_info@@6B@	; ioPlayEntity `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioPlayEntity@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToPlayEntity@@YAPAVioPlayEntity@@PAVioGameEntity@@@Z
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
?ToPlayEntity@@YAPAVioPlayEntity@@PAVioGameEntity@@@Z PROC ; ToPlayEntity, COMDAT

; 121  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 122  : 	if( !pObj || pObj->GetTypeID() != ioGameEntity::GET_PLAY_ENTITY )

  00004	8b 75 08	 mov	 esi, DWORD PTR _pObj$[ebp]
  00007	85 f6		 test	 esi, esi
  00009	74 25		 je	 SHORT $LN1@ToPlayEnti
  0000b	8b 06		 mov	 eax, DWORD PTR [esi]
  0000d	8b ce		 mov	 ecx, esi
  0000f	ff 50 10	 call	 DWORD PTR [eax+16]
  00012	83 f8 01	 cmp	 eax, 1
  00015	75 19		 jne	 SHORT $LN1@ToPlayEnti

; 124  : 
; 125  : 	return dynamic_cast< ioPlayEntity* >( pObj );

  00017	6a 00		 push	 0
  00019	68 00 00 00 00	 push	 OFFSET ??_R0?AVioPlayEntity@@@8
  0001e	68 00 00 00 00	 push	 OFFSET ??_R0?AVioGameEntity@@@8
  00023	6a 00		 push	 0
  00025	56		 push	 esi
  00026	e8 00 00 00 00	 call	 ___RTDynamicCast
  0002b	83 c4 14	 add	 esp, 20			; 00000014H
  0002e	eb 02		 jmp	 SHORT $LN3@ToPlayEnti
$LN1@ToPlayEnti:

; 123  : 		return NULL;

  00030	33 c0		 xor	 eax, eax
$LN3@ToPlayEnti:
  00032	5e		 pop	 esi

; 126  : }

  00033	5d		 pop	 ebp
  00034	c3		 ret	 0
?ToPlayEntity@@YAPAVioPlayEntity@@PAVioGameEntity@@@Z ENDP ; ToPlayEntity
_TEXT	ENDS
PUBLIC	?IsLive@ioWeapon@@QBE_NXZ			; ioWeapon::IsLive
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioweapon.h
;	COMDAT ?IsLive@ioWeapon@@QBE_NXZ
_TEXT	SEGMENT
?IsLive@ioWeapon@@QBE_NXZ PROC				; ioWeapon::IsLive, COMDAT
; _this$ = ecx

; 533  : 	inline bool IsLive() const { return m_bLive; }

  00000	8a 81 82 05 00
	00		 mov	 al, BYTE PTR [ecx+1410]
  00006	c3		 ret	 0
?IsLive@ioWeapon@@QBE_NXZ ENDP				; ioWeapon::IsLive
_TEXT	ENDS
PUBLIC	?GetParentSceneNode@ioWeapon@@QBEPAVioSceneNode@@XZ ; ioWeapon::GetParentSceneNode
; Function compile flags: /Ogsp
;	COMDAT ?GetParentSceneNode@ioWeapon@@QBEPAVioSceneNode@@XZ
_TEXT	SEGMENT
?GetParentSceneNode@ioWeapon@@QBEPAVioSceneNode@@XZ PROC ; ioWeapon::GetParentSceneNode, COMDAT
; _this$ = ecx

; 797  : 	ioSceneNode* GetParentSceneNode() const { return m_pSceneNode; }

  00000	8b 41 04	 mov	 eax, DWORD PTR [ecx+4]
  00003	c3		 ret	 0
?GetParentSceneNode@ioWeapon@@QBEPAVioSceneNode@@XZ ENDP ; ioWeapon::GetParentSceneNode
_TEXT	ENDS
PUBLIC	??_R0?AVioBaseChar@@@8				; ioBaseChar `RTTI Type Descriptor'
PUBLIC	?ToBaseChar@@YAPAVioBaseChar@@PAVioGameEntity@@@Z ; ToBaseChar
;	COMDAT ??_R0?AVioBaseChar@@@8
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\iobasechar.h
_DATA	SEGMENT
??_R0?AVioBaseChar@@@8 DD FLAT:??_7type_info@@6B@	; ioBaseChar `RTTI Type Descriptor'
	DD	00H
	DB	'.?AVioBaseChar@@', 00H
; Function compile flags: /Ogsp
_DATA	ENDS
;	COMDAT ?ToBaseChar@@YAPAVioBaseChar@@PAVioGameEntity@@@Z
_TEXT	SEGMENT
_pObj$ = 8						; size = 4
?ToBaseChar@@YAPAVioBaseChar@@PAVioGameEntity@@@Z PROC	; ToBaseChar, COMDAT

; 4326 : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi

; 4327 : 	ioPlayEntity *pPlay = ToPlayEntity( pObj );

  00004	ff 75 08	 push	 DWORD PTR _pObj$[ebp]
  00007	e8 00 00 00 00	 call	 ?ToPlayEntity@@YAPAVioPlayEntity@@PAVioGameEntity@@@Z ; ToPlayEntity
  0000c	8b f0		 mov	 esi, eax
  0000e	59		 pop	 ecx

; 4328 : 	if( !pPlay || pPlay->GetSubType() != ioPlayEntity::PST_CHAR )

  0000f	85 f6		 test	 esi, esi
  00011	74 25		 je	 SHORT $LN1@ToBaseChar
  00013	8b 06		 mov	 eax, DWORD PTR [esi]
  00015	8b ce		 mov	 ecx, esi
  00017	ff 90 a4 00 00
	00		 call	 DWORD PTR [eax+164]
  0001d	85 c0		 test	 eax, eax
  0001f	75 17		 jne	 SHORT $LN1@ToBaseChar

; 4330 : 
; 4331 : 	return dynamic_cast< ioBaseChar* >( pPlay );

  00021	50		 push	 eax
  00022	68 00 00 00 00	 push	 OFFSET ??_R0?AVioBaseChar@@@8
  00027	68 00 00 00 00	 push	 OFFSET ??_R0?AVioPlayEntity@@@8
  0002c	50		 push	 eax
  0002d	56		 push	 esi
  0002e	e8 00 00 00 00	 call	 ___RTDynamicCast
  00033	83 c4 14	 add	 esp, 20			; 00000014H
  00036	eb 02		 jmp	 SHORT $LN3@ToBaseChar
$LN1@ToBaseChar:

; 4329 : 		return NULL;

  00038	33 c0		 xor	 eax, eax
$LN3@ToBaseChar:
  0003a	5e		 pop	 esi

; 4332 : }

  0003b	5d		 pop	 ebp
  0003c	c3		 ret	 0
?ToBaseChar@@YAPAVioBaseChar@@PAVioGameEntity@@@Z ENDP	; ToBaseChar
_TEXT	ENDS
EXTRN	??3@YAXPAX@Z:PROC				; operator delete
; Function compile flags: /Ogsp
;	COMDAT ??_GioExplosionWeapon@@UAEPAXI@Z
_TEXT	SEGMENT
___flags$ = 8						; size = 4
??_GioExplosionWeapon@@UAEPAXI@Z PROC			; ioExplosionWeapon::`scalar deleting destructor', COMDAT
; _this$ = ecx
  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx
  00006	e8 00 00 00 00	 call	 ??1ioExplosionWeapon@@UAE@XZ ; ioExplosionWeapon::~ioExplosionWeapon
  0000b	f6 45 08 01	 test	 BYTE PTR ___flags$[ebp], 1
  0000f	74 07		 je	 SHORT $LN1@scalar
  00011	56		 push	 esi
  00012	e8 00 00 00 00	 call	 ??3@YAXPAX@Z		; operator delete
  00017	59		 pop	 ecx
$LN1@scalar:
  00018	8b c6		 mov	 eax, esi
  0001a	5e		 pop	 esi
  0001b	5d		 pop	 ebp
  0001c	c2 04 00	 ret	 4
??_GioExplosionWeapon@@UAEPAXI@Z ENDP			; ioExplosionWeapon::`scalar deleting destructor'
_TEXT	ENDS
PUBLIC	?SetFireMesh@ioExplosionWeapon@@IAE_NABVioHashString@@@Z ; ioExplosionWeapon::SetFireMesh
EXTRN	__imp_?GetCollisionBox@ioEffect@@QBEABVioOrientBox@@XZ:PROC
EXTRN	__imp_?CreateEffect@ioEffectFactory@@QAEPAVioEffect@@ABVioHashString@@@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioexplosionweapon.cpp
;	COMDAT ?SetFireMesh@ioExplosionWeapon@@IAE_NABVioHashString@@@Z
_TEXT	SEGMENT
tv251 = 8						; size = 4
tv249 = 8						; size = 4
tv247 = 8						; size = 4
_szFileName$ = 8					; size = 4
?SetFireMesh@ioExplosionWeapon@@IAE_NABVioHashString@@@Z PROC ; ioExplosionWeapon::SetFireMesh, COMDAT
; _this$ = ecx

; 65   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	53		 push	 ebx

; 66   : 	m_pFireMesh = g_EffectFactory.CreateEffect( szFileName );

  00004	ff 75 08	 push	 DWORD PTR _szFileName$[ebp]
  00007	8b d9		 mov	 ebx, ecx
  00009	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioEffectFactory@@SAAAV1@XZ
  0000f	8b c8		 mov	 ecx, eax
  00011	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?CreateEffect@ioEffectFactory@@QAEPAVioEffect@@ABVioHashString@@@Z
  00017	89 83 98 08 00
	00		 mov	 DWORD PTR [ebx+2200], eax

; 67   : 	if( !m_pFireMesh )

  0001d	85 c0		 test	 eax, eax
  0001f	75 07		 jne	 SHORT $LN1@SetFireMes

; 68   : 		return false;

  00021	32 c0		 xor	 al, al
  00023	e9 a7 00 00 00	 jmp	 $LN2@SetFireMes
$LN1@SetFireMes:

; 69   : 
; 70   : 	GetParentSceneNode()->AttachObject( m_pFireMesh );

  00028	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0002b	8b 11		 mov	 edx, DWORD PTR [ecx]
  0002d	56		 push	 esi
  0002e	57		 push	 edi
  0002f	83 c0 14	 add	 eax, 20			; 00000014H
  00032	50		 push	 eax
  00033	ff 92 ac 00 00
	00		 call	 DWORD PTR [edx+172]

; 71   : 	GetParentSceneNode()->SetScale( FLOAT1, FLOAT1, FLOAT1 );

  00039	8b 4b 04	 mov	 ecx, DWORD PTR [ebx+4]
  0003c	b8 01 00 00 00	 mov	 eax, 1
  00041	8b d0		 mov	 edx, eax
  00043	b8 01 00 00 00	 mov	 eax, 1
  00048	8b f0		 mov	 esi, eax
  0004a	b8 01 00 00 00	 mov	 eax, 1
  0004f	8b 39		 mov	 edi, DWORD PTR [ecx]
  00051	89 55 08	 mov	 DWORD PTR tv251[ebp], edx
  00054	db 45 08	 fild	 DWORD PTR tv251[ebp]
  00057	85 d2		 test	 edx, edx
  00059	79 06		 jns	 SHORT $LN16@SetFireMes
  0005b	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN16@SetFireMes:
  00061	83 ec 0c	 sub	 esp, 12			; 0000000cH
  00064	89 75 08	 mov	 DWORD PTR tv249[ebp], esi
  00067	d9 5c 24 08	 fstp	 DWORD PTR [esp+8]
  0006b	db 45 08	 fild	 DWORD PTR tv249[ebp]
  0006e	85 f6		 test	 esi, esi
  00070	79 06		 jns	 SHORT $LN17@SetFireMes
  00072	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN17@SetFireMes:
  00078	89 45 08	 mov	 DWORD PTR tv247[ebp], eax
  0007b	d9 5c 24 04	 fstp	 DWORD PTR [esp+4]
  0007f	db 45 08	 fild	 DWORD PTR tv247[ebp]
  00082	85 c0		 test	 eax, eax
  00084	79 06		 jns	 SHORT $LN18@SetFireMes
  00086	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN18@SetFireMes:
  0008c	d9 1c 24	 fstp	 DWORD PTR [esp]
  0008f	ff 57 1c	 call	 DWORD PTR [edi+28]

; 72   : 
; 73   : 	m_pFireMesh->UpdateBounds( true );

  00092	8b 8b 98 08 00
	00		 mov	 ecx, DWORD PTR [ebx+2200]
  00098	83 c1 14	 add	 ecx, 20			; 00000014H
  0009b	8b 01		 mov	 eax, DWORD PTR [ecx]
  0009d	6a 01		 push	 1
  0009f	ff 50 44	 call	 DWORD PTR [eax+68]

; 74   : 	m_LocalAttackBox = m_pFireMesh->GetCollisionBox();

  000a2	8b 8b 98 08 00
	00		 mov	 ecx, DWORD PTR [ebx+2200]
  000a8	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetCollisionBox@ioEffect@@QBEABVioOrientBox@@XZ
  000ae	6a 11		 push	 17			; 00000011H
  000b0	59		 pop	 ecx

; 75   : 	
; 76   : 	AddEffectEvent( m_pFireMesh );

  000b1	ff b3 98 08 00
	00		 push	 DWORD PTR [ebx+2200]
  000b7	8b f0		 mov	 esi, eax
  000b9	8b 03		 mov	 eax, DWORD PTR [ebx]
  000bb	8d bb 9c 08 00
	00		 lea	 edi, DWORD PTR [ebx+2204]
  000c1	f3 a5		 rep movsd
  000c3	8b cb		 mov	 ecx, ebx
  000c5	ff 90 68 01 00
	00		 call	 DWORD PTR [eax+360]
  000cb	5f		 pop	 edi

; 77   : 	return true;

  000cc	b0 01		 mov	 al, 1
  000ce	5e		 pop	 esi
$LN2@SetFireMes:
  000cf	5b		 pop	 ebx

; 78   : }

  000d0	5d		 pop	 ebp
  000d1	c2 04 00	 ret	 4
?SetFireMesh@ioExplosionWeapon@@IAE_NABVioHashString@@@Z ENDP ; ioExplosionWeapon::SetFireMesh
_TEXT	ENDS
PUBLIC	?OnDelayState@ioExplosionWeapon@@IAEXMPAVioPlayStage@@@Z ; ioExplosionWeapon::OnDelayState
EXTRN	__imp_?GetLoopSec@ioFrameTimer@@QBEKXZ:PROC
EXTRN	__imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ:PROC
; Function compile flags: /Ogsp
;	COMDAT ?OnDelayState@ioExplosionWeapon@@IAEXMPAVioPlayStage@@@Z
_TEXT	SEGMENT
_fTimePerSec$ = 8					; size = 4
tv175 = 12						; size = 4
tv172 = 12						; size = 4
_pStage$ = 12						; size = 4
?OnDelayState@ioExplosionWeapon@@IAEXMPAVioPlayStage@@@Z PROC ; ioExplosionWeapon::OnDelayState, COMDAT
; _this$ = ecx

; 96   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 97   : 	if( m_dwDuration > 0 && m_dwDuration < FRAMEGETTIME() )

  00006	83 be f0 08 00
	00 00		 cmp	 DWORD PTR [esi+2288], 0
  0000d	57		 push	 edi
  0000e	76 22		 jbe	 SHORT $LN2@OnDelaySta
  00010	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  00016	8b c8		 mov	 ecx, eax
  00018	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  0001e	39 86 f0 08 00
	00		 cmp	 DWORD PTR [esi+2288], eax
  00024	73 0c		 jae	 SHORT $LN2@OnDelaySta

; 98   : 	{
; 99   : 		Explosion( pStage );

  00026	ff 75 0c	 push	 DWORD PTR _pStage$[ebp]
  00029	8b ce		 mov	 ecx, esi
  0002b	e8 00 00 00 00	 call	 ?Explosion@ioExplosionWeapon@@QAEXPAVioPlayStage@@@Z ; ioExplosionWeapon::Explosion

; 100  : 		return;

  00030	eb 39		 jmp	 SHORT $LN1@OnDelaySta
$LN2@OnDelaySta:

; 101  : 	}
; 102  : 
; 103  : 	if( m_pFireMesh )

  00032	83 be 98 08 00
	00 00		 cmp	 DWORD PTR [esi+2200], 0
  00039	74 30		 je	 SHORT $LN1@OnDelaySta

; 104  : 	{
; 105  : 		m_pFireMesh->Update( fTimePerSec * FLOAT1000 );

  0003b	b8 e8 03 00 00	 mov	 eax, 1000		; 000003e8H
  00040	8b 8e 98 08 00
	00		 mov	 ecx, DWORD PTR [esi+2200]
  00046	83 c1 14	 add	 ecx, 20			; 00000014H
  00049	8b 11		 mov	 edx, DWORD PTR [ecx]
  0004b	89 45 0c	 mov	 DWORD PTR tv175[ebp], eax
  0004e	db 45 0c	 fild	 DWORD PTR tv175[ebp]
  00051	85 c0		 test	 eax, eax
  00053	79 06		 jns	 SHORT $LN7@OnDelaySta
  00055	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN7@OnDelaySta:
  0005b	d8 4d 08	 fmul	 DWORD PTR _fTimePerSec$[ebp]
  0005e	51		 push	 ecx
  0005f	d9 5d 0c	 fstp	 DWORD PTR tv172[ebp]
  00062	d9 45 0c	 fld	 DWORD PTR tv172[ebp]
  00065	d9 1c 24	 fstp	 DWORD PTR [esp]
  00068	ff 52 40	 call	 DWORD PTR [edx+64]
$LN1@OnDelaySta:
  0006b	5f		 pop	 edi
  0006c	5e		 pop	 esi

; 106  : 	}
; 107  : }

  0006d	5d		 pop	 ebp
  0006e	c2 08 00	 ret	 8
?OnDelayState@ioExplosionWeapon@@IAEXMPAVioPlayStage@@@Z ENDP ; ioExplosionWeapon::OnDelayState
_TEXT	ENDS
EXTRN	__imp_?SetNull@ioOrientBox@@QAEXXZ:PROC
EXTRN	__imp_?Transform@ioOrientBox@@QAEXABUD3DXVECTOR3@@0ABUD3DXQUATERNION@@@Z:PROC
EXTRN	__imp_?UNIT_ALL@ioMath@@2UD3DXVECTOR3@@A:BYTE
EXTRN	?GetOrientation@ioWeapon@@QBEABUD3DXQUATERNION@@XZ:PROC ; ioWeapon::GetOrientation
EXTRN	__imp_?IsNull@ioOrientBox@@QBE_NXZ:PROC
EXTRN	__imp_?GetExtents@ioOrientBox@@QBEMH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ?UpdateWorldAttackBox@ioExplosionWeapon@@MAEXM_N@Z
_TEXT	SEGMENT
tv304 = -8						; size = 4
tv310 = -4						; size = 4
tv303 = -4						; size = 4
_fTimePerSec$ = 8					; size = 4
tv296 = 12						; size = 4
_fMapCollisionRate$ = 12				; size = 4
_bSetNull$ = 12						; size = 1
?UpdateWorldAttackBox@ioExplosionWeapon@@MAEXM_N@Z PROC	; ioExplosionWeapon::UpdateWorldAttackBox, COMDAT
; _this$ = ecx

; 139  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	51		 push	 ecx
  00005	53		 push	 ebx
  00006	8b d9		 mov	 ebx, ecx

; 140  : 	if( !IsLive() || bSetNull )

  00008	80 bb 82 05 00
	00 00		 cmp	 BYTE PTR [ebx+1410], 0
  0000f	56		 push	 esi
  00010	57		 push	 edi
  00011	0f 84 02 01 00
	00		 je	 $LN2@UpdateWorl
  00017	80 7d 0c 00	 cmp	 BYTE PTR _bSetNull$[ebp], 0
  0001b	0f 85 f8 00 00
	00		 jne	 $LN2@UpdateWorl

; 144  : 		return;
; 145  : 	}
; 146  : 
; 147  : 	m_WorldAttackBox = GetLocalAttackBox();

  00021	8b 03		 mov	 eax, DWORD PTR [ebx]
  00023	ff 90 00 01 00
	00		 call	 DWORD PTR [eax+256]
  00029	6a 11		 push	 17			; 00000011H
  0002b	59		 pop	 ecx
  0002c	8b f0		 mov	 esi, eax
  0002e	8d bb e8 04 00
	00		 lea	 edi, DWORD PTR [ebx+1256]
  00034	f3 a5		 rep movsd

; 148  : 	m_WorldAttackBoxForMap = m_WorldAttackBox;

  00036	6a 11		 push	 17			; 00000011H
  00038	8b f0		 mov	 esi, eax

; 149  : 
; 150  : 	float fMapCollisionRate = GetAttribute()->m_fMapCollisionBoxRate;

  0003a	8b 03		 mov	 eax, DWORD PTR [ebx]
  0003c	59		 pop	 ecx
  0003d	8d bb 2c 05 00
	00		 lea	 edi, DWORD PTR [ebx+1324]
  00043	f3 a5		 rep movsd
  00045	8b cb		 mov	 ecx, ebx
  00047	ff 90 3c 01 00
	00		 call	 DWORD PTR [eax+316]

; 151  : 	m_WorldAttackBoxForMap.SetExtents( 0, m_WorldAttackBox.GetExtents(0)*fMapCollisionRate );

  0004d	6a 00		 push	 0
  0004f	d9 80 a8 01 00
	00		 fld	 DWORD PTR [eax+424]
  00055	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  0005b	d9 5d 0c	 fstp	 DWORD PTR _fMapCollisionRate$[ebp]
  0005e	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetExtents@ioOrientBox@@QBEMH@Z
  00064	d8 4d 0c	 fmul	 DWORD PTR _fMapCollisionRate$[ebp]
  00067	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?SetExtents@ioOrientBox@@QAEXHM@Z
  0006d	51		 push	 ecx
  0006e	8d 8b 2c 05 00
	00		 lea	 ecx, DWORD PTR [ebx+1324]
  00074	d9 5d fc	 fstp	 DWORD PTR tv310[ebp]
  00077	d9 45 fc	 fld	 DWORD PTR tv310[ebp]
  0007a	89 4d fc	 mov	 DWORD PTR tv303[ebp], ecx
  0007d	d9 1c 24	 fstp	 DWORD PTR [esp]
  00080	6a 00		 push	 0
  00082	ff d6		 call	 esi

; 152  : 	m_WorldAttackBoxForMap.SetExtents( 1, m_WorldAttackBox.GetExtents(1)*fMapCollisionRate );

  00084	6a 01		 push	 1
  00086	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  0008c	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetExtents@ioOrientBox@@QBEMH@Z
  00092	d8 4d 0c	 fmul	 DWORD PTR _fMapCollisionRate$[ebp]
  00095	51		 push	 ecx
  00096	8b 4d fc	 mov	 ecx, DWORD PTR tv303[ebp]
  00099	d9 5d f8	 fstp	 DWORD PTR tv304[ebp]
  0009c	d9 45 f8	 fld	 DWORD PTR tv304[ebp]
  0009f	d9 1c 24	 fstp	 DWORD PTR [esp]
  000a2	6a 01		 push	 1
  000a4	ff d6		 call	 esi

; 153  : 	m_WorldAttackBoxForMap.SetExtents( 2, m_WorldAttackBox.GetExtents(2)*fMapCollisionRate );

  000a6	6a 02		 push	 2
  000a8	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  000ae	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetExtents@ioOrientBox@@QBEMH@Z
  000b4	d8 4d 0c	 fmul	 DWORD PTR _fMapCollisionRate$[ebp]
  000b7	51		 push	 ecx
  000b8	8b 4d fc	 mov	 ecx, DWORD PTR tv303[ebp]
  000bb	d9 5d 0c	 fstp	 DWORD PTR tv296[ebp]
  000be	d9 45 0c	 fld	 DWORD PTR tv296[ebp]
  000c1	d9 1c 24	 fstp	 DWORD PTR [esp]
  000c4	6a 02		 push	 2
  000c6	ff d6		 call	 esi

; 154  : 
; 155  : 	if( !m_WorldAttackBox.IsNull() )

  000c8	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  000ce	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?IsNull@ioOrientBox@@QBE_NXZ
  000d4	84 c0		 test	 al, al
  000d6	75 57		 jne	 SHORT $LN1@UpdateWorl

; 156  : 	{
; 157  : 		m_WorldAttackBox.Transform( GetPosition(), ioMath::UNIT_ALL, GetOrientation() );

  000d8	8b cb		 mov	 ecx, ebx
  000da	e8 00 00 00 00	 call	 ?GetOrientation@ioWeapon@@QBEABUD3DXQUATERNION@@XZ ; ioWeapon::GetOrientation
  000df	50		 push	 eax
  000e0	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?UNIT_ALL@ioMath@@2UD3DXVECTOR3@@A
  000e6	8b 03		 mov	 eax, DWORD PTR [ebx]
  000e8	8b cb		 mov	 ecx, ebx
  000ea	ff 50 70	 call	 DWORD PTR [eax+112]
  000ed	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?Transform@ioOrientBox@@QAEXABUD3DXVECTOR3@@0ABUD3DXQUATERNION@@@Z
  000f3	50		 push	 eax
  000f4	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  000fa	ff d6		 call	 esi

; 158  : 		m_WorldAttackBoxForMap.Transform( GetPosition(), ioMath::UNIT_ALL, GetOrientation() );

  000fc	8b cb		 mov	 ecx, ebx
  000fe	e8 00 00 00 00	 call	 ?GetOrientation@ioWeapon@@QBEABUD3DXQUATERNION@@XZ ; ioWeapon::GetOrientation
  00103	50		 push	 eax
  00104	ff 35 00 00 00
	00		 push	 DWORD PTR __imp_?UNIT_ALL@ioMath@@2UD3DXVECTOR3@@A
  0010a	8b 03		 mov	 eax, DWORD PTR [ebx]
  0010c	8b cb		 mov	 ecx, ebx
  0010e	ff 50 70	 call	 DWORD PTR [eax+112]
  00111	8b 4d fc	 mov	 ecx, DWORD PTR tv303[ebp]
  00114	50		 push	 eax
  00115	ff d6		 call	 esi
  00117	eb 16		 jmp	 SHORT $LN1@UpdateWorl
$LN2@UpdateWorl:

; 141  : 	{
; 142  : 		m_WorldAttackBox.SetNull();

  00119	8b 35 00 00 00
	00		 mov	 esi, DWORD PTR __imp_?SetNull@ioOrientBox@@QAEXXZ
  0011f	8d 8b e8 04 00
	00		 lea	 ecx, DWORD PTR [ebx+1256]
  00125	ff d6		 call	 esi

; 143  : 		m_WorldAttackBoxForMap.SetNull();

  00127	8d 8b 2c 05 00
	00		 lea	 ecx, DWORD PTR [ebx+1324]
  0012d	ff d6		 call	 esi
$LN1@UpdateWorl:
  0012f	5f		 pop	 edi
  00130	5e		 pop	 esi
  00131	5b		 pop	 ebx

; 159  : 	}
; 160  : }

  00132	c9		 leave
  00133	c2 08 00	 ret	 8
?UpdateWorldAttackBox@ioExplosionWeapon@@MAEXM_N@Z ENDP	; ioExplosionWeapon::UpdateWorldAttackBox
_TEXT	ENDS
PUBLIC	__real@00000000
;	COMDAT __real@00000000
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stdafx.h
CONST	SEGMENT
__real@00000000 DD 000000000r			; 0
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioexplosionweapon.cpp
CONST	ENDS
;	COMDAT ?IsCollision@ioExplosionWeapon@@UAE_NPAVioPlayEntity@@_N@Z
_TEXT	SEGMENT
_fTargetDist$ = -4					; size = 4
tv188 = 8						; size = 4
_pEntity$ = 8						; size = 4
_bMapCollision$ = 12					; size = 1
?IsCollision@ioExplosionWeapon@@UAE_NPAVioPlayEntity@@_N@Z PROC ; ioExplosionWeapon::IsCollision, COMDAT
; _this$ = ecx

; 188  : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	51		 push	 ecx
  00004	53		 push	 ebx
  00005	56		 push	 esi
  00006	8b f1		 mov	 esi, ecx

; 189  : 	D3DXVECTOR3 vPos = GetPosition();

  00008	8b 06		 mov	 eax, DWORD PTR [esi]
  0000a	ff 50 70	 call	 DWORD PTR [eax+112]

; 190  : 
; 191  : 	ioBaseChar* pChr = ToBaseChar( pEntity );

  0000d	8b 5d 08	 mov	 ebx, DWORD PTR _pEntity$[ebp]
  00010	53		 push	 ebx
  00011	e8 00 00 00 00	 call	 ?ToBaseChar@@YAPAVioBaseChar@@PAVioGameEntity@@@Z ; ToBaseChar
  00016	59		 pop	 ecx

; 192  : 	if( pChr )

  00017	85 c0		 test	 eax, eax
  00019	74 07		 je	 SHORT $LN4@IsCollisio

; 193  : 	{
; 194  : 		vPos = pChr->GetWorldPosition();

  0001b	8b 10		 mov	 edx, DWORD PTR [eax]
  0001d	8b c8		 mov	 ecx, eax
  0001f	ff 52 70	 call	 DWORD PTR [edx+112]
$LN4@IsCollisio:

; 195  : 	}
; 196  : 	if( m_State != ES_EXPLOSION ) 

  00022	83 be 94 08 00
	00 01		 cmp	 DWORD PTR [esi+2196], 1

; 197  : 		return false;

  00029	75 6a		 jne	 SHORT $LN1@IsCollisio

; 198  : 
; 199  : 	float fTargetDist = -FLOAT1;

  0002b	57		 push	 edi
  0002c	b8 01 00 00 00	 mov	 eax, 1
  00031	89 45 08	 mov	 DWORD PTR tv188[ebp], eax
  00034	db 45 08	 fild	 DWORD PTR tv188[ebp]
  00037	85 c0		 test	 eax, eax
  00039	79 06		 jns	 SHORT $LN9@IsCollisio
  0003b	d8 05 00 00 00
	00		 fadd	 DWORD PTR __real@4f800000
$LN9@IsCollisio:

; 200  : 	if( !pEntity->CheckSphereDistance( GetPosition(), m_fExplosionRange, fTargetDist ) )

  00041	f3 0f 10 86 f4
	08 00 00	 movss	 xmm0, DWORD PTR [esi+2292]
  00049	d9 e0		 fchs
  0004b	8b 3b		 mov	 edi, DWORD PTR [ebx]
  0004d	d9 5d fc	 fstp	 DWORD PTR _fTargetDist$[ebp]
  00050	8d 45 fc	 lea	 eax, DWORD PTR _fTargetDist$[ebp]
  00053	50		 push	 eax
  00054	8b 06		 mov	 eax, DWORD PTR [esi]
  00056	51		 push	 ecx
  00057	8b ce		 mov	 ecx, esi
  00059	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0005e	ff 50 70	 call	 DWORD PTR [eax+112]
  00061	50		 push	 eax
  00062	8b cb		 mov	 ecx, ebx
  00064	ff 97 98 00 00
	00		 call	 DWORD PTR [edi+152]
  0006a	5f		 pop	 edi
  0006b	84 c0		 test	 al, al

; 201  : 		return false;

  0006d	74 26		 je	 SHORT $LN1@IsCollisio

; 202  : 
; 203  : 	if( COMPARE( fTargetDist, 0.0f, m_fExplosionRange ) )

  0006f	f3 0f 10 45 fc	 movss	 xmm0, DWORD PTR _fTargetDist$[ebp]
  00074	0f 2f 05 00 00
	00 00		 comiss	 xmm0, DWORD PTR __real@00000000
  0007b	72 18		 jb	 SHORT $LN1@IsCollisio
  0007d	f3 0f 10 8e f4
	08 00 00	 movss	 xmm1, DWORD PTR [esi+2292]
  00085	0f 5a c0	 cvtps2pd xmm0, xmm0
  00088	0f 5a c9	 cvtps2pd xmm1, xmm1
  0008b	66 0f 2f c8	 comisd	 xmm1, xmm0
  0008f	76 04		 jbe	 SHORT $LN1@IsCollisio

; 204  : 		return true;

  00091	b0 01		 mov	 al, 1
  00093	eb 02		 jmp	 SHORT $LN5@IsCollisio
$LN1@IsCollisio:

; 205  : 
; 206  : 	return false;

  00095	32 c0		 xor	 al, al
$LN5@IsCollisio:
  00097	5e		 pop	 esi
  00098	5b		 pop	 ebx

; 207  : }

  00099	c9		 leave
  0009a	c2 08 00	 ret	 8
?IsCollision@ioExplosionWeapon@@UAE_NPAVioPlayEntity@@_N@Z ENDP ; ioExplosionWeapon::IsCollision
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadFloat_e@$0BA@@ioINILoader@@QAEMAAY0BA@$$CBDM@Z ; ioINILoader::LoadFloat_e<16>
EXTRN	__imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z:PROC
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\io3dengine\ioiniloader.h
;	COMDAT ??$LoadFloat_e@$0BA@@ioINILoader@@QAEMAAY0BA@$$CBDM@Z
_TEXT	SEGMENT
__k$ = -24						; size = 16
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_f$ = 12						; size = 4
??$LoadFloat_e@$0BA@@ioINILoader@@QAEMAAY0BA@$$CBDM@Z PROC ; ioINILoader::LoadFloat_e<16>, COMDAT
; _this$ = ecx

; 135  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 136  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 8c 01 00
	00		 je	 $LN96@LoadFloat_
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 75 01 00
	00		 je	 $LN95@LoadFloat_
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 5e 01 00
	00		 je	 $LN94@LoadFloat_
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 46 01 00
	00		 je	 $LN93@LoadFloat_
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 2f 01 00
	00		 je	 $LN92@LoadFloat_
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 18 01 00
	00		 je	 $LN91@LoadFloat_
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 02 01 00
	00		 je	 $LN90@LoadFloat_
  00087	32 d1		 xor	 dl, cl
  00089	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 ec 00 00
	00		 je	 $LN89@LoadFloat_
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 d5 00 00
	00		 je	 $LN88@LoadFloat_
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 be 00 00
	00		 je	 $LN87@LoadFloat_
  000b9	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bc	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 a8 00 00
	00		 je	 $LN86@LoadFloat_
  000ca	32 d1		 xor	 dl, cl
  000cc	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 92 00 00
	00		 je	 $LN85@LoadFloat_
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	74 7f		 je	 SHORT $LN84@LoadFloat_
  000e7	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ea	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000ed	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f0	84 d2		 test	 dl, dl
  000f2	74 6c		 je	 SHORT $LN83@LoadFloat_
  000f4	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000f7	88 55 f5	 mov	 BYTE PTR __k$[ebp+13], dl
  000fa	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000fd	84 d2		 test	 dl, dl
  000ff	74 5a		 je	 SHORT $LN82@LoadFloat_
  00101	32 d1		 xor	 dl, cl
  00103	80 78 0f 00	 cmp	 BYTE PTR [eax+15], 0
  00107	88 55 f6	 mov	 BYTE PTR __k$[ebp+14], dl
  0010a	0f 84 a0 00 00
	00		 je	 $LN1@LoadFloat_
  00110	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00113	84 d2		 test	 dl, dl
  00115	74 3e		 je	 SHORT $LN80@LoadFloat_
  00117	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0011a	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  0011d	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  00120	84 d2		 test	 dl, dl
  00122	74 2b		 je	 SHORT $LN79@LoadFloat_
  00124	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00127	88 55 f9	 mov	 BYTE PTR __k$[ebp+17], dl
  0012a	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  0012d	84 d2		 test	 dl, dl
  0012f	74 19		 je	 SHORT $LN78@LoadFloat_
  00131	8a 40 13	 mov	 al, BYTE PTR [eax+19]
  00134	32 d1		 xor	 dl, cl
  00136	88 55 fa	 mov	 BYTE PTR __k$[ebp+18], dl
  00139	84 c0		 test	 al, al
  0013b	74 07		 je	 SHORT $LN77@LoadFloat_
  0013d	34 ea		 xor	 al, -22			; ffffffeaH
  0013f	88 45 fb	 mov	 BYTE PTR __k$[ebp+19], al
  00142	eb 6c		 jmp	 SHORT $LN1@LoadFloat_
$LN77@LoadFloat_:
  00144	c6 45 fb ea	 mov	 BYTE PTR __k$[ebp+19], -22 ; ffffffeaH
  00148	eb 66		 jmp	 SHORT $LN1@LoadFloat_
$LN78@LoadFloat_:
  0014a	88 4d fa	 mov	 BYTE PTR __k$[ebp+18], cl
  0014d	eb 61		 jmp	 SHORT $LN1@LoadFloat_
$LN79@LoadFloat_:
  0014f	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+17], -20 ; ffffffecH
  00153	eb 5b		 jmp	 SHORT $LN1@LoadFloat_
$LN80@LoadFloat_:
  00155	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00159	eb 55		 jmp	 SHORT $LN1@LoadFloat_
$LN82@LoadFloat_:
  0015b	88 4d f6	 mov	 BYTE PTR __k$[ebp+14], cl
  0015e	eb 50		 jmp	 SHORT $LN1@LoadFloat_
$LN83@LoadFloat_:
  00160	c6 45 f5 ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  00164	eb 4a		 jmp	 SHORT $LN1@LoadFloat_
$LN84@LoadFloat_:
  00166	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  0016a	eb 44		 jmp	 SHORT $LN1@LoadFloat_
$LN85@LoadFloat_:
  0016c	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00170	eb 3e		 jmp	 SHORT $LN1@LoadFloat_
$LN86@LoadFloat_:
  00172	88 4d f2	 mov	 BYTE PTR __k$[ebp+10], cl
  00175	eb 39		 jmp	 SHORT $LN1@LoadFloat_
$LN87@LoadFloat_:
  00177	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  0017b	eb 33		 jmp	 SHORT $LN1@LoadFloat_
$LN88@LoadFloat_:
  0017d	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00181	eb 2d		 jmp	 SHORT $LN1@LoadFloat_
$LN89@LoadFloat_:
  00183	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  00187	eb 27		 jmp	 SHORT $LN1@LoadFloat_
$LN90@LoadFloat_:
  00189	88 4d ee	 mov	 BYTE PTR __k$[ebp+6], cl
  0018c	eb 22		 jmp	 SHORT $LN1@LoadFloat_
$LN91@LoadFloat_:
  0018e	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00192	eb 1c		 jmp	 SHORT $LN1@LoadFloat_
$LN92@LoadFloat_:
  00194	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00198	eb 16		 jmp	 SHORT $LN1@LoadFloat_
$LN93@LoadFloat_:
  0019a	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  0019e	eb 10		 jmp	 SHORT $LN1@LoadFloat_
$LN94@LoadFloat_:
  001a0	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  001a4	eb 0a		 jmp	 SHORT $LN1@LoadFloat_
$LN95@LoadFloat_:
  001a6	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  001aa	eb 04		 jmp	 SHORT $LN1@LoadFloat_
$LN96@LoadFloat_:
  001ac	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadFloat_:
  001b0	6a 03		 push	 3
  001b2	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001b5	c6 45 f7 00	 mov	 BYTE PTR __k$[ebp+15], 0
  001b9	5a		 pop	 edx
$LL104@LoadFloat_:
  001ba	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001c0	83 c0 04	 add	 eax, 4
  001c3	4a		 dec	 edx
  001c4	75 f4		 jne	 SHORT $LL104@LoadFloat_
  001c6	6a 0c		 push	 12			; 0000000cH
  001c8	58		 pop	 eax
$LL101@LoadFloat_:
  001c9	8b c8		 mov	 ecx, eax
  001cb	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  001d1	79 05		 jns	 SHORT $LN111@LoadFloat_
  001d3	49		 dec	 ecx
  001d4	83 c9 fc	 or	 ecx, -4			; fffffffcH
  001d7	41		 inc	 ecx
$LN111@LoadFloat_:
  001d8	b2 ed		 mov	 dl, -19			; ffffffedH
  001da	2a d1		 sub	 dl, cl
  001dc	30 54 05 e8	 xor	 BYTE PTR __k$[ebp+eax], dl
  001e0	40		 inc	 eax
  001e1	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  001e4	7c e3		 jl	 SHORT $LL101@LoadFloat_

; 137  : 		return LoadFloat(_k, f);

  001e6	f3 0f 10 45 0c	 movss	 xmm0, DWORD PTR _f$[ebp]
  001eb	51		 push	 ecx
  001ec	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001ef	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  001f4	50		 push	 eax
  001f5	8b ce		 mov	 ecx, esi
  001f7	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z

; 138  : 	}

  001fd	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00200	33 cd		 xor	 ecx, ebp
  00202	5e		 pop	 esi
  00203	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00208	c9		 leave
  00209	c2 08 00	 ret	 8
??$LoadFloat_e@$0BA@@ioINILoader@@QAEMAAY0BA@$$CBDM@Z ENDP ; ioINILoader::LoadFloat_e<16>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadInt_e@$0BD@@ioINILoader@@QAEHAAY0BD@$$CBDH@Z ; ioINILoader::LoadInt_e<19>
EXTRN	__imp_?LoadInt@ioINILoader@@QAEHPBDH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadInt_e@$0BD@@ioINILoader@@QAEHAAY0BD@$$CBDH@Z
_TEXT	SEGMENT
__k$ = -28						; size = 19
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_i$ = 12						; size = 4
??$LoadInt_e@$0BD@@ioINILoader@@QAEHAAY0BD@$$CBDH@Z PROC ; ioINILoader::LoadInt_e<19>, COMDAT
; _this$ = ecx

; 118  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 1c	 sub	 esp, 28			; 0000001cH
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 119  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 cf 01 00
	00		 je	 $LN96@LoadInt_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e4	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 b8 01 00
	00		 je	 $LN95@LoadInt_e
  00031	b1 ec		 mov	 cl, -20			; ffffffecH
  00033	32 d1		 xor	 dl, cl
  00035	88 55 e5	 mov	 BYTE PTR __k$[ebp+1], dl
  00038	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003b	84 d2		 test	 dl, dl
  0003d	0f 84 a0 01 00
	00		 je	 $LN94@LoadInt_e
  00043	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00046	88 55 e6	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 89 01 00
	00		 je	 $LN93@LoadInt_e
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 e7	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 72 01 00
	00		 je	 $LN92@LoadInt_e
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 e8	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 5c 01 00
	00		 je	 $LN91@LoadInt_e
  00076	32 d1		 xor	 dl, cl
  00078	88 55 e9	 mov	 BYTE PTR __k$[ebp+5], dl
  0007b	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007e	84 d2		 test	 dl, dl
  00080	0f 84 46 01 00
	00		 je	 $LN90@LoadInt_e
  00086	80 f2 eb	 xor	 dl, -21			; ffffffebH
  00089	88 55 ea	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 2f 01 00
	00		 je	 $LN89@LoadInt_e
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 eb	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 18 01 00
	00		 je	 $LN88@LoadInt_e
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 ec	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 02 01 00
	00		 je	 $LN87@LoadInt_e
  000b9	32 d1		 xor	 dl, cl
  000bb	88 55 ed	 mov	 BYTE PTR __k$[ebp+9], dl
  000be	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c1	84 d2		 test	 dl, dl
  000c3	0f 84 ec 00 00
	00		 je	 $LN86@LoadInt_e
  000c9	80 f2 eb	 xor	 dl, -21			; ffffffebH
  000cc	88 55 ee	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	0f 84 d5 00 00
	00		 je	 $LN85@LoadInt_e
  000da	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000dd	88 55 ef	 mov	 BYTE PTR __k$[ebp+11], dl
  000e0	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000e3	84 d2		 test	 dl, dl
  000e5	0f 84 be 00 00
	00		 je	 $LN84@LoadInt_e
  000eb	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ee	88 55 f0	 mov	 BYTE PTR __k$[ebp+12], dl
  000f1	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000f4	84 d2		 test	 dl, dl
  000f6	0f 84 a8 00 00
	00		 je	 $LN83@LoadInt_e
  000fc	32 d1		 xor	 dl, cl
  000fe	88 55 f1	 mov	 BYTE PTR __k$[ebp+13], dl
  00101	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  00104	84 d2		 test	 dl, dl
  00106	0f 84 92 00 00
	00		 je	 $LN82@LoadInt_e
  0010c	80 f2 eb	 xor	 dl, -21			; ffffffebH
  0010f	88 55 f2	 mov	 BYTE PTR __k$[ebp+14], dl
  00112	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00115	84 d2		 test	 dl, dl
  00117	74 7f		 je	 SHORT $LN81@LoadInt_e
  00119	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0011c	88 55 f3	 mov	 BYTE PTR __k$[ebp+15], dl
  0011f	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  00122	84 d2		 test	 dl, dl
  00124	74 6c		 je	 SHORT $LN80@LoadInt_e
  00126	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00129	88 55 f4	 mov	 BYTE PTR __k$[ebp+16], dl
  0012c	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0012f	84 d2		 test	 dl, dl
  00131	74 5a		 je	 SHORT $LN79@LoadInt_e
  00133	32 d1		 xor	 dl, cl
  00135	80 78 12 00	 cmp	 BYTE PTR [eax+18], 0
  00139	88 55 f5	 mov	 BYTE PTR __k$[ebp+17], dl
  0013c	0f 84 b1 00 00
	00		 je	 $LN1@LoadInt_e
  00142	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  00145	84 d2		 test	 dl, dl
  00147	74 3e		 je	 SHORT $LN77@LoadInt_e
  00149	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0014c	88 55 f7	 mov	 BYTE PTR __k$[ebp+19], dl
  0014f	8a 50 14	 mov	 dl, BYTE PTR [eax+20]
  00152	84 d2		 test	 dl, dl
  00154	74 2b		 je	 SHORT $LN76@LoadInt_e
  00156	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00159	88 55 f8	 mov	 BYTE PTR __k$[ebp+20], dl
  0015c	8a 50 15	 mov	 dl, BYTE PTR [eax+21]
  0015f	84 d2		 test	 dl, dl
  00161	74 19		 je	 SHORT $LN75@LoadInt_e
  00163	8a 40 16	 mov	 al, BYTE PTR [eax+22]
  00166	32 d1		 xor	 dl, cl
  00168	88 55 f9	 mov	 BYTE PTR __k$[ebp+21], dl
  0016b	84 c0		 test	 al, al
  0016d	74 07		 je	 SHORT $LN74@LoadInt_e
  0016f	34 eb		 xor	 al, -21			; ffffffebH
  00171	88 45 fa	 mov	 BYTE PTR __k$[ebp+22], al
  00174	eb 7d		 jmp	 SHORT $LN1@LoadInt_e
$LN74@LoadInt_e:
  00176	c6 45 fa eb	 mov	 BYTE PTR __k$[ebp+22], -21 ; ffffffebH
  0017a	eb 77		 jmp	 SHORT $LN1@LoadInt_e
$LN75@LoadInt_e:
  0017c	88 4d f9	 mov	 BYTE PTR __k$[ebp+21], cl
  0017f	eb 72		 jmp	 SHORT $LN1@LoadInt_e
$LN76@LoadInt_e:
  00181	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  00185	eb 6c		 jmp	 SHORT $LN1@LoadInt_e
$LN77@LoadInt_e:
  00187	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+19], -22 ; ffffffeaH
  0018b	eb 66		 jmp	 SHORT $LN1@LoadInt_e
$LN79@LoadInt_e:
  0018d	88 4d f5	 mov	 BYTE PTR __k$[ebp+17], cl
  00190	eb 61		 jmp	 SHORT $LN1@LoadInt_e
$LN80@LoadInt_e:
  00192	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00196	eb 5b		 jmp	 SHORT $LN1@LoadInt_e
$LN81@LoadInt_e:
  00198	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  0019c	eb 55		 jmp	 SHORT $LN1@LoadInt_e
$LN82@LoadInt_e:
  0019e	c6 45 f2 eb	 mov	 BYTE PTR __k$[ebp+14], -21 ; ffffffebH
  001a2	eb 4f		 jmp	 SHORT $LN1@LoadInt_e
$LN83@LoadInt_e:
  001a4	88 4d f1	 mov	 BYTE PTR __k$[ebp+13], cl
  001a7	eb 4a		 jmp	 SHORT $LN1@LoadInt_e
$LN84@LoadInt_e:
  001a9	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  001ad	eb 44		 jmp	 SHORT $LN1@LoadInt_e
$LN85@LoadInt_e:
  001af	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  001b3	eb 3e		 jmp	 SHORT $LN1@LoadInt_e
$LN86@LoadInt_e:
  001b5	c6 45 ee eb	 mov	 BYTE PTR __k$[ebp+10], -21 ; ffffffebH
  001b9	eb 38		 jmp	 SHORT $LN1@LoadInt_e
$LN87@LoadInt_e:
  001bb	88 4d ed	 mov	 BYTE PTR __k$[ebp+9], cl
  001be	eb 33		 jmp	 SHORT $LN1@LoadInt_e
$LN88@LoadInt_e:
  001c0	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  001c4	eb 2d		 jmp	 SHORT $LN1@LoadInt_e
$LN89@LoadInt_e:
  001c6	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  001ca	eb 27		 jmp	 SHORT $LN1@LoadInt_e
$LN90@LoadInt_e:
  001cc	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+6], -21 ; ffffffebH
  001d0	eb 21		 jmp	 SHORT $LN1@LoadInt_e
$LN91@LoadInt_e:
  001d2	88 4d e9	 mov	 BYTE PTR __k$[ebp+5], cl
  001d5	eb 1c		 jmp	 SHORT $LN1@LoadInt_e
$LN92@LoadInt_e:
  001d7	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  001db	eb 16		 jmp	 SHORT $LN1@LoadInt_e
$LN93@LoadInt_e:
  001dd	c6 45 e7 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  001e1	eb 10		 jmp	 SHORT $LN1@LoadInt_e
$LN94@LoadInt_e:
  001e3	c6 45 e6 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  001e7	eb 0a		 jmp	 SHORT $LN1@LoadInt_e
$LN95@LoadInt_e:
  001e9	c6 45 e5 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  001ed	eb 04		 jmp	 SHORT $LN1@LoadInt_e
$LN96@LoadInt_e:
  001ef	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadInt_e:
  001f3	6a 04		 push	 4
  001f5	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  001f8	c6 45 f6 00	 mov	 BYTE PTR __k$[ebp+18], 0
  001fc	5a		 pop	 edx
$LL104@LoadInt_e:
  001fd	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00203	83 c0 04	 add	 eax, 4
  00206	4a		 dec	 edx
  00207	75 f4		 jne	 SHORT $LL104@LoadInt_e
  00209	6a 10		 push	 16			; 00000010H
  0020b	58		 pop	 eax
$LL101@LoadInt_e:
  0020c	8b c8		 mov	 ecx, eax
  0020e	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  00214	79 05		 jns	 SHORT $LN111@LoadInt_e
  00216	49		 dec	 ecx
  00217	83 c9 fc	 or	 ecx, -4			; fffffffcH
  0021a	41		 inc	 ecx
$LN111@LoadInt_e:
  0021b	b2 ed		 mov	 dl, -19			; ffffffedH
  0021d	2a d1		 sub	 dl, cl
  0021f	30 54 05 e4	 xor	 BYTE PTR __k$[ebp+eax], dl
  00223	40		 inc	 eax
  00224	83 f8 12	 cmp	 eax, 18			; 00000012H
  00227	7c e3		 jl	 SHORT $LL101@LoadInt_e

; 120  : 		return LoadInt(_k, i);

  00229	ff 75 0c	 push	 DWORD PTR _i$[ebp]
  0022c	8d 45 e4	 lea	 eax, DWORD PTR __k$[ebp]
  0022f	50		 push	 eax
  00230	8b ce		 mov	 ecx, esi
  00232	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z

; 121  : 	}

  00238	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  0023b	33 cd		 xor	 ecx, ebp
  0023d	5e		 pop	 esi
  0023e	e8 00 00 00 00	 call	 @__security_check_cookie@4
  00243	c9		 leave
  00244	c2 08 00	 ret	 8
??$LoadInt_e@$0BD@@ioINILoader@@QAEHAAY0BD@$$CBDH@Z ENDP ; ioINILoader::LoadInt_e<19>
_TEXT	ENDS
PUBLIC	_this$GSCopy$
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadString_e@$0BG@@ioINILoader@@QAEXAAY0BG@$$CBDAAY00$$CBDPADH@Z ; ioINILoader::LoadString_e<22>
EXTRN	__imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadString_e@$0BG@@ioINILoader@@QAEXAAY0BG@$$CBDAAY00$$CBDPADH@Z
_TEXT	SEGMENT
_this$GSCopy$ = -36					; size = 4
__k$ = -32						; size = 22
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_d$ = 12						; size = 4
_b$ = 16						; size = 4
_i$ = 20						; size = 4
??$LoadString_e@$0BG@@ioINILoader@@QAEXAAY0BG@$$CBDAAY00$$CBDPADH@Z PROC ; ioINILoader::LoadString_e<22>, COMDAT
; _this$ = ecx

; 161  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 24	 sub	 esp, 36			; 00000024H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 162  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	53		 push	 ebx
  00016	56		 push	 esi
  00017	8b 75 0c	 mov	 esi, DWORD PTR _d$[ebp]
  0001a	57		 push	 edi
  0001b	8b 7d 10	 mov	 edi, DWORD PTR _b$[ebp]
  0001e	89 4d dc	 mov	 DWORD PTR _this$GSCopy$[ebp], ecx
  00021	84 d2		 test	 dl, dl
  00023	0f 84 15 02 00
	00		 je	 $LN96@LoadString
  00029	80 f2 ed	 xor	 dl, -19			; ffffffedH
  0002c	88 55 e0	 mov	 BYTE PTR __k$[ebp], dl
  0002f	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00032	84 d2		 test	 dl, dl
  00034	0f 84 fe 01 00
	00		 je	 $LN95@LoadString
  0003a	80 f2 ec	 xor	 dl, -20			; ffffffecH
  0003d	88 55 e1	 mov	 BYTE PTR __k$[ebp+1], dl
  00040	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  00043	84 d2		 test	 dl, dl
  00045	0f 84 e7 01 00
	00		 je	 $LN94@LoadString
  0004b	b1 eb		 mov	 cl, -21			; ffffffebH
  0004d	32 d1		 xor	 dl, cl
  0004f	88 55 e2	 mov	 BYTE PTR __k$[ebp+2], dl
  00052	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  00055	84 d2		 test	 dl, dl
  00057	0f 84 cf 01 00
	00		 je	 $LN93@LoadString
  0005d	b3 ea		 mov	 bl, -22			; ffffffeaH
  0005f	32 d3		 xor	 dl, bl
  00061	88 55 e3	 mov	 BYTE PTR __k$[ebp+3], dl
  00064	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  00067	84 d2		 test	 dl, dl
  00069	0f 84 b7 01 00
	00		 je	 $LN92@LoadString
  0006f	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00072	88 55 e4	 mov	 BYTE PTR __k$[ebp+4], dl
  00075	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  00078	84 d2		 test	 dl, dl
  0007a	0f 84 a0 01 00
	00		 je	 $LN91@LoadString
  00080	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00083	88 55 e5	 mov	 BYTE PTR __k$[ebp+5], dl
  00086	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  00089	84 d2		 test	 dl, dl
  0008b	0f 84 8a 01 00
	00		 je	 $LN90@LoadString
  00091	32 d1		 xor	 dl, cl
  00093	88 55 e6	 mov	 BYTE PTR __k$[ebp+6], dl
  00096	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  00099	84 d2		 test	 dl, dl
  0009b	0f 84 75 01 00
	00		 je	 $LN89@LoadString
  000a1	32 d3		 xor	 dl, bl
  000a3	88 55 e7	 mov	 BYTE PTR __k$[ebp+7], dl
  000a6	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a9	84 d2		 test	 dl, dl
  000ab	0f 84 5f 01 00
	00		 je	 $LN88@LoadString
  000b1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000b4	88 55 e8	 mov	 BYTE PTR __k$[ebp+8], dl
  000b7	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000ba	84 d2		 test	 dl, dl
  000bc	0f 84 48 01 00
	00		 je	 $LN87@LoadString
  000c2	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000c5	88 55 e9	 mov	 BYTE PTR __k$[ebp+9], dl
  000c8	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000cb	84 d2		 test	 dl, dl
  000cd	0f 84 32 01 00
	00		 je	 $LN86@LoadString
  000d3	32 d1		 xor	 dl, cl
  000d5	88 55 ea	 mov	 BYTE PTR __k$[ebp+10], dl
  000d8	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000db	84 d2		 test	 dl, dl
  000dd	0f 84 1d 01 00
	00		 je	 $LN85@LoadString
  000e3	32 d3		 xor	 dl, bl
  000e5	88 55 eb	 mov	 BYTE PTR __k$[ebp+11], dl
  000e8	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000eb	84 d2		 test	 dl, dl
  000ed	0f 84 07 01 00
	00		 je	 $LN84@LoadString
  000f3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000f6	88 55 ec	 mov	 BYTE PTR __k$[ebp+12], dl
  000f9	8a 50 0d	 mov	 dl, BYTE PTR [eax+13]
  000fc	84 d2		 test	 dl, dl
  000fe	0f 84 f0 00 00
	00		 je	 $LN83@LoadString
  00104	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00107	88 55 ed	 mov	 BYTE PTR __k$[ebp+13], dl
  0010a	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  0010d	84 d2		 test	 dl, dl
  0010f	0f 84 da 00 00
	00		 je	 $LN82@LoadString
  00115	32 d1		 xor	 dl, cl
  00117	88 55 ee	 mov	 BYTE PTR __k$[ebp+14], dl
  0011a	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  0011d	84 d2		 test	 dl, dl
  0011f	0f 84 c5 00 00
	00		 je	 $LN81@LoadString
  00125	32 d3		 xor	 dl, bl
  00127	88 55 ef	 mov	 BYTE PTR __k$[ebp+15], dl
  0012a	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  0012d	84 d2		 test	 dl, dl
  0012f	0f 84 af 00 00
	00		 je	 $LN80@LoadString
  00135	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00138	88 55 f0	 mov	 BYTE PTR __k$[ebp+16], dl
  0013b	8a 50 11	 mov	 dl, BYTE PTR [eax+17]
  0013e	84 d2		 test	 dl, dl
  00140	0f 84 98 00 00
	00		 je	 $LN79@LoadString
  00146	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00149	88 55 f1	 mov	 BYTE PTR __k$[ebp+17], dl
  0014c	8a 50 12	 mov	 dl, BYTE PTR [eax+18]
  0014f	84 d2		 test	 dl, dl
  00151	0f 84 82 00 00
	00		 je	 $LN78@LoadString
  00157	32 d1		 xor	 dl, cl
  00159	88 55 f2	 mov	 BYTE PTR __k$[ebp+18], dl
  0015c	8a 50 13	 mov	 dl, BYTE PTR [eax+19]
  0015f	84 d2		 test	 dl, dl
  00161	74 71		 je	 SHORT $LN77@LoadString
  00163	32 d3		 xor	 dl, bl
  00165	88 55 f3	 mov	 BYTE PTR __k$[ebp+19], dl
  00168	8a 50 14	 mov	 dl, BYTE PTR [eax+20]
  0016b	84 d2		 test	 dl, dl
  0016d	74 5f		 je	 SHORT $LN76@LoadString
  0016f	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00172	80 78 15 00	 cmp	 BYTE PTR [eax+21], 0
  00176	88 55 f4	 mov	 BYTE PTR __k$[ebp+20], dl
  00179	0f 84 c3 00 00
	00		 je	 $LN111@LoadString
  0017f	8a 50 16	 mov	 dl, BYTE PTR [eax+22]
  00182	84 d2		 test	 dl, dl
  00184	74 43		 je	 SHORT $LN74@LoadString
  00186	32 d1		 xor	 dl, cl
  00188	88 55 f6	 mov	 BYTE PTR __k$[ebp+22], dl
  0018b	8a 50 17	 mov	 dl, BYTE PTR [eax+23]
  0018e	84 d2		 test	 dl, dl
  00190	74 32		 je	 SHORT $LN73@LoadString
  00192	32 d3		 xor	 dl, bl
  00194	88 55 f7	 mov	 BYTE PTR __k$[ebp+23], dl
  00197	8a 50 18	 mov	 dl, BYTE PTR [eax+24]
  0019a	84 d2		 test	 dl, dl
  0019c	74 20		 je	 SHORT $LN72@LoadString
  0019e	8a 40 19	 mov	 al, BYTE PTR [eax+25]
  001a1	80 f2 ed	 xor	 dl, -19			; ffffffedH
  001a4	88 55 f8	 mov	 BYTE PTR __k$[ebp+24], dl
  001a7	84 c0		 test	 al, al
  001a9	74 0a		 je	 SHORT $LN71@LoadString
  001ab	34 ec		 xor	 al, -20			; ffffffecH
  001ad	88 45 f9	 mov	 BYTE PTR __k$[ebp+25], al
  001b0	e9 8d 00 00 00	 jmp	 $LN111@LoadString
$LN71@LoadString:
  001b5	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+25], -20 ; ffffffecH
  001b9	e9 84 00 00 00	 jmp	 $LN111@LoadString
$LN72@LoadString:
  001be	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+24], -19 ; ffffffedH
  001c2	eb 7e		 jmp	 SHORT $LN111@LoadString
$LN73@LoadString:
  001c4	88 5d f7	 mov	 BYTE PTR __k$[ebp+23], bl
  001c7	eb 79		 jmp	 SHORT $LN111@LoadString
$LN74@LoadString:
  001c9	88 4d f6	 mov	 BYTE PTR __k$[ebp+22], cl
  001cc	eb 74		 jmp	 SHORT $LN111@LoadString
$LN76@LoadString:
  001ce	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  001d2	eb 6e		 jmp	 SHORT $LN111@LoadString
$LN77@LoadString:
  001d4	88 5d f3	 mov	 BYTE PTR __k$[ebp+19], bl
  001d7	eb 69		 jmp	 SHORT $LN111@LoadString
$LN78@LoadString:
  001d9	88 4d f2	 mov	 BYTE PTR __k$[ebp+18], cl
  001dc	eb 64		 jmp	 SHORT $LN111@LoadString
$LN79@LoadString:
  001de	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+17], -20 ; ffffffecH
  001e2	eb 5e		 jmp	 SHORT $LN111@LoadString
$LN80@LoadString:
  001e4	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  001e8	eb 58		 jmp	 SHORT $LN111@LoadString
$LN81@LoadString:
  001ea	88 5d ef	 mov	 BYTE PTR __k$[ebp+15], bl
  001ed	eb 53		 jmp	 SHORT $LN111@LoadString
$LN82@LoadString:
  001ef	88 4d ee	 mov	 BYTE PTR __k$[ebp+14], cl
  001f2	eb 4e		 jmp	 SHORT $LN111@LoadString
$LN83@LoadString:
  001f4	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+13], -20 ; ffffffecH
  001f8	eb 48		 jmp	 SHORT $LN111@LoadString
$LN84@LoadString:
  001fa	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  001fe	eb 42		 jmp	 SHORT $LN111@LoadString
$LN85@LoadString:
  00200	88 5d eb	 mov	 BYTE PTR __k$[ebp+11], bl
  00203	eb 3d		 jmp	 SHORT $LN111@LoadString
$LN86@LoadString:
  00205	88 4d ea	 mov	 BYTE PTR __k$[ebp+10], cl
  00208	eb 38		 jmp	 SHORT $LN111@LoadString
$LN87@LoadString:
  0020a	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  0020e	eb 32		 jmp	 SHORT $LN111@LoadString
$LN88@LoadString:
  00210	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00214	eb 2c		 jmp	 SHORT $LN111@LoadString
$LN89@LoadString:
  00216	88 5d e7	 mov	 BYTE PTR __k$[ebp+7], bl
  00219	eb 27		 jmp	 SHORT $LN111@LoadString
$LN90@LoadString:
  0021b	88 4d e6	 mov	 BYTE PTR __k$[ebp+6], cl
  0021e	eb 22		 jmp	 SHORT $LN111@LoadString
$LN91@LoadString:
  00220	c6 45 e5 ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  00224	eb 1c		 jmp	 SHORT $LN111@LoadString
$LN92@LoadString:
  00226	c6 45 e4 ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  0022a	eb 16		 jmp	 SHORT $LN111@LoadString
$LN93@LoadString:
  0022c	c6 45 e3 ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00230	eb 10		 jmp	 SHORT $LN111@LoadString
$LN94@LoadString:
  00232	c6 45 e2 eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  00236	eb 0a		 jmp	 SHORT $LN111@LoadString
$LN95@LoadString:
  00238	c6 45 e1 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  0023c	eb 04		 jmp	 SHORT $LN111@LoadString
$LN96@LoadString:
  0023e	c6 45 e0 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN111@LoadString:
  00242	6a 05		 push	 5
  00244	8d 45 e0	 lea	 eax, DWORD PTR __k$[ebp]
  00247	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+21], 0
  0024b	5a		 pop	 edx
$LL104@LoadString:
  0024c	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00252	83 c0 04	 add	 eax, 4
  00255	4a		 dec	 edx
  00256	75 f4		 jne	 SHORT $LL104@LoadString

; 163  : 		LoadString(_k, d, b, i);

  00258	ff 75 14	 push	 DWORD PTR _i$[ebp]
  0025b	8b 4d dc	 mov	 ecx, DWORD PTR _this$GSCopy$[ebp]
  0025e	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+20], -19 ; ffffffedH
  00262	57		 push	 edi
  00263	56		 push	 esi
  00264	8d 45 e0	 lea	 eax, DWORD PTR __k$[ebp]
  00267	50		 push	 eax
  00268	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 164  : 	}

  0026e	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  00271	5f		 pop	 edi
  00272	5e		 pop	 esi
  00273	33 cd		 xor	 ecx, ebp
  00275	5b		 pop	 ebx
  00276	e8 00 00 00 00	 call	 @__security_check_cookie@4
  0027b	c9		 leave
  0027c	c2 10 00	 ret	 16			; 00000010H
??$LoadString_e@$0BG@@ioINILoader@@QAEXAAY0BG@$$CBDAAY00$$CBDPADH@Z ENDP ; ioINILoader::LoadString_e<22>
_TEXT	ENDS
PUBLIC	__$ArrayPad$
PUBLIC	??$LoadBool_e@$0O@@ioINILoader@@QAE_NAAY0O@$$CBD_N@Z ; ioINILoader::LoadBool_e<14>
EXTRN	__imp_?LoadBool@ioINILoader@@QAE_NPBD_N@Z:PROC
; Function compile flags: /Ogsp
;	COMDAT ??$LoadBool_e@$0O@@ioINILoader@@QAE_NAAY0O@$$CBD_N@Z
_TEXT	SEGMENT
__k$ = -24						; size = 14
__$ArrayPad$ = -4					; size = 4
_k$ = 8							; size = 4
_b$ = 12						; size = 1
??$LoadBool_e@$0O@@ioINILoader@@QAE_NAAY0O@$$CBD_N@Z PROC ; ioINILoader::LoadBool_e<14>, COMDAT
; _this$ = ecx

; 101  : 	{

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	83 ec 18	 sub	 esp, 24			; 00000018H
  00006	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000b	33 c5		 xor	 eax, ebp
  0000d	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00010	8b 45 08	 mov	 eax, DWORD PTR _k$[ebp]

; 102  : 		_ENCSTR(k, _k);

  00013	8a 10		 mov	 dl, BYTE PTR [eax]
  00015	56		 push	 esi
  00016	8b f1		 mov	 esi, ecx
  00018	84 d2		 test	 dl, dl
  0001a	0f 84 64 01 00
	00		 je	 $LN96@LoadBool_e
  00020	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00023	88 55 e8	 mov	 BYTE PTR __k$[ebp], dl
  00026	8a 50 01	 mov	 dl, BYTE PTR [eax+1]
  00029	84 d2		 test	 dl, dl
  0002b	0f 84 4d 01 00
	00		 je	 $LN95@LoadBool_e
  00031	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00034	88 55 e9	 mov	 BYTE PTR __k$[ebp+1], dl
  00037	8a 50 02	 mov	 dl, BYTE PTR [eax+2]
  0003a	84 d2		 test	 dl, dl
  0003c	0f 84 36 01 00
	00		 je	 $LN94@LoadBool_e
  00042	b1 eb		 mov	 cl, -21			; ffffffebH
  00044	32 d1		 xor	 dl, cl
  00046	88 55 ea	 mov	 BYTE PTR __k$[ebp+2], dl
  00049	8a 50 03	 mov	 dl, BYTE PTR [eax+3]
  0004c	84 d2		 test	 dl, dl
  0004e	0f 84 1e 01 00
	00		 je	 $LN93@LoadBool_e
  00054	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00057	88 55 eb	 mov	 BYTE PTR __k$[ebp+3], dl
  0005a	8a 50 04	 mov	 dl, BYTE PTR [eax+4]
  0005d	84 d2		 test	 dl, dl
  0005f	0f 84 07 01 00
	00		 je	 $LN92@LoadBool_e
  00065	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00068	88 55 ec	 mov	 BYTE PTR __k$[ebp+4], dl
  0006b	8a 50 05	 mov	 dl, BYTE PTR [eax+5]
  0006e	84 d2		 test	 dl, dl
  00070	0f 84 f0 00 00
	00		 je	 $LN91@LoadBool_e
  00076	80 f2 ec	 xor	 dl, -20			; ffffffecH
  00079	88 55 ed	 mov	 BYTE PTR __k$[ebp+5], dl
  0007c	8a 50 06	 mov	 dl, BYTE PTR [eax+6]
  0007f	84 d2		 test	 dl, dl
  00081	0f 84 da 00 00
	00		 je	 $LN90@LoadBool_e
  00087	32 d1		 xor	 dl, cl
  00089	88 55 ee	 mov	 BYTE PTR __k$[ebp+6], dl
  0008c	8a 50 07	 mov	 dl, BYTE PTR [eax+7]
  0008f	84 d2		 test	 dl, dl
  00091	0f 84 c4 00 00
	00		 je	 $LN89@LoadBool_e
  00097	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  0009a	88 55 ef	 mov	 BYTE PTR __k$[ebp+7], dl
  0009d	8a 50 08	 mov	 dl, BYTE PTR [eax+8]
  000a0	84 d2		 test	 dl, dl
  000a2	0f 84 ad 00 00
	00		 je	 $LN88@LoadBool_e
  000a8	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000ab	88 55 f0	 mov	 BYTE PTR __k$[ebp+8], dl
  000ae	8a 50 09	 mov	 dl, BYTE PTR [eax+9]
  000b1	84 d2		 test	 dl, dl
  000b3	0f 84 96 00 00
	00		 je	 $LN87@LoadBool_e
  000b9	80 f2 ec	 xor	 dl, -20			; ffffffecH
  000bc	88 55 f1	 mov	 BYTE PTR __k$[ebp+9], dl
  000bf	8a 50 0a	 mov	 dl, BYTE PTR [eax+10]
  000c2	84 d2		 test	 dl, dl
  000c4	0f 84 80 00 00
	00		 je	 $LN86@LoadBool_e
  000ca	32 d1		 xor	 dl, cl
  000cc	88 55 f2	 mov	 BYTE PTR __k$[ebp+10], dl
  000cf	8a 50 0b	 mov	 dl, BYTE PTR [eax+11]
  000d2	84 d2		 test	 dl, dl
  000d4	74 6e		 je	 SHORT $LN85@LoadBool_e
  000d6	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  000d9	88 55 f3	 mov	 BYTE PTR __k$[ebp+11], dl
  000dc	8a 50 0c	 mov	 dl, BYTE PTR [eax+12]
  000df	84 d2		 test	 dl, dl
  000e1	74 5b		 je	 SHORT $LN84@LoadBool_e
  000e3	80 f2 ed	 xor	 dl, -19			; ffffffedH
  000e6	80 78 0d 00	 cmp	 BYTE PTR [eax+13], 0
  000ea	88 55 f4	 mov	 BYTE PTR __k$[ebp+12], dl
  000ed	0f 84 95 00 00
	00		 je	 $LN1@LoadBool_e
  000f3	8a 50 0e	 mov	 dl, BYTE PTR [eax+14]
  000f6	84 d2		 test	 dl, dl
  000f8	74 3f		 je	 SHORT $LN82@LoadBool_e
  000fa	32 d1		 xor	 dl, cl
  000fc	88 55 f6	 mov	 BYTE PTR __k$[ebp+14], dl
  000ff	8a 50 0f	 mov	 dl, BYTE PTR [eax+15]
  00102	84 d2		 test	 dl, dl
  00104	74 2d		 je	 SHORT $LN81@LoadBool_e
  00106	80 f2 ea	 xor	 dl, -22			; ffffffeaH
  00109	88 55 f7	 mov	 BYTE PTR __k$[ebp+15], dl
  0010c	8a 50 10	 mov	 dl, BYTE PTR [eax+16]
  0010f	84 d2		 test	 dl, dl
  00111	74 1a		 je	 SHORT $LN80@LoadBool_e
  00113	8a 40 11	 mov	 al, BYTE PTR [eax+17]
  00116	80 f2 ed	 xor	 dl, -19			; ffffffedH
  00119	88 55 f8	 mov	 BYTE PTR __k$[ebp+16], dl
  0011c	84 c0		 test	 al, al
  0011e	74 07		 je	 SHORT $LN79@LoadBool_e
  00120	34 ec		 xor	 al, -20			; ffffffecH
  00122	88 45 f9	 mov	 BYTE PTR __k$[ebp+17], al
  00125	eb 61		 jmp	 SHORT $LN1@LoadBool_e
$LN79@LoadBool_e:
  00127	c6 45 f9 ec	 mov	 BYTE PTR __k$[ebp+17], -20 ; ffffffecH
  0012b	eb 5b		 jmp	 SHORT $LN1@LoadBool_e
$LN80@LoadBool_e:
  0012d	c6 45 f8 ed	 mov	 BYTE PTR __k$[ebp+16], -19 ; ffffffedH
  00131	eb 55		 jmp	 SHORT $LN1@LoadBool_e
$LN81@LoadBool_e:
  00133	c6 45 f7 ea	 mov	 BYTE PTR __k$[ebp+15], -22 ; ffffffeaH
  00137	eb 4f		 jmp	 SHORT $LN1@LoadBool_e
$LN82@LoadBool_e:
  00139	88 4d f6	 mov	 BYTE PTR __k$[ebp+14], cl
  0013c	eb 4a		 jmp	 SHORT $LN1@LoadBool_e
$LN84@LoadBool_e:
  0013e	c6 45 f4 ed	 mov	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  00142	eb 44		 jmp	 SHORT $LN1@LoadBool_e
$LN85@LoadBool_e:
  00144	c6 45 f3 ea	 mov	 BYTE PTR __k$[ebp+11], -22 ; ffffffeaH
  00148	eb 3e		 jmp	 SHORT $LN1@LoadBool_e
$LN86@LoadBool_e:
  0014a	88 4d f2	 mov	 BYTE PTR __k$[ebp+10], cl
  0014d	eb 39		 jmp	 SHORT $LN1@LoadBool_e
$LN87@LoadBool_e:
  0014f	c6 45 f1 ec	 mov	 BYTE PTR __k$[ebp+9], -20 ; ffffffecH
  00153	eb 33		 jmp	 SHORT $LN1@LoadBool_e
$LN88@LoadBool_e:
  00155	c6 45 f0 ed	 mov	 BYTE PTR __k$[ebp+8], -19 ; ffffffedH
  00159	eb 2d		 jmp	 SHORT $LN1@LoadBool_e
$LN89@LoadBool_e:
  0015b	c6 45 ef ea	 mov	 BYTE PTR __k$[ebp+7], -22 ; ffffffeaH
  0015f	eb 27		 jmp	 SHORT $LN1@LoadBool_e
$LN90@LoadBool_e:
  00161	88 4d ee	 mov	 BYTE PTR __k$[ebp+6], cl
  00164	eb 22		 jmp	 SHORT $LN1@LoadBool_e
$LN91@LoadBool_e:
  00166	c6 45 ed ec	 mov	 BYTE PTR __k$[ebp+5], -20 ; ffffffecH
  0016a	eb 1c		 jmp	 SHORT $LN1@LoadBool_e
$LN92@LoadBool_e:
  0016c	c6 45 ec ed	 mov	 BYTE PTR __k$[ebp+4], -19 ; ffffffedH
  00170	eb 16		 jmp	 SHORT $LN1@LoadBool_e
$LN93@LoadBool_e:
  00172	c6 45 eb ea	 mov	 BYTE PTR __k$[ebp+3], -22 ; ffffffeaH
  00176	eb 10		 jmp	 SHORT $LN1@LoadBool_e
$LN94@LoadBool_e:
  00178	c6 45 ea eb	 mov	 BYTE PTR __k$[ebp+2], -21 ; ffffffebH
  0017c	eb 0a		 jmp	 SHORT $LN1@LoadBool_e
$LN95@LoadBool_e:
  0017e	c6 45 e9 ec	 mov	 BYTE PTR __k$[ebp+1], -20 ; ffffffecH
  00182	eb 04		 jmp	 SHORT $LN1@LoadBool_e
$LN96@LoadBool_e:
  00184	c6 45 e8 ed	 mov	 BYTE PTR __k$[ebp], -19	; ffffffedH
$LN1@LoadBool_e:
  00188	6a 03		 push	 3
  0018a	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  0018d	c6 45 f5 00	 mov	 BYTE PTR __k$[ebp+13], 0
  00191	5a		 pop	 edx
$LL104@LoadBool_e:
  00192	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00198	83 c0 04	 add	 eax, 4
  0019b	4a		 dec	 edx
  0019c	75 f4		 jne	 SHORT $LL104@LoadBool_e

; 103  : 		return LoadBool(_k, b);

  0019e	ff 75 0c	 push	 DWORD PTR _b$[ebp]
  001a1	80 75 f4 ed	 xor	 BYTE PTR __k$[ebp+12], -19 ; ffffffedH
  001a5	8d 45 e8	 lea	 eax, DWORD PTR __k$[ebp]
  001a8	50		 push	 eax
  001a9	8b ce		 mov	 ecx, esi
  001ab	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadBool@ioINILoader@@QAE_NPBD_N@Z

; 104  : 	}

  001b1	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001b4	33 cd		 xor	 ecx, ebp
  001b6	5e		 pop	 esi
  001b7	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001bc	c9		 leave
  001bd	c2 08 00	 ret	 8
??$LoadBool_e@$0O@@ioINILoader@@QAE_NAAY0O@$$CBD_N@Z ENDP ; ioINILoader::LoadBool_e<14>
_TEXT	ENDS
EXTRN	?InitResource@ioWeapon@@UAE_NXZ:PROC		; ioWeapon::InitResource
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioexplosionweapon.cpp
;	COMDAT ?InitResource@ioExplosionWeapon@@UAE_NXZ
_TEXT	SEGMENT
?InitResource@ioExplosionWeapon@@UAE_NXZ PROC		; ioExplosionWeapon::InitResource, COMDAT
; _this$ = ecx

; 37   : {

  00000	56		 push	 esi
  00001	8b f1		 mov	 esi, ecx

; 38   : 	if( ioWeapon::InitResource() )

  00003	e8 00 00 00 00	 call	 ?InitResource@ioWeapon@@UAE_NXZ ; ioWeapon::InitResource
  00008	84 c0		 test	 al, al
  0000a	74 25		 je	 SHORT $LN1@InitResour

; 39   : 	{
; 40   : 		DestroyResource();

  0000c	8b 06		 mov	 eax, DWORD PTR [esi]
  0000e	6a 00		 push	 0
  00010	8b ce		 mov	 ecx, esi
  00012	ff 90 9c 00 00
	00		 call	 DWORD PTR [eax+156]

; 41   : 
; 42   : 		return SetFireMesh( GetAttribute()->m_WeaponEffect );

  00018	8b 06		 mov	 eax, DWORD PTR [esi]
  0001a	8b ce		 mov	 ecx, esi
  0001c	ff 90 3c 01 00
	00		 call	 DWORD PTR [eax+316]
  00022	05 34 01 00 00	 add	 eax, 308		; 00000134H
  00027	50		 push	 eax
  00028	8b ce		 mov	 ecx, esi
  0002a	e8 00 00 00 00	 call	 ?SetFireMesh@ioExplosionWeapon@@IAE_NABVioHashString@@@Z ; ioExplosionWeapon::SetFireMesh
  0002f	5e		 pop	 esi

; 46   : }

  00030	c3		 ret	 0
$LN1@InitResour:

; 43   : 	}
; 44   : 
; 45   : 	return false;

  00031	32 c0		 xor	 al, al
  00033	5e		 pop	 esi

; 46   : }

  00034	c3		 ret	 0
?InitResource@ioExplosionWeapon@@UAE_NXZ ENDP		; ioExplosionWeapon::InitResource
_TEXT	ENDS
PUBLIC	??_C@_00CNPNBAHC@?$AA@				; `string'
PUBLIC	__$ArrayPad$
EXTRN	__imp_??4ioHashString@@QAEAAV0@PBD@Z:PROC
EXTRN	?LoadProperty@ioWeapon@@UAEXAAVioINILoader@@@Z:PROC ; ioWeapon::LoadProperty
EXTRN	_memset:PROC
;	COMDAT ??_C@_00CNPNBAHC@?$AA@
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\stringprotect.h
CONST	SEGMENT
??_C@_00CNPNBAHC@?$AA@ DB 00H				; `string'
; Function compile flags: /Ogsp
; File d:\lost saga for developer\youtube\tutorial\source\src\lsclient\ioexplosionweapon.cpp
CONST	ENDS
;	COMDAT ?LoadProperty@ioExplosionWeapon@@UAEXAAVioINILoader@@@Z
_TEXT	SEGMENT
_dwDuration$ = -296					; size = 4
_szBuf$ = -292						; size = 260
__k$532170 = -32					; size = 22
__k$532045 = -32					; size = 19
__k$531920 = -28					; size = 16
__k$532295 = -24					; size = 14
__$ArrayPad$ = -4					; size = 4
_rkLoader$ = 8						; size = 4
?LoadProperty@ioExplosionWeapon@@UAEXAAVioINILoader@@@Z PROC ; ioExplosionWeapon::LoadProperty, COMDAT
; _this$ = ecx

; 49   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	81 ec 28 01 00
	00		 sub	 esp, 296		; 00000128H
  00009	a1 00 00 00 00	 mov	 eax, DWORD PTR ___security_cookie
  0000e	33 c5		 xor	 eax, ebp
  00010	89 45 fc	 mov	 DWORD PTR __$ArrayPad$[ebp], eax
  00013	53		 push	 ebx
  00014	56		 push	 esi
  00015	57		 push	 edi
  00016	8b 7d 08	 mov	 edi, DWORD PTR _rkLoader$[ebp]

; 50   : 	ioWeapon::LoadProperty( rkLoader );

  00019	57		 push	 edi
  0001a	8b f1		 mov	 esi, ecx
  0001c	e8 00 00 00 00	 call	 ?LoadProperty@ioWeapon@@UAEXAAVioINILoader@@@Z ; ioWeapon::LoadProperty

; 51   : 
; 52   : 	m_fExplosionRange = rkLoader.LoadFloat_e( "explosion_range", 0.0f );

  00021	6a 03		 push	 3
  00023	c7 45 e4 88 94
	9b 86		 mov	 DWORD PTR __k$531920[ebp], -2036624248 ; 869b9488H
  0002a	c7 45 e8 82 9f
	82 85		 mov	 DWORD PTR __k$531920[ebp+4], -2055037054 ; 85829f82H
  00031	c7 45 ec 83 b3
	99 8b		 mov	 DWORD PTR __k$531920[ebp+8], -1952861309 ; 8b99b383H
  00038	8d 45 e4	 lea	 eax, DWORD PTR __k$531920[ebp]
  0003b	33 db		 xor	 ebx, ebx
  0003d	c7 45 f0 83 8b
	8e 00		 mov	 DWORD PTR __k$531920[ebp+12], 9341827 ; 008e8b83H
  00044	59		 pop	 ecx
$LL106@LoadProper:
  00045	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  0004b	83 c0 04	 add	 eax, 4
  0004e	49		 dec	 ecx
  0004f	75 f4		 jne	 SHORT $LL106@LoadProper
  00051	6a 0c		 push	 12			; 0000000cH
  00053	58		 pop	 eax
$LL103@LoadProper:
  00054	8b c8		 mov	 ecx, eax
  00056	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  0005c	79 05		 jns	 SHORT $LN443@LoadProper
  0005e	49		 dec	 ecx
  0005f	83 c9 fc	 or	 ecx, -4			; fffffffcH
  00062	41		 inc	 ecx
$LN443@LoadProper:
  00063	b2 ed		 mov	 dl, -19			; ffffffedH
  00065	2a d1		 sub	 dl, cl
  00067	30 54 05 e4	 xor	 BYTE PTR __k$531920[ebp+eax], dl
  0006b	40		 inc	 eax
  0006c	83 f8 0f	 cmp	 eax, 15			; 0000000fH
  0006f	7c e3		 jl	 SHORT $LL103@LoadProper
  00071	0f 57 c0	 xorps	 xmm0, xmm0
  00074	51		 push	 ecx
  00075	8d 45 e4	 lea	 eax, DWORD PTR __k$531920[ebp]
  00078	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0007d	50		 push	 eax
  0007e	8b cf		 mov	 ecx, edi
  00080	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadFloat@ioINILoader@@QAEMPBDM@Z
  00086	d9 9e f4 08 00
	00		 fstp	 DWORD PTR [esi+2292]
  0008c	6a 04		 push	 4

; 53   : 
; 54   : 	DWORD dwDuration = rkLoader.LoadInt_e( "explosion_duration", 0 );

  0008e	c7 45 e0 88 94
	9b 86		 mov	 DWORD PTR __k$532045[ebp], -2036624248 ; 869b9488H
  00095	c7 45 e4 82 9f
	82 85		 mov	 DWORD PTR __k$532045[ebp+4], -2055037054 ; 85829f82H
  0009c	c7 45 e8 83 b3
	8f 9f		 mov	 DWORD PTR __k$532045[ebp+8], -1617972349 ; 9f8fb383H
  000a3	c7 45 ec 9f 8d
	9f 83		 mov	 DWORD PTR __k$532045[ebp+12], -2086695521 ; 839f8d9fH
  000aa	66 c7 45 f0 82
	82		 mov	 WORD PTR __k$532045[ebp+16], 33410 ; 00008282H
  000b0	8d 45 e0	 lea	 eax, DWORD PTR __k$532045[ebp]
  000b3	88 5d f2	 mov	 BYTE PTR __k$532045[ebp+18], bl
  000b6	59		 pop	 ecx
$LL212@LoadProper:
  000b7	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  000bd	83 c0 04	 add	 eax, 4
  000c0	49		 dec	 ecx
  000c1	75 f4		 jne	 SHORT $LL212@LoadProper
  000c3	6a 10		 push	 16			; 00000010H
  000c5	58		 pop	 eax
$LL209@LoadProper:
  000c6	8b c8		 mov	 ecx, eax
  000c8	81 e1 03 00 00
	80		 and	 ecx, -2147483645	; 80000003H
  000ce	79 05		 jns	 SHORT $LN444@LoadProper
  000d0	49		 dec	 ecx
  000d1	83 c9 fc	 or	 ecx, -4			; fffffffcH
  000d4	41		 inc	 ecx
$LN444@LoadProper:
  000d5	b2 ed		 mov	 dl, -19			; ffffffedH
  000d7	2a d1		 sub	 dl, cl
  000d9	30 54 05 e0	 xor	 BYTE PTR __k$532045[ebp+eax], dl
  000dd	40		 inc	 eax
  000de	83 f8 12	 cmp	 eax, 18			; 00000012H
  000e1	7c e3		 jl	 SHORT $LL209@LoadProper
  000e3	53		 push	 ebx
  000e4	8d 45 e0	 lea	 eax, DWORD PTR __k$532045[ebp]
  000e7	50		 push	 eax
  000e8	8b cf		 mov	 ecx, edi
  000ea	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadInt@ioINILoader@@QAEHPBDH@Z
  000f0	89 85 d8 fe ff
	ff		 mov	 DWORD PTR _dwDuration$[ebp], eax

; 55   : 	m_dwDuration = FRAMEGETTIME() + dwDuration;

  000f6	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetSingleton@ioFrameTimer@@SAAAV1@XZ
  000fc	8b c8		 mov	 ecx, eax
  000fe	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?GetLoopSec@ioFrameTimer@@QBEKXZ
  00104	03 85 d8 fe ff
	ff		 add	 eax, DWORD PTR _dwDuration$[ebp]

; 56   : 	
; 57   : 	char szBuf[MAX_PATH] = "";

  0010a	68 03 01 00 00	 push	 259			; 00000103H
  0010f	89 86 f0 08 00
	00		 mov	 DWORD PTR [esi+2288], eax
  00115	8d 85 dd fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp+1]
  0011b	53		 push	 ebx
  0011c	50		 push	 eax
  0011d	88 9d dc fe ff
	ff		 mov	 BYTE PTR _szBuf$[ebp], bl
  00123	e8 00 00 00 00	 call	 _memset
  00128	83 c4 0c	 add	 esp, 12			; 0000000cH
  0012b	6a 05		 push	 5

; 58   : 	rkLoader.LoadString_e( "explosion_boom_effect", "", szBuf, MAX_PATH );	

  0012d	c7 45 e0 88 94
	9b 86		 mov	 DWORD PTR __k$532170[ebp], -2036624248 ; 869b9488H
  00134	c7 45 e4 82 9f
	82 85		 mov	 DWORD PTR __k$532170[ebp+4], -2055037054 ; 85829f82H
  0013b	c7 45 e8 83 b3
	89 85		 mov	 DWORD PTR __k$532170[ebp+8], -2054573181 ; 8589b383H
  00142	c7 45 ec 82 81
	b4 8f		 mov	 DWORD PTR __k$532170[ebp+12], -1883995774 ; 8fb48182H
  00149	c7 45 f0 8b 8a
	8e 89		 mov	 DWORD PTR __k$532170[ebp+16], -1987147125 ; 898e8a8bH
  00150	8d 45 e0	 lea	 eax, DWORD PTR __k$532170[ebp]
  00153	66 c7 45 f4 99
	00		 mov	 WORD PTR __k$532170[ebp+20], 153 ; 00000099H
  00159	59		 pop	 ecx
$LL318@LoadProper:
  0015a	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  00160	83 c0 04	 add	 eax, 4
  00163	49		 dec	 ecx
  00164	75 f4		 jne	 SHORT $LL318@LoadProper
  00166	80 75 f4 ed	 xor	 BYTE PTR __k$532170[ebp+20], -19 ; ffffffedH
  0016a	68 04 01 00 00	 push	 260			; 00000104H
  0016f	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  00175	50		 push	 eax
  00176	68 00 00 00 00	 push	 OFFSET ??_C@_00CNPNBAHC@?$AA@
  0017b	8d 45 e0	 lea	 eax, DWORD PTR __k$532170[ebp]
  0017e	50		 push	 eax
  0017f	8b cf		 mov	 ecx, edi
  00181	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadStringA@ioINILoader@@QAEXPBD0PADH@Z

; 59   : 	m_BoomEffect = szBuf;

  00187	8d 85 dc fe ff
	ff		 lea	 eax, DWORD PTR _szBuf$[ebp]
  0018d	50		 push	 eax
  0018e	8d 8e e0 08 00
	00		 lea	 ecx, DWORD PTR [esi+2272]
  00194	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_??4ioHashString@@QAEAAV0@PBD@Z
  0019a	6a 03		 push	 3

; 60   : 
; 61   : 	m_bSetForcePos = rkLoader.LoadBool_e( "set_force_pos", false );

  0019c	c7 45 e8 9e 89
	9f b5		 mov	 DWORD PTR __k$532295[ebp], -1247835746 ; b59f899eH
  001a3	c7 45 ec 8b 83
	99 89		 mov	 DWORD PTR __k$532295[ebp+4], -1986428021 ; 8999838bH
  001aa	c7 45 f0 88 b3
	9b 85		 mov	 DWORD PTR __k$532295[ebp+8], -2053393528 ; 859bb388H
  001b1	8d 45 e8	 lea	 eax, DWORD PTR __k$532295[ebp]
  001b4	66 c7 45 f4 9e
	00		 mov	 WORD PTR __k$532295[ebp+12], 158 ; 0000009eH
  001ba	59		 pop	 ecx
$LL424@LoadProper:
  001bb	81 30 ed ec eb
	ea		 xor	 DWORD PTR [eax], -353637139 ; eaebecedH
  001c1	83 c0 04	 add	 eax, 4
  001c4	49		 dec	 ecx
  001c5	75 f4		 jne	 SHORT $LL424@LoadProper
  001c7	80 75 f4 ed	 xor	 BYTE PTR __k$532295[ebp+12], -19 ; ffffffedH
  001cb	53		 push	 ebx
  001cc	8d 45 e8	 lea	 eax, DWORD PTR __k$532295[ebp]
  001cf	50		 push	 eax
  001d0	8b cf		 mov	 ecx, edi
  001d2	ff 15 00 00 00
	00		 call	 DWORD PTR __imp_?LoadBool@ioINILoader@@QAE_NPBD_N@Z

; 62   : }

  001d8	8b 4d fc	 mov	 ecx, DWORD PTR __$ArrayPad$[ebp]
  001db	5f		 pop	 edi
  001dc	88 86 f8 08 00
	00		 mov	 BYTE PTR [esi+2296], al
  001e2	5e		 pop	 esi
  001e3	33 cd		 xor	 ecx, ebp
  001e5	5b		 pop	 ebx
  001e6	e8 00 00 00 00	 call	 @__security_check_cookie@4
  001eb	c9		 leave
  001ec	c2 04 00	 ret	 4
?LoadProperty@ioExplosionWeapon@@UAEXAAVioINILoader@@@Z ENDP ; ioExplosionWeapon::LoadProperty
; Function compile flags: /Ogsp
_TEXT	ENDS
;	COMDAT ?Process@ioExplosionWeapon@@UAEXMPAVioPlayStage@@@Z
_TEXT	SEGMENT
_fTimePerSec$ = 8					; size = 4
_pStage$ = 12						; size = 4
?Process@ioExplosionWeapon@@UAEXMPAVioPlayStage@@@Z PROC ; ioExplosionWeapon::Process, COMDAT
; _this$ = ecx

; 81   : {

  00000	55		 push	 ebp
  00001	8b ec		 mov	 ebp, esp
  00003	56		 push	 esi
  00004	8b f1		 mov	 esi, ecx

; 82   : 	switch( m_State )

  00006	8b 86 94 08 00
	00		 mov	 eax, DWORD PTR [esi+2196]
  0000c	83 e8 00	 sub	 eax, 0
  0000f	74 0a		 je	 SHORT $LN2@Process
  00011	48		 dec	 eax
  00012	75 1a		 jne	 SHORT $LN3@Process

; 86   : 		break;
; 87   : 	case ES_EXPLOSION:
; 88   : 		SetWeaponDead();

  00014	8b 06		 mov	 eax, DWORD PTR [esi]
  00016	ff 50 4c	 call	 DWORD PTR [eax+76]

; 89   : 		break;

  00019	eb 13		 jmp	 SHORT $LN3@Process
$LN2@Process:

; 83   : 	{
; 84   : 	case ES_DELAY:
; 85   : 		OnDelayState( fTimePerSec, pStage );

  0001b	ff 75 0c	 push	 DWORD PTR _pStage$[ebp]
  0001e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  00023	51		 push	 ecx
  00024	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  00029	e8 00 00 00 00	 call	 ?OnDelayState@ioExplosionWeapon@@IAEXMPAVioPlayStage@@@Z ; ioExplosionWeapon::OnDelayState
$LN3@Process:

; 90   : 	}
; 91   : 
; 92   : 	UpdateWorldAttackBox( fTimePerSec, false );

  0002e	f3 0f 10 45 08	 movss	 xmm0, DWORD PTR _fTimePerSec$[ebp]
  00033	8b 06		 mov	 eax, DWORD PTR [esi]
  00035	6a 00		 push	 0
  00037	51		 push	 ecx
  00038	8b ce		 mov	 ecx, esi
  0003a	f3 0f 11 04 24	 movss	 DWORD PTR [esp], xmm0
  0003f	ff 90 38 01 00
	00		 call	 DWORD PTR [eax+312]
  00045	5e		 pop	 esi

; 93   : }

  00046	5d		 pop	 ebp
  00047	c2 08 00	 ret	 8
?Process@ioExplosionWeapon@@UAEXMPAVioPlayStage@@@Z ENDP ; ioExplosionWeapon::Process
_TEXT	ENDS
END
